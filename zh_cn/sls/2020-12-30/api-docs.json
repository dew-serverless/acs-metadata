{"version":"1.0","info":{"style":"SLS","product":"Sls","version":"2020-12-30"},"directories":[{"id":111475,"title":"日志项目","type":"directory","children":["CreateProject","CreateDomain","CreateLogging","DeleteProject","DeleteLogging","DeleteDomain","UpdateProject","UpdateLogging","PutProjectTransferAcceleration","GetProject","ListProject","GetProjectLogs","GetLogging","ListDomains"]},{"id":111489,"title":"日志库","type":"directory","children":["CreateLogStore","CreateIndex","DeleteLogStore","DeleteIndex","PutWebtracking","UpdateLogStore","UpdateIndex","SplitShard","UpdateLogStoreMeteringMode","MergeShard","ListLogStores","GetLogStore","GetIndex","ListShards","GetLogs","UpdateLogStoreEncryption","GetCursor","GetContextLogs","GetHistograms","GetCursorTime","GetLogsV2","PullLogs","PutLogs","GetLogStoreMeteringMode"]},{"id":191749,"title":"时序库","type":"directory","children":["ListMetricStores","CreateMetricStore","DeleteMetricStore","UpdateMetricStore","UpdateMetricStoreMeteringMode","GetMetricStore","GetMetricStoreMeteringMode"]},{"id":191369,"title":"数据集","type":"directory","children":["CreateStoreView","DeleteStoreView","UpdateStoreView","GetStoreView","GetStoreViewIndex","ListStoreViews"]},{"id":111512,"title":"机器组","type":"directory","children":["CreateMachineGroup","DeleteMachineGroup","RemoveConfigFromMachineGroup","ApplyConfigToMachineGroup","UpdateMachineGroup","UpdateMachineGroupMachine","ListMachineGroup","ListMachines","GetMachineGroup","GetAppliedConfigs","GetAppliedMachineGroups"]},{"id":111526,"title":"采集配置","type":"directory","children":["CreateConfig","CreateLogtailPipelineConfig","DeleteConfig","DeleteLogtailPipelineConfig","UpdateConfig","UpdateLogtailPipelineConfig","GetConfig","ListConfig","GetLogtailPipelineConfig","ListLogtailPipelineConfig"]},{"id":186122,"title":"仪表盘","type":"directory","children":["CreateDashboard","DeleteDashboard","UpdateDashboard","GetDashboard","ListDashboard"]},{"id":111533,"title":"消费组","type":"directory","children":["CreateConsumerGroup","DeleteConsumerGroup","ConsumerGroupUpdateCheckPoint","UpdateConsumerGroup","ConsumerGroupHeartBeat","ListConsumerGroup","GetCheckPoint"]},{"id":111545,"title":"快速查询","type":"directory","children":["CreateSavedSearch","DeleteSavedSearch","UpdateSavedSearch","ListSavedSearch","GetSavedSearch"]},{"id":188843,"title":"告警","type":"directory","children":["CreateAlert","DeleteAlert","UpdateAlert","EnableAlert","DisableAlert","GetAlert","ListAlerts"]},{"id":189060,"title":"数据导入","type":"directory","children":["CreateOSSIngestion","DeleteOSSIngestion","UpdateOSSIngestion","StartOSSIngestion","StopOSSIngestion","GetOSSIngestion","ListOSSIngestions"]},{"id":111565,"title":"日志投递","type":"directory","children":["CreateOSSExport","CreateOSSHDFSExport","DeleteOSSExport","DeleteOSSHDFSExport","UpdateOSSExport","StartOSSExport","StopOSSExport","GetOSSExport","UpdateOSSHDFSExport","StartOSSHDFSExport","StopOSSHDFSExport","ListOSSExports","GetOSSHDFSExport","ListOSSHDFSExports"]},{"id":189125,"title":"数据加工","type":"directory","children":["CreateETL","DeleteETL","UpdateETL","StartETL","StopETL","ListETLs","GetETL"]},{"id":189105,"title":"定时SQL","type":"directory","children":["CreateScheduledSQL","DeleteScheduledSQL","UpdateScheduledSQL","EnableScheduledSQL","DisableScheduledSQL","ListScheduledSQLs","GetScheduledSQL"]},{"id":194858,"title":"日志下载","type":"directory","children":["CreateDownloadJob","DeleteDownloadJob","GetDownloadJob","ListDownloadJobs"]},{"id":202601,"title":"写入处理器","type":"directory","children":["PutIngestProcessor","GetIngestProcessor","ListIngestProcessors","DeleteIngestProcessor","UpdateLogStoreProcessor","UpdateMetricStoreProcessor"]},{"id":186269,"title":"机器学习","type":"directory","children":["ListAiTools","CallAiTools","CreateAnnotationLabel","PutAnnotationData","CreateAnnotationDataSet","DeleteAnnotationLabel","DeleteAnnotationData","DeleteAnnotationDataSet","UpdateAnnotationLabel","UpdateAnnotationDataSet","GetAnnotationLabel","ListAnnotationLabels","GetAnnotationData","ListAnnotationData","GetAnnotationDataSet","ListAnnotationDataSets","GetMLServiceResults"]},{"id":169520,"title":"标签","type":"directory","children":["TagResources","UntagResources","ListTagResources"]},{"id":172655,"title":"授权策略","type":"directory","children":["PutProjectPolicy","DeleteProjectPolicy","GetProjectPolicy"]},{"id":183542,"title":"资源组","type":"directory","children":["ChangeResourceGroup"]},{"id":187332,"title":"云产品采集规则","type":"directory","children":["UpsertCollectionPolicy","DeleteCollectionPolicy","ListCollectionPolicies","GetCollectionPolicy"]},{"id":190736,"title":"SQL独享实例","type":"directory","children":["CreateSqlInstance","UpdateSqlInstance","GetSqlInstance"]},{"id":190287,"title":"服务开通","type":"directory","children":["OpenSlsService","GetSlsService"]},{"id":190379,"title":"控制台内嵌","type":"directory","children":["CreateTicket","RefreshToken"]},{"id":199057,"title":"其他","type":"directory","children":["DescribeRegions","DescribeRegions","GetMaxComputeExport","CreateMaxComputeExport","DeleteMaxComputeExport","ListMaxComputeExports","StartMaxComputeExport","StopMaxComputeExport","UpdateMaxComputeExport","DeleteConsumeProcessor","GetConsumeProcessor","ListConsumeProcessors","PutConsumeProcessor"]}],"components":{"schemas":{"AgentInstanceConfigGrayConfigs":{"title":"AgentInstanceConfigGrayConfigs","type":"object","properties":{"condition":{"title":"condition","type":"string"},"content":{"title":"content","type":"string"}}},"Alert":{"title":"告警规则响应结果","description":"告警规则响应结果","type":"object","properties":{"name":{"title":"告警规则ID","description":"告警规则ID","type":"string","required":true,"example":"alert-123456"},"displayName":{"title":"告警规则名称","description":"告警规则名称","type":"string","required":true,"example":"alertNameExample"},"description":{"title":"告警规则描述","description":"告警规则描述","type":"string","example":"Alert Desc"},"configuration":{"title":"告警规则配置","description":"告警规则配置","required":true,"$ref":"#/components/schemas/AlertConfiguration"},"schedule":{"title":"调度配置","description":"调度配置","required":true,"$ref":"#/components/schemas/Schedule"},"createTime":{"title":"创建时间","description":"创建时间","type":"integer","format":"int64"},"lastModifiedTime":{"title":"最近一次修改时间","description":"最近一次修改时间","type":"integer","format":"int64"},"status":{"title":"告警状态","description":"告警状态","type":"string","example":"ENABLED/DISABLED"}}},"AlertConfiguration":{"title":"告警规则配置","description":"告警配置","type":"object","properties":{"muteUntil":{"title":"临时关闭时间","description":"临时关闭时间","type":"integer","format":"int64","example":"1698907508"},"version":{"title":"版本","description":"版本","type":"string","required":true,"example":"2.0","default":"2.0"},"type":{"title":"告警规则类型","description":"告警规则类型","type":"string","example":"default"},"templateConfiguration":{"title":"告警模板配置","description":"告警模板配置","$ref":"#/components/schemas/TemplateConfiguration"},"dashboard":{"title":"告警绑定的dashboardId","description":"告警绑定的dashboardId","type":"string","example":"dasnboardExample"},"threshold":{"title":"连续触发阈值","description":"连续触发阈值","type":"integer","format":"int32","required":true,"example":"1"},"noDataFire":{"title":"是否开启无数据告警","description":"是否开启无数据告警","type":"boolean","required":true,"example":"false"},"noDataSeverity":{"title":"无数据告警严重度","description":"无数据告警严重度","type":"integer","format":"int32","example":"6"},"sendResolved":{"title":"是否发送恢复告警","description":"是否发送恢复告警","type":"boolean","required":true,"example":"false"},"queryList":{"title":"查询语句列表","description":"查询语句列表","type":"array","items":{"$ref":"#/components/schemas/AlertQuery"},"required":true},"annotations":{"title":"告警标注","description":"告警标注","type":"array","items":{"$ref":"#/components/schemas/AlertTag"}},"labels":{"title":"告警标签","description":"告警标签","type":"array","items":{"$ref":"#/components/schemas/AlertTag"}},"conditionConfiguration":{"title":"告警触发条件","description":"告警触发条件","$ref":"#/components/schemas/ConditionConfiguration"},"severityConfigurations":{"title":"告警严重度配置","description":"告警严重度配置","type":"array","items":{"$ref":"#/components/schemas/SeverityConfiguration"},"required":true},"joinConfigurations":{"title":"告警查询分析语句集合操作配置","description":"告警查询分析语句集合操作配置","type":"array","items":{"$ref":"#/components/schemas/JoinConfiguration"}},"groupConfiguration":{"title":"分组评估配置","description":"分组评估配置","required":true,"$ref":"#/components/schemas/GroupConfiguration"},"policyConfiguration":{"title":"SLS告警通知服务配置","description":"SLS告警通知服务配置","$ref":"#/components/schemas/PolicyConfiguration"},"autoAnnotation":{"title":"是否开启自动标注","description":"是否开启自动标注","type":"boolean","required":true,"example":"false"},"sinkEventStore":{"title":"发送给EventStore配置","description":"发送给EventStore配置","$ref":"#/components/schemas/SinkEventStoreConfiguration"},"sinkCms":{"title":"发送给云监控配置","description":"发送给云监控配置","$ref":"#/components/schemas/SinkCmsConfiguration"},"sinkAlerthub":{"title":"发送给SLS告警管理服务配置","description":"发送给SLS告警管理服务配置","required":false,"$ref":"#/components/schemas/SinkAlerthubConfiguration"},"tags":{"title":"告警自定义标签","description":"告警自定义标签","type":"array","items":{"type":"string","example":"host"}}}},"AlertQuery":{"title":"告警查询分析配置","description":"告警查询分析语句配置","type":"object","properties":{"chartTitle":{"title":"图表名称","description":"图表名称","type":"string","example":"chartExmaple"},"query":{"title":"查询分析语句","description":"查询分析语句","type":"string","required":true,"example":"* | select *"},"timeSpanType":{"title":"时间片类型","description":"时间片类型","type":"string","required":true,"example":"Relative"},"start":{"title":"开始时间","description":"开始时间","type":"string","required":true,"example":"-5m"},"end":{"title":"结束时间","description":"结束时间","type":"string","required":true,"example":"now"},"storeType":{"title":"store类型","description":"store类型","type":"string","required":true,"example":"log"},"project":{"title":"项目名称","description":"项目名称","type":"string","required":true,"example":"projectExample"},"store":{"title":"store名称","description":"store名称","type":"string","required":true,"example":"store Example"},"region":{"title":"区域","description":"区域","type":"string","required":true,"example":"cn-hangzhou"},"roleArn":{"title":"角色ARN","description":"角色ARN","type":"string"},"dashboardId":{"title":"仪表盘ID","description":"仪表盘ID","type":"string","example":"dashboardExample"},"powerSqlMode":{"title":"是否开启独享SQL","description":"是否开启独享SQL","type":"string","example":"auto"},"ui":{"title":"特定场景告警前端使用","description":"特定场景告警前端使用","type":"string"}}},"AlertTag":{"title":"alertTag","description":"alert tag","type":"object","properties":{"key":{"title":"键名","description":"键名","type":"string","example":"title"},"value":{"title":"值","description":"值","type":"string","example":"example value"}}},"ConditionConfiguration":{"title":"触发条件配置","description":"触发条件配置","type":"object","properties":{"condition":{"title":"评估表达式","description":"评估表达式","type":"string","example":"cnt > 100"},"countCondition":{"title":"满足评估表达式的结果条数","description":"满足评估表达式的结果条数","type":"string","example":"__count__ > 5"}}},"ConsumeProcessor":{"title":"ConsumeProcessor","description":"ConsumeProcessor","type":"object","properties":{"processorName":{"title":"Processor ID","type":"string","required":true,"example":"consume-processor-1"},"displayName":{"title":"Processor名称","type":"string","required":true,"example":"字段过滤处理"},"description":{"title":"Processor描述","type":"string","example":"过滤content字段"},"configuration":{"title":"Processor配置","required":true,"$ref":"#/components/schemas/ConsumeProcessorConfiguration"},"createTime":{"title":"创建时间","type":"integer","format":"int64","example":"1717171200"},"updateTime":{"title":"更新时间","type":"integer","format":"int64","example":"1717171200"}}},"ConsumeProcessorConfiguration":{"title":"ConsumeProcessor配置","description":"ConsumeProcessorConfiguration","type":"object","properties":{"spl":{"title":"SPL语句","type":"string","required":true,"example":"* | project content"}}},"ConsumerGroup":{"title":"Consumer Group","description":"消费组数据结构。","type":"object","properties":{"name":{"title":"消费者名称。","description":"消费组名称。","type":"string","example":"test-consumer-group"},"timeout":{"title":"消费超时时长，单位为秒","description":"超时时间。在超时时间段内没有收到心跳，消费者将被删除。单位：秒。","type":"integer","format":"int32","example":"300"},"order":{"title":"是否有序消费","description":"是否按顺序消费。\n\n- true：在Shard中按顺序消费。Shard分裂后，先消费原Shard中数据，然后同时消费由该Shard分裂的Shard中数据。Shard合并后，先消费原Shard中数据，然后消费由原Shard合并后的新Shard中数据。\n- false：不按顺序消费。即所有同时开始消费，Shard分裂或者合并后产生的新Shard，也会立即消费。","type":"boolean","example":"false"}}},"CopilotAction":{"title":"ActionMeta","type":"object","properties":{"queryTemplate":{"title":"查询模板","type":"string"},"queryTemplateParameters":{"title":"模板参数","type":"array","items":{"type":"object","properties":{"name":{"title":"名称","type":"string"},"type":{"title":"类型","type":"string"},"prompt":{"title":"提示","type":"string"},"required":{"title":"必选","type":"string"}}}},"name":{"title":"名称","type":"string"},"action":{"title":"action","type":"string"},"description":{"title":"描述","type":"string"},"scene":{"title":"scene","type":"string"},"parameters":{"title":"参数","type":"array","items":{"type":"object","properties":{"name":{"title":"名称","type":"string"},"type":{"title":"类型","type":"string"},"prompt":{"title":"提示","type":"string"},"required":{"title":"必选","type":"string"}}}},"queryMaxLength":{"title":"查询最大长度","type":"integer","format":"int64"}}},"DeleteLogStoreLogsTask":{"title":"软删除任务","type":"object","properties":{"progress":{"title":"进度","type":"integer","format":"int32"},"taskId":{"title":"id","type":"string","required":false},"query":{"title":"使用的query","type":"string"},"errorCode":{"title":"出错时的errorCode","type":"integer","format":"int32"},"from":{"title":"起始时间","type":"integer","format":"int32"},"to":{"title":"结束时间","type":"integer","format":"int32"},"errorMessage":{"title":"出错时的errorMessage","type":"string"}}},"ETL":{"title":"ETL","description":"ETL","type":"object","properties":{"name":{"title":"任务名称","description":"job name","type":"string","required":true,"example":"etl-20240426"},"description":{"title":"任务描述","description":"job description","type":"string","example":"加工作业"},"displayName":{"title":"显示名称","description":"job displayName","type":"string","required":true,"example":"etljob"},"configuration":{"title":"数据加工配置","description":"数据加工配置","required":true,"$ref":"#/components/schemas/ETLConfiguration"},"createTime":{"title":"创建时间","description":"创建时间","type":"integer","format":"int64","required":false,"example":"1714274900"},"lastModifiedTime":{"title":"最近一次修改时间","description":"最近一次修改时间","type":"integer","format":"int64","required":false,"example":"1714274900"},"status":{"title":"加工状态","description":"加工状态，表示返回加工任务的状态，取值包括：\n1. RUNNING：运行中\n2. STOPPING: 停止中\n3. STOPPED: 已停止\n4. SUCCEEDED: 运行成功\n5. FAILED: 运行失败\n6. STARTING：启动中\n7. RESTARTING：重启中","type":"string","example":"RUNNING"},"scheduleId":{"title":"调度ID","description":"调度ID","type":"string","example":"f0eb655e501a8780808d1970ef6d04c4"}}},"ETLConfiguration":{"title":"A short description of struct","description":"ETLConfiguration","type":"object","properties":{"script":{"title":"加工脚本","description":"加工脚本","type":"string","required":true,"example":"* | extend key='value'"},"lang":{"title":"数据加工语法类型","description":"数据加工语法类型","type":"string","example":"SPL"},"logstore":{"title":"源Logstore名称","description":"源Logstore名称","type":"string","required":true,"example":"test-logstore"},"roleArn":{"title":"授权读取源Logstore的角色ARN","description":"授权读取源Logstore的角色ARN","type":"string","required":true,"example":"acs:ram::13234:role/logtarget"},"accessKeyId":{"title":"授权读取源Logstore的AccessKey ID，必填。使用角色授权时，填入空字符串","description":"授权读取源Logstore的AccessKey ID，必填。使用角色授权时，填入空字符串","type":"string","deprecated":true,"required":false},"accessKeySecret":{"title":"授权读取源Logstore的AccessKey Secret，必填。使用角色授权时，填入空字符串。","description":"授权读取源Logstore的AccessKey Secret，必填。使用角色授权时，填入空字符串。","type":"string","deprecated":true,"required":false},"fromTime":{"title":"加工时间起点时间戳（精确到秒），必填。从源Logstore中最早接收到的第一条日志开始消费时，填入0","description":"加工时间起点时间戳（精确到秒），必填。从源Logstore中最早接收到的第一条日志开始消费时，填入0","type":"integer","format":"int64","required":true,"example":"0"},"toTime":{"title":"加工时间结束时间戳（精确到秒），必填。持续消费至手动停止时，填入0","description":"加工时间结束时间戳（精确到秒），必填。持续消费至手动停止时，填入0","type":"integer","format":"int64","required":true,"example":"0"},"sinks":{"title":"加工结果输出目标列表","description":"加工结果输出目标列表","type":"array","items":{"$ref":"#/components/schemas/ETLConfigurationSink"},"required":true},"parameters":{"title":"高级参数配置","description":"高级参数配置","type":"object","example":"config.vpc.vpc_id.test1：vpc-uf6mskb0b****n9yj"}}},"ETLConfigurationSink":{"title":"A short description of struct","description":"ETLSinkObject","type":"object","properties":{"name":{"title":"输出目标名称","description":"输出目标名称","type":"string","required":true,"example":"test-etljob"},"endpoint":{"title":"目标Project所在区域的endpoint","description":"目标Project所在区域的endpoint","type":"string"},"project":{"title":"目标Project名称","description":"目标Project名称","type":"string","required":true,"example":"test-project"},"logstore":{"title":"目标Logstore名称","description":"目标Logstore名称","type":"string","required":true,"example":"test-logstore"},"datasets":{"title":"写入结果集","description":"写入结果集","type":"array","items":{"type":"string","required":true,"example":"__UNNAMED__"},"minItems":1},"roleArn":{"title":"授权写入目标Logstore的角色ARN","description":"授权写入目标Logstore的角色ARN","type":"string","required":true,"example":"acs:ram::13234:role/logtarget"},"accessKeyId":{"title":"授权写入目标Logstore的AccessKey ID","description":"授权写入目标Logstore的AccessKey ID","type":"string","deprecated":true,"required":false},"accessKeySecret":{"title":"授权写入目标Logstore的AccessKey Secret","description":"授权写入目标Logstore的AccessKey Secret","type":"string","deprecated":true,"required":false}}},"EncryptConf":{"title":"A short description of struct","description":"加密配置数据结构。","type":"object","properties":{"enable":{"title":"enable","description":"是否启用数据加密。\n\n- true：是\n- false：否","type":"boolean","required":true,"example":"true","default":"true"},"encrypt_type":{"title":"加密算法，只支持default和m4。当 enable 为 true 时，此项必选。","description":"加密算法类型，支持 default、m4、sm4_ecb、sm4_cbc、sm4_gcm、aes_ecb、aes_cbc、aes_cfb、aes_ofb、aes_gcm。当enable为true时，此项必选。","type":"string","required":false,"enumValueTitles":{"default":"default","aes_ecb":"aes_ecb","aes_cbc":"aes_cbc","aes_gcm":"aes_gcm","m4":"m4","aes_cfb":"aes_cfb","sm4_ecb":"sm4_ecb","sm4_cbc":"sm4_cbc","sm4_gcm":"sm4_gcm","aes_ofb":"aes_ofb"},"example":"default","default":"default"},"user_cmk_info":{"description":"可选字段。如果设置该字段，则表示使用自带密钥（BYOK），否则使用日志服务的服务密钥。","example":" {    \"cmk_key_id\" : \"f5136b95-2420-ab31-xxxxxxxxx\"    \"arn\" :  \"acs:ram::13234:role/logsource\"    \"region_id\" : \"cn-hangzhou\"  }","$ref":"#/components/schemas/EncryptUserCmkConf"}}},"EncryptUserCmkConf":{"title":"A short description of struct","description":"用户加密配置数据结构。","type":"object","properties":{"cmk_key_id":{"title":"cmk_key_id","description":"BYOK的主密钥ID。","type":"string","required":true,"example":"f5136b95-2420-ab31-xxxxxxxxx"},"arn":{"title":"arn","description":"RAM角色的ARN。","type":"string","required":true,"example":"acs:ram::13234:role/logsource"},"region_id":{"title":"region_id","description":"主密钥所在的地域ID。","type":"string","required":true,"example":"cn-hangzhou"}}},"GroupConfiguration":{"title":"告警分组评估配置","description":"告警分组评估配置","type":"object","properties":{"type":{"title":"分组评估类型","description":"分组评估类型","type":"string","required":true,"example":"custom"},"fields":{"title":"分组评估字段","description":"分组评估字段","type":"array","items":{"type":"string","example":"id"}}}},"Histogram":{"title":"A short description of struct","description":"日志分布情况数据结构。","type":"object","properties":{"from":{"title":"开始","description":"子时间区间的开始时间点。UNIX时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","type":"integer","format":"int32","example":"1409529600"},"to":{"title":"结束","description":"子时间区间的结束时间点。UNIX时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","type":"integer","format":"int32","example":"1409569200"},"count":{"title":"count","description":"该子时间区间内查询到的日志条数。","type":"integer","format":"int64","example":"2"},"progress":{"title":"progress","description":"当前查询结果在该子时间区间内的结果是否完整。\n\n- Complete：查询已经完成，返回结果为完整结果。\n- Incomplete：查询已经完成，返回结果为不完整结果，需要重复请求以获得完整结果。","type":"string","example":"Complete"}}},"IndexJsonKey":{"title":"index of json type","description":"json 类型索引Key","type":"object","properties":{"chn":{"title":"是否包含中文","description":"是否包含中文","type":"boolean","example":"true"},"caseSensitive":{"title":"大小写敏感","description":"大小写敏感","type":"boolean","example":"true"},"token":{"title":"分词符","description":"分词符","type":"array","items":{"type":"string","example":"|"}},"alias":{"title":"别名","description":"别名","type":"string","example":"myAlias"},"type":{"title":"字段类型","description":"字段类型","type":"string","required":true,"example":"text"},"doc_value":{"title":"开启统计","description":"开启统计","type":"boolean","example":"true"}}},"IndexKey":{"title":"A short description of struct","description":"索引Key","type":"object","properties":{"chn":{"title":"是否包含中文","description":"是否包含中文","type":"boolean","example":"true"},"caseSensitive":{"title":"大小写敏感","description":"大小写敏感","type":"boolean","example":"true"},"token":{"title":"分词符","description":"分词符","type":"array","items":{"type":"string","example":"|"}},"alias":{"title":"别名","description":"别名","type":"string","example":"myAlias"},"type":{"title":"字段类型","description":"字段类型","type":"string","required":true,"example":"text"},"doc_value":{"title":"开启统计","description":"开启统计","type":"boolean","example":"true"},"index_all":{"title":"是否对Json内所有文本字段自动索引","description":"是否对Json内所有文本字段自动索引","type":"boolean","example":"true","default":"true"},"max_depth":{"title":"最大深度","description":"最大深度","type":"integer","format":"int64"},"json_keys":{"title":"json key","description":"json key","type":"object","additionalProperties":{"$ref":"#/components/schemas/IndexJsonKey"}}}},"IngestProcessor":{"title":"写入处理器。","description":"IngestProcessor","type":"object","properties":{"processorName":{"title":"写入处理器标识。","type":"string","required":true,"example":"ingest-processor-1"},"displayName":{"title":"写入处理器展示名称。","type":"string","required":true,"example":"字段过滤处理"},"description":{"title":"写入处理器描述。","type":"string","example":"过滤content字段"},"configuration":{"title":"写入处理器配置详情。","required":true,"$ref":"#/components/schemas/IngestProcessorConfiguration"},"createTime":{"title":"创建时间。","type":"integer","format":"int64","example":"1717171200"},"updateTime":{"title":"更新时间。","type":"integer","format":"int64","example":"1717171200"}}},"IngestProcessorConfiguration":{"title":"写入处理器配置详情。","description":"IngestProcessorConfiguration","type":"object","properties":{"spl":{"title":"SPL语句。","type":"string","required":true,"example":"* | project content"},"parseFail":{"title":"SPL处理失败的行为。keep 为保留原始数据，drop 为丢弃原始数据。","type":"string","example":"keep"}}},"JoinConfiguration":{"title":"告警集合操作配置","description":"告警集合操作配置","type":"object","properties":{"type":{"title":"集合操作类型","description":"集合操作类型","type":"string","example":"left_join"},"condition":{"title":"集合操作条件","description":"集合操作条件","type":"string","example":"$0.id == $1.id"}}},"ListAgentInstanceConfigs":{"title":"默认配置","type":"array","items":{"type":"object","properties":{"configType":{"title":"进程级配置类型","type":"string"},"attributes":{"title":"进程级配置归属","type":"object","additionalProperties":{"type":"string"}}}}},"LogContent":{"title":"日志字段","description":"日志字段","type":"object","properties":{"Key":{"title":"自定义Key名称。","description":"自定义Key名称。","type":"string","required":true,"example":"key-test"},"Value":{"title":"自定义Key对应的值。","description":"自定义Key对应的值。","type":"string","required":true,"example":"value-test"}}},"LogGroup":{"title":"日志组","description":"日志组","type":"object","properties":{"Topic":{"title":"日志主题，用户自定义字段，用于区分不同特征的日志数据。","description":"日志主题，用户自定义字段，用于区分不同特征的日志数据。","type":"string","required":false,"example":"topic-test"},"Source":{"title":"日志的来源。例如产生该日志的机器的IP地址。","description":"日志的来源。例如产生该日志的机器的IP地址。","type":"string","example":"192.1.1.1"},"LogTags":{"title":"日志的标签列表","description":"日志的标签列表","type":"array","items":{"$ref":"#/components/schemas/LogTag"},"required":false},"LogItems":{"title":"日志列表","description":"日志列表","type":"array","items":{"$ref":"#/components/schemas/LogItem"},"required":true}}},"LogGroupList":{"title":"logGroup 列表","description":"LogGroup 列表","type":"object","properties":{"logGroupList":{"title":"logGroup 列表","type":"array","items":{"$ref":"#/components/schemas/LogGroup"},"required":true}},"required":true},"LogItem":{"title":"日志","description":"日志","type":"object","properties":{"Time":{"title":"日志时间。Unix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","description":"日志时间。Unix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","type":"integer","format":"int32","required":true,"example":"1690254376"},"Contents":{"title":"日志字段列表。","description":"日志字段列表。","type":"array","items":{"$ref":"#/components/schemas/LogContent"},"required":true}}},"LogTag":{"title":"日志标签","description":"日志标签","type":"object","properties":{"Key":{"title":"自定义Key名称。","description":"自定义Key名称。","type":"string","required":true,"example":"key-test"},"Value":{"title":"自定义Key对应的值。","description":"自定义Key对应的值。","type":"string","required":true,"example":"value-test"}}},"LogtailConfig":{"title":"A short description of struct","description":"Logtail配置数据结构。","type":"object","properties":{"configName":{"title":"logtail 配置的名称。","description":"\t\nLogtail配置的名称，在其所属Project内必须唯一。创建Logtail配置成功后，无法修改其名称。命名规则如下：\n- 只能包括小写字母、数字、短划线（-）和下划线（_）。\n- 必须以小写字母或者数字开头和结尾。\n- 长度必须在2~128字符之间。","type":"string","required":true,"example":"test-config"},"logSample":{"title":"日志样例，可以用于自动生成正则捕获字段。","description":"日志样例。","type":"string","example":"2022-06-14 11:13:29.796 | DEBUG    | __main__:<module>:1 - hello world"},"inputType":{"title":"logtail 读取日志的输入类型。","description":"日志输入的方式。可选值如下：\n- **plugin**：通过Logtail插件采集MySQL Binlog等日志。\n- **file**：通过固定模式（正则模式、分隔符模式等）采集文本文件中的日志。","type":"string","required":true,"example":"file"},"inputDetail":{"title":"logtail 输入的详细配置。","description":"日志输入的相关配置。更多信息，请参见[inputDetail参数说明](~~29058~~)。","type":"object","required":true,"example":"\"logType\": \"common_reg_log\", \"logPath\": \"/var/log/httpd/\", \"filePattern\": \"access*.log\", \"localStorage\": true, \"timeFormat\": \"%Y/%m/%d %H:%M:%S\", \"logBeginRegex\": \".*\", \"regex\": \"(\\w+)(\\s+)\", \"key\" :[\"key1\", \"key2\"], \"filterKey\":[\"key1\"], \"filterRegex\":[\"regex1\"], \"fileEncoding\":\"utf8\", \"topicFormat\": \"none\""},"outputType":{"title":"logtail 输出的目标类型。这里固定选择 LogService。","description":"日志输出的方式，只支持LogService，即只支持将数据上传到日志服务。","type":"string","required":true,"example":"LogService"},"outputDetail":{"title":"logtail 输出的详细配置。","description":"日志输出的相关配置。更多信息，请参见[outputDetail参数说明](~~29058~~)。","type":"object","properties":{"endpoint":{"title":"日志项目的 endpoint。","description":"服务入口。更多信息，请参见[服务入口](~~29008~~)。","type":"string","required":true,"example":"cn-hangzhou-intranet.log.aliyuncs.com"},"logstoreName":{"title":"输出的目标 logstore 名称。","description":"Logstore名称。","type":"string","required":true,"example":"test-logstore"},"region":{"title":"地域。","description":"地域ID。","type":"string","example":"cn-hangzhou"},"telemetryType":{"title":"目标 Logstore 的可观测数据类型。","description":"目标 Logstore 的可观测数据类型。","type":"string","example":"logs"}},"required":true},"createTime":{"title":"创建时间，unix 时间戳。","description":"Logtail配置创建时间。UNIX时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","type":"integer","format":"int64","example":"1655176807"},"lastModifyTime":{"title":"最后一次修改时间，unix 时间戳。","description":"Logtail配置最后一次更新时间。UNIX时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","type":"integer","format":"int64","example":"1655176807"}}},"LogtailPipelineConfig":{"title":"Logtail流水线配置","description":"Logtail流水线配置","type":"object","properties":{"configName":{"title":"配置名称","description":"配置名称","type":"string","required":true,"example":"test-config","pattern":"^[0-9a-zA-Z][0-9a-zA-Z_-]{0,126}[0-9a-zA-Z]$"},"logSample":{"title":"日志样例","description":"日志样例","type":"string","example":"127.0.0.1 - - [10/Jun/2022:12:36:49 +0800] \"GET /index.html HTTP/1.1\" 200"},"global":{"title":"全局信息","description":"全局信息","type":"object"},"inputs":{"title":"输入插件","description":"输入插件","type":"array","items":{"description":"输入插件","type":"object","example":"{ \"Type\": \"input_file\", \"FilePaths\": [\"/var/log/*.log\"] }"},"required":true,"minItems":1},"processors":{"title":"处理插件","description":"处理插件","type":"array","items":{"description":"处理插件","type":"object","example":"{ \"Type\": \"processor_parse_json_native\", \"SourceKey\": \"content\" }"},"minItems":1},"aggregators":{"title":"聚合插件","description":"聚合插件","type":"array","items":{"description":"聚合插件","type":"object"},"minItems":1},"flushers":{"title":"输出插件","description":"输出插件","type":"array","items":{"description":"输出插件","type":"object","example":"{ \"Type\": \"flusher_sls\", \"Project\": \"test_project\", \"Logstore\": \"test\", \"Region\": \"cn-hangzhou\", \"Endpoint\": \"cn-hangzhou-intranet.log.aliyuncs.com\", \"TelemetryType\": \"log\" }"},"required":true,"minItems":1},"createTime":{"title":"创建时间，UNIX时间戳","description":"创建时间，UNIX时间戳","type":"integer","format":"int64","example":"1655176807"},"lastModifyTime":{"title":"最后修改时间，UNIX时间戳","description":"最后修改时间，UNIX时间戳","type":"integer","format":"int64","example":"1655176807"}}},"MLDataParam":{"title":"A short description of struct","description":"MLDataParam","type":"object","properties":{"annotationdataId":{"title":"数据的唯一标识","description":"数据的唯一标识","type":"string","example":"dc74b0f569126bb310e1ba6454c351ac"},"dataHash":{"title":"数据内容的hash值","description":"数据内容的hash值","type":"string","example":"59db060bd89468245d76416a68a510ac"},"datasetId":{"title":"关联的数据集的id","description":"关联的数据集的id","type":"string","example":"cb8cc4eb51a85e823471cdb368fae9be"},"value":{"title":"数据来源","description":"数据来源","type":"string","example":"xxx/xxx/xxx/"},"valueType":{"title":"数据来源格式","description":"数据来源格式","type":"string","example":"oss"},"config":{"title":"数据的配置信息","description":"数据的配置信息","type":"object","additionalProperties":{"description":"配置信息。","type":"string","example":"simulator-nginx-demo"}},"annotations":{"title":"标注信息","description":"标注信息","type":"object","additionalProperties":{"description":"标注信息","type":"object","properties":{"annotatedBy":{"title":"标注人","description":"标注人的aliuid","type":"string","example":"xxxx"},"updateTime":{"title":"更新的时间","description":"更新的时间戳","type":"integer","format":"int64","example":"1694761550"},"results":{"title":"标注的结果","description":"标注结果","type":"array","items":{"description":"标注结果","type":"object","additionalProperties":{"description":"标注结果","type":"string","example":"SPIKE_UP_TYPE"}}}}}},"predictions":{"title":"模型预览结果信息","description":"模型预览结果信息","type":"object","additionalProperties":{"description":"模型预览结果","type":"object","properties":{"annotatedBy":{"title":"标注人","description":"标注","type":"string","example":"xxx"},"updateTime":{"title":"更新的时间","description":"更新时间","type":"integer","format":"int64","example":"1694761550"},"results":{"title":"模型预览结果","description":"结果","type":"array","items":{"description":"模型预览结果","type":"object","additionalProperties":{"description":"模型预览结果","type":"string","example":"SPIKE_UP_TYPE"}}}}}},"createTime":{"title":"创建的时间","description":"创建的时间","type":"integer","format":"int64","example":"1695094335"},"lastModifyTime":{"title":"最后一次修改的时间","description":"最后一次修改的时间","type":"integer","format":"int64","example":"1695094335"}}},"MLDataSetParam":{"title":"A short description of struct","description":"MLDataSetParam","type":"object","properties":{"datasetId":{"title":"数据集的唯一标识","description":"数据集的唯一标识","type":"string","example":"d9bd488f6dd42d294495fb780858e83d"},"name":{"title":"数据集的名称","description":"数据集的名称","type":"string","example":"sls_builtin_dataset_metric.shapeclassification.anomalydetection"},"description":{"title":"数据集的描述","description":"数据集的描述","type":"string","example":"数据集A"},"dataType":{"title":"数据类型","description":"数据类型","type":"string","example":"Metric"},"labelId":{"title":"数据集对应的标签系统id","description":"数据集对应的标签系统id","type":"string","example":"a191ae4ca615b0ccb93c211fc8a998af"},"createTime":{"title":"创建时间","description":"创建时间","type":"integer","format":"int64","example":"1695090077"},"lastModifyTime":{"title":"最终修改时间","description":"最终修改时间","type":"integer","format":"int64","example":"1695090077"},"createBy":{"title":"创建的对象","description":"创建的对象","type":"string","example":"sls-console"},"settingType":{"title":"label表配置类型","description":"label表配置类型","type":"string","example":"Metric.ShapeClassification.AnomalyDetection"}}},"MLLabelParam":{"title":"A short description of struct","description":"A short description of struct","type":"object","properties":{"labelId":{"title":"标签表的唯一标识","description":"标签表的唯一标识","type":"string","required":false,"example":"abbd488f6dd42d294495fb780858e83d"},"name":{"title":"标签表的名称","description":"标签表的名称","type":"string","required":false,"example":"标签表"},"description":{"title":"标签表的描述信息","description":"标签表的描述信息","type":"string","required":false,"example":"默认表"},"type":{"title":"标签表的类型","description":"标签表的类型","type":"string","required":false,"example":"xxx"},"settings":{"title":"标签表的配置","description":"标签表的配置","type":"array","items":{"description":"标签表的配置","type":"object","properties":{"mode":{"title":"配置的模式","description":"配置的模式","type":"string","example":"builtin"},"type":{"title":"配置的任务类型","description":"配置的任务类型","type":"string","example":"Trace.RCA"},"config":{"title":"配置的具体信息","description":"配置的具体信息","type":"string","example":"\"\""},"version":{"title":"配置的版本号","description":"配置的版本号","type":"string","example":"0.01"}}}},"createTime":{"title":"创建时间","description":"创建时间","type":"integer","format":"int64","example":"1695090077"},"lastModifyTime":{"title":"最后修改时间","description":"最后修改时间","type":"integer","format":"int64","example":"1695090077"}},"required":false},"MLServiceAnalysisParam":{"title":"A short description of struct","description":"MLServiceAnalysisParam","type":"object","properties":{"parameter":{"title":"parameter","description":"parameter","type":"object","additionalProperties":{"description":"parameter","type":"string","example":"parameter"}},"input":{"title":"input","description":"input","type":"array","items":{"description":"input","type":"object","additionalProperties":{"description":"input","type":"string","example":"data"}}}}},"MLServiceParam":{"title":"A short description of struct","type":"object","properties":{"name":{"title":"微服务名称","type":"string","example":"service_name"},"description":{"title":"微服务描述","type":"string","example":"某某服务"},"serviceType":{"title":"微服务类型","type":"string","example":"sls_builtin"},"status":{"title":"微服务状态","type":"string","example":"running"},"updateTimestamp":{"title":"微服务更新时间","type":"integer","format":"int64","example":"1695090077"},"model":{"title":"微服务依赖的模型配置","type":"object","properties":{"modelResourceId":{"title":"模型资源ID","type":"string","example":"xxxx"},"modelResourceType":{"title":"模型资源类型","type":"string","example":"xxx_type"}}},"resource":{"title":"微服务资源配置","type":"object","properties":{"cpuLimit":{"title":"所需要CPU资源上限","type":"integer","format":"int32","example":"2"},"memoryLimit":{"title":"所需要内存资源上限","type":"integer","format":"int32","example":"64"},"replica":{"title":"微服务的副本数","type":"integer","format":"int32","example":"2"},"gpu":{"title":"需要的GPU显存大小","type":"integer","format":"int32","example":"20"}}}}},"MaxComputeExport":{"title":"MaxCompute投递任务","description":"max compute export","type":"object","properties":{"name":{"title":"任务名称","description":"job name","type":"string","required":true,"example":"MaxComputeExport"},"description":{"title":"任务描述","description":"job description","type":"string","example":"MaxComputeExport"},"displayName":{"title":"显示名称","description":"job displayName","type":"string","required":true,"example":"MaxComputeExport"},"configuration":{"title":"MaxCompute投递配置","description":"MC投递配置","required":true,"$ref":"#/components/schemas/MaxComputeExportConfiguration"},"createTime":{"title":"创建时间","description":"创建时间","type":"integer","format":"int64","example":"1718787534\n"},"lastModifiedTime":{"title":"修改时间","description":"最近一次修改时间","type":"integer","format":"int64","example":"1718787681\n"},"status":{"title":"MaxCompute投递任务状态","description":"投递任务状态","type":"string","example":"RUNNING"},"scheduleId":{"title":"任务ID","description":"任务ID","type":"string","example":"c7f01719d9feb105fc9d8df92af62010"}}},"MaxComputeExportConfiguration":{"title":"MaxCompute投递配置","description":"MaxComputeExportConfiguration","type":"object","properties":{"logstore":{"title":"Logstore名称","description":"Logstore名称","type":"string","required":true,"example":"my-logstore"},"roleArn":{"title":"角色roleArn","description":"读SLS RAM角色roleArn，请填写您自己的角色roleArn","type":"string","required":true,"example":"acs:ram::1234567890:role/aliyunlogdefaultrole\n"},"sink":{"title":"投递配MaxCompute置","description":"投递MaxCompute配置","required":true,"$ref":"#/components/schemas/MaxComputeExportConfigurationSink"},"fromTime":{"title":"开始时间","description":"时间范围开始，值设为1则表示将从日志库中第一条数据开始","type":"integer","format":"int64","required":true,"example":"1718380800\n"},"toTime":{"title":"结束时间","description":"时间范围结束，值设为0则表示任务会一直运行，除非任务被手动停止。","type":"integer","format":"int64","required":true,"example":"1718390800"}}},"MaxComputeExportConfigurationSink":{"title":"MaxCompute投递配置","description":"MaxComputeExportConfigurationSink","type":"object","properties":{"odpsEndpoint":{"title":"MaxCompute Endpoint","description":"MaxCompute Endpoint\n- ⚠️注意：仅支持同地域的Endpoint","type":"string","required":true,"example":"https://service.cn-hangzhou-intranet.maxcompute.aliyun-inc.com/api"},"odpsTunnelEndpoint":{"title":"Tunnel Endpoint","description":"MaxCompute Tunnel Endpoint\n- ⚠️注意：仅支持同地域的Tunnel Endpoint","type":"string","required":false,"example":"https://dt.cn-hangzhou-intranet.maxcompute.aliyun-inc.com"},"odpsProject":{"title":"MaxCompute项目名","description":"MaxCompute项目名称","type":"string","required":true,"example":"demo_project"},"odpsTable":{"title":"MaxCompute表名","description":"MaxCompute表名称","type":"string","required":true,"example":"demo_table"},"odpsRolearn":{"title":"写MaxCompute ram角色","description":"写MaxCompute ram角色","type":"string","required":true,"example":"acs:ram::xxxxxxx"},"odpsAccessKeyId":{"title":"写数据ak id","description":"写数据ak id","type":"string","deprecated":true,"example":"axxxxxxxxxxxb"},"odpsAccessSecret":{"title":"写数据ak secret","description":"写数据ak secret","type":"string","deprecated":true,"example":"aaxxxxxxxxxxxxxxxxxxxxxbb"},"partitionTimeFormat":{"title":"时间分区格式","description":"时间分区格式","type":"string","required":true,"example":"%Y_%m_%d"},"timeZone":{"title":"时区","description":"时间分区","type":"string","required":true,"example":"+0800"},"fields":{"title":"MaxCompute普通列","description":"需要投递的字段","type":"array","items":{"description":"SLS日志字段","type":"string","example":"'f1'"},"required":true},"partitionColumn":{"title":"MaxCompute分区列","description":"需要投递的分区字段","type":"array","items":{"description":"SLS日志字段或系统保留字段__partition_time__作为分区","type":"string","example":"'p1'"},"required":true},"filterInvalid":{"title":"过滤无效内容","description":"是否过滤无效内容\n- true（默认值）\n- false","type":"boolean","example":"true"},"timeFormatType":{"title":"分区时间类型","description":"分区时间类型，支持如下两种：\n- StrfTimeFormat（默认值）\n- JavaSimpleDateFormat","type":"string","example":"StrfTimeFormat"},"bufferInterval":{"title":"计算投递时间分区时的最小时间粒度","description":"计算投递时间分区时的最小时间粒度（单位：秒）\n- 1800（默认值）\n- 3600","type":"string","example":"1800"}}},"OSSExport":{"title":"OSS投递任务","description":"OSS投递配置","type":"object","properties":{"name":{"title":"任务名称","description":"OSS投递名称","type":"string","required":true,"example":"export-oss-1234567890-123456"},"description":{"title":"任务描述","description":"OSS投递描述","type":"string","required":false,"example":"my-oss-job"},"displayName":{"title":"显示名称","description":"OSS投递任务显示名称","type":"string","required":true,"example":"my-oss-job"},"configuration":{"title":"OSS投递配置","description":"Oss Export Configuration","required":false,"$ref":"#/components/schemas/OSSExportConfiguration"},"createTime":{"title":"创建时间","description":"创建时间","type":"integer","format":"int64","required":false,"example":"1718787534"},"lastModifiedTime":{"title":"修改时间","description":"最后一次修改的时间","type":"integer","format":"int64","required":false,"example":"1718787681"},"status":{"title":"OSS投递任务状态","description":"投递任务的状态","type":"string","required":false,"example":"RUNNING"},"scheduleId":{"title":"任务ID","description":"任务ID","type":"string","example":"c7f01719d9feb105fc9d8df92af62010"}},"required":true},"OSSExportConfiguration":{"title":"OSS投递配置","description":"OSSExportConfiguration","type":"object","properties":{"logstore":{"title":"Logstore名称","description":"Logstore名称","type":"string","required":false,"example":"my-logstore"},"roleArn":{"title":"角色roleArn","description":"读SLS RAM角色roleArn，请填写您自己的角色roleArn","type":"string","required":false,"example":"acs:ram::1234567890:role/aliyunlogdefaultrole"},"sink":{"title":"投递OSS配置","description":"投递OSS配置","type":"object","properties":{"endpoint":{"title":"OSS Endpoint","description":"- OSS Endpoint，只能是OSS内网Endpoint，仅支持同地域。详情请参见[OSS访问域名和数据中心](~~31837~~)，值为`http://+OSS Endpoint`。\n- OSS-HDFS Endpoint，只能是OSS-HDFS内网Endpoint，仅支持同地域。","type":"string","required":true,"example":"https://oss-cn-hangzhou-internal.aliyuncs.com"},"bucket":{"title":"OSS Bucket","description":"OSS Bucket","type":"string","required":true,"example":"my-bucket"},"prefix":{"title":"文件前缀","description":"OSS文件前缀","type":"string","required":false,"example":"prefix-demo/"},"suffix":{"title":"文件后缀","description":"OSS文件后缀","type":"string","required":false,"example":".json"},"roleArn":{"title":"写角色roleArn","description":"写OSS RAM角色roleArn，请填写您自己的角色roleArn","type":"string","required":true,"example":"acs:ram::1234567890:role/aliyunlogdefaultrole"},"pathFormat":{"title":"分区格式","description":"分区格式，详情参见[分区格式](~~371934~~)。","type":"string","required":true,"example":"%Y/%m/%d/%H/%M"},"pathFormatType":{"title":"分区格式类型","description":"分区格式类型","type":"string","required":true,"example":"time"},"timeZone":{"title":"时区","description":"时区，详情参见[时区列表](~~375323~~)。","type":"string","required":false,"example":"+0800"},"contentType":{"title":"存储格式","description":"OSS文件存储支持4种格式，如：json、parquet、csv、orc","type":"string","required":false,"example":"csv"},"contentDetail":{"title":"内容详情","description":"OSS文件内容详情，注意：该参数值为JSON格式并且应受contentType参数值的不同进行更新。","type":"object","required":false,"additionalProperties":{"description":"**contentType值为JSON时，contentDetail值的详细参数：**\n- enableTag\n  - 是否必填：是\n  - 类型：布尔\n  - 描述：是否投递 tag字段\n  - 值：\n    - true\n      - 描述：投递 tag字段\n      - 示例：{\"enableTag\": true}\n    - false\n      - 描述：不投递 tag字段\n      - 示例：{\"enableTag\": false}\n\n**contentType值为csv时，contentDetail值的详细参数：**\n- columns\n  - 是否必填：是\n  - 类型：数组\n  - 描述：源日志库中日志的key\n  - 示例：{\"columns\":[\"a\", \"b\", \"c\", \"d\"]}\n- delimiter\n  - 是否必填：是\n  - 类型：字符串\n  - 描述：内容间分隔符\n  - 值：\",\"、\"|\"、\" \" 或 \"\\t\"\n- header\n  - 是否必填：是\n  - 类型：布尔\n  - 描述：是否将字段名称写入CSV文件（第一行）\n  - 值：\n    - true\n    - false\n- lineFeed\n  - 是否必填：否\n  - 类型：字符串\n  - 描述：自定义换行符\n  - 值：\"\\t\"、\"\\n\" 或 \"\"\n  - 默认值：\"\\n\"\n- null\n  - 是否必填：否\n  - 类型：字符串\n  - 描述：自定义无效字段的填充值\n  - 默认值：\"\"\n- quote\n  - 是否必填：是\n  - 类型：字符串\n  - 描述：自定义转义符\n  - 值：`\"\\\"\"`、\"'\" 或 \"\"\n  完整示例：{\"null\": \"-\", \"header\": false, \"lineFeed\": \"\\n\", \"quote\": \"\", \"delimiter\": \",\", \"columns\": [\"a\", \"b\", \"c\", \"d\"]}\n\n**contentType值为parquet时，contentDetail值的详细参数：**\n- columns\n  - 是否必填：是\n  - 类型：数组\n  - 描述：源日志库中日志的key\n  - 示例：{\"columns\": [{\"name\": \"a\", \"type\": \"string\"}, {\"name\": \"b\", \"type\": \"string\"}, {\"name\": \"c\", \"type\": \"string\"},{\"name\": \"d\", \"type\": \"string\"}]}\n\n**contentType值为orc时，contentDetail值的详细参数：**\n- columns\n  - 是否必填：是\n  - 类型：数组\n  - 描述：源日志库中日志的key\n  - 示例：{\"columns\": [{\"name\": \"a\", \"type\": \"string\"}, {\"name\": \"b\", \"type\": \"string\"}, {\"name\": \"c\", \"type\": \"string\"},{\"name\": \"d\", \"type\": \"string\"}]}","type":"any","example":"{\n    \"columns\": [\n        \"your log key1\",\n        \"your log key2\",\n        \"your log key3\",\n    ],\n    \"delimiter\": \" \",\n    \"header\": true,\n    \"lineFeed\": \"\\n\",\n    \"null\": \"-\",\n    \"quote\": \"\\\"\"\n},"}},"compressionType":{"title":"压缩类型","description":"支持4种压缩类型，如：snappy、gzip、zstd、none","type":"string","required":false,"example":"snappy"},"bufferInterval":{"title":"投递时间","description":"投递时间，取值范围为300~900，单位为秒。","type":"integer","format":"int64","required":false,"example":"300"},"bufferSize":{"title":"投递大小","description":"投递的文件大小，取值范围为5~256，单位为MB。","type":"integer","format":"int64","required":false,"example":"256"},"delaySec":{"title":"废弃","description":"延迟投递时间\n> - 该字段废弃使用。","type":"integer","format":"int64","deprecated":true,"required":false,"example":"123"},"delaySeconds":{"title":"延迟投递","description":"延迟投递时间，设置的时间不能超过目标Logstore的数据保存时间。","type":"integer","format":"int64","required":false,"example":"900"}},"required":false},"fromTime":{"title":"时间范围开始","description":"时间范围开始，值设为1则表示将从日志库中第一条数据开始","type":"integer","format":"int64","required":false,"example":"1718380800"},"toTime":{"title":"时间范围结束","description":"时间范围结束，值设为0则表示任务会一直运行，除非任务被手动停止。","type":"integer","format":"int64","required":false,"example":"1718380800"}},"required":false},"OSSIngestion":{"title":"oss ingestion job","description":"oss ingestion job","type":"object","properties":{"name":{"title":"导入任务名称","description":"导入任务名称","type":"string","required":true,"example":"ingest-oss-123456"},"description":{"title":"job description","description":"job description","type":"string","example":"oss ingestion"},"displayName":{"title":"job displayName","description":"job displayName","type":"string","required":true,"example":"oss ingestion"},"schedule":{"title":"调度配置","description":"调度配置","required":true,"$ref":"#/components/schemas/Schedule"},"configuration":{"title":"oss导入配置","description":"oss导入配置","required":true,"$ref":"#/components/schemas/OSSIngestionConfiguration"},"createTime":{"title":"创建时间","description":"创建时间","type":"integer","format":"int64","example":"1714360481"},"lastModifiedTime":{"title":"最近一次修改时间","description":"最近一次修改时间","type":"integer","format":"int64","example":"1714360481"},"status":{"title":"导入状态","description":"导入状态","type":"string","example":"RUNNING"},"scheduleId":{"title":"任务ID","description":"任务ID","type":"string","example":"c7f01719d9feb105fc9d8df92af62010"}}},"OSSIngestionConfiguration":{"title":"A short description of struct","description":"OSS导入","type":"object","properties":{"logstore":{"title":"logstore","description":"logstore","type":"string","required":true,"example":"myLogstore"},"source":{"description":"OSS导入配置","required":true,"$ref":"#/components/schemas/OSSIngestionConfigurationSource"}}},"OSSIngestionConfigurationSource":{"title":"A short description of struct","description":"OSS导入配置","type":"object","properties":{"endpoint":{"title":"oss endpoint","description":"oss endpoint","type":"string","required":true,"example":"oss-cn-hangzhou.aliyuncs.com"},"bucket":{"title":"oss bucket","description":"oss bucket","type":"string","required":true,"example":"ossbucket"},"compressionCodec":{"title":"压缩类型：none,snappy,gzip","description":"压缩类型","type":"string","required":true,"example":"none"},"encoding":{"title":"编码类型","description":"编码类型","type":"string","required":true,"example":"UTF-8"},"format":{"title":"格式","description":"格式","type":"object","required":true,"additionalProperties":{"description":"OSS数据格式。\n- 单行文本日志：`{\"type\":\"Line\"}`\n- CSV：\n\n```\n{\n  \"type\": \"CSV\",\n  \"fieldDelimiter\": \",\",   //分隔符\n  \"quoteChar\": \"\\\"\",      //引号\n  \"escapeChar\": \"\\\\\",    //转义符\n  \"firstRowAsHeader\": true,    //首行是否作为字段名称\n  \"maxLines\": 1,    //日志最大跨行数\n  \"skipLeadingRows\": 0   //跳过行数\n}\n\n```\n- 单行JSON：`{\"type\": \"JSON\"}`\n- 跨行文本日志：\n\n```\n{\n  \"type\": \"Multiline\",\n  \"match\": \"after\", //正字匹配位置\n  \"pattern\": \"\\\\d+\", //正则表达式\n  \"maxLines\": 10 //最大行数\n}\n```\n- ORC：`{\"type\": \"ORC\"}`\n- Parquet：`{\"type\": \"Parquet\"}`\n- 阿里云OSS访问日志：`{\"type\": \"ossAccessLog\"}`\n- 阿里云CDN下载日志：`{\"type\": \"cdnDownloadedLog\"}`","type":"any","example":"{\"type\": \"Line\"}"}},"interval":{"title":"检查新文件周期","description":"检查新文件周期","type":"string","required":true,"example":"never"},"pattern":{"title":"文件路径正则过滤","description":"文件路径正则过滤","type":"string","example":".*"},"prefix":{"title":"文件路径前缀过滤","description":"文件路径前缀过滤","type":"string","example":"prefix"},"restoreObjectEnabled":{"title":"导入归档文件","description":"导入归档文件","type":"boolean","example":"true"},"startTime":{"title":"某个时间点后修改过的文件","description":"某个时间点后修改过的文件","type":"integer","format":"int64","example":"1714274081"},"endTime":{"title":"某个时间点前修改过的文件","description":"某个时间点前修改过的文件","type":"integer","format":"int64","example":"1714360481"},"timeField":{"title":"提取时间字段","description":"提取时间字段","type":"string","example":"__time__"},"timeFormat":{"title":"时间字段格式","description":"时间字段格式","type":"string","example":"yyyy-MM-dd HH:mm:ss"},"timePattern":{"title":"提取时间正则","description":"提取时间正则","type":"string","example":"[0-9]{0,2}\\/[0-9a-zA-Z]+\\/[0-9:,]+"},"timeZone":{"title":"时间字段分区","description":"时间字段分区","type":"string","example":"GMT+08:00"},"useMetaIndex":{"title":"使用OSS元数据索引","description":"使用OSS元数据索引","type":"boolean","required":true,"example":"false"},"roleARN":{"title":"roleArn","description":"roleArn","type":"string","example":"acs:ram::12345:role/aliyunlogdefaultrole"},"tagPackId":{"title":"启动上下文检索","description":"启动上下文检索","type":"boolean","example":"true"}}},"PolicyConfiguration":{"title":"告警通知策略配置","description":"告警通知策略配置","type":"object","properties":{"alertPolicyId":{"title":"告警策略","description":"告警策略","type":"string","example":"sls.builtin.dynamic"},"actionPolicyId":{"title":"行动策略","description":"行动策略","type":"string","example":"example_action_policy"},"repeatInterval":{"title":"重复等待时间","description":"重复等待时间","type":"string","example":"10m"}}},"ProcessorAssociate":{"title":"ProcessorAssociate","description":"ProcessorAssociate","type":"object","properties":{"processorId":{"title":"Processor ID","type":"string","required":true,"example":"ingest-processor-1"}}},"ProjectSummary":{"title":"Project","description":"Project信息","type":"object","properties":{"projectName":{"title":"Project名称","type":"string","required":true},"description":{"title":"Project描述","type":"string","required":true},"createTime":{"title":"创建时间","type":"integer","format":"int64","required":true},"updateTime":{"title":"更新时间","type":"integer","format":"int64","required":true},"region":{"title":"所在Region","type":"string","required":true},"resourceGroupId":{"title":"资源组ID","type":"string","required":true}}},"S3Ingestion":{"title":"s3 ingestion job","type":"object","properties":{"name":{"title":"导入任务名称","type":"string","required":true,"example":"ingest-s3-123456"},"description":{"title":"job description","type":"string","example":"s3 ingestion"},"displayName":{"title":"job displayName","type":"string","required":true,"example":"s3 ingestion"},"schedule":{"title":"调度配置","required":true,"$ref":"#/components/schemas/Schedule"},"configuration":{"title":"s3导入配置","required":true,"$ref":"#/components/schemas/S3IngestionConfigurationSource"},"createTime":{"title":"创建时间","type":"integer","format":"int64","example":"1714360481"},"lastModifiedTime":{"title":"最近一次修改时间","type":"integer","format":"int64","example":"1714360481"},"status":{"title":"导入状态","type":"string","example":"RUNNING"},"scheduleId":{"title":"任务ID","type":"string","example":"c7f01719d9feb105fc9d8df92af62010"}}},"S3IngestionConfiguration":{"title":"A short description of struct","description":"S3导入配置","type":"object","properties":{"logstore":{"title":"logstore","type":"string","example":"myLogstore"},"source":{"$ref":"#/components/schemas/S3IngestionConfigurationSource"}}},"S3IngestionConfigurationSource":{"title":"A short description of struct","description":"S3导入配置","type":"object","properties":{"awsRegion":{"title":"s3 region","type":"string","required":true,"example":"ap-northeast-1"},"awsAccessKey":{"title":"aws access key","type":"string","required":true,"example":"AKIxxxxxxxxxxYJE"},"awsAccessKeySecret":{"title":"aws access key secret","type":"string","required":true,"example":"123xxxxxxxxxxfjf"},"bucket":{"title":"s3 bucket","type":"string","required":true,"example":"s3bucket"},"compressionCodec":{"title":"压缩类型：none,snappy,gzip","type":"string","required":true,"example":"none"},"encoding":{"title":"编码类型","type":"string","required":true,"example":"UTF-8"},"format":{"title":"格式","type":"object","required":true,"additionalProperties":{"type":"any","example":"{\"type\": \"line\"}"}},"interval":{"title":"检查新文件周期","type":"string","required":true,"example":"30m"},"pattern":{"title":"文件路径正则过滤","type":"string","example":".*"},"prefix":{"title":"文件路径前缀过滤","type":"string","example":"prefix"},"awsUseSQS":{"title":"使用sqs","type":"boolean","example":"false"},"awsSQSQueueUrl":{"title":"sqs queue url","type":"string","example":"https://sqs.ap-northeast-1.amazonaws.com/123456788/chifan"},"useAwsSQSOnly":{"title":"仅使用sqs获取新文件","type":"boolean","example":"false"},"tagPackId":{"title":"支持上下文浏览","type":"boolean","example":"false"},"startTime":{"title":"某个时间点后修改过的文件","type":"integer","format":"int64","example":"1714274081"},"endTime":{"title":"某个时间点前修改过的文件","type":"integer","format":"int64","example":"1714360481"},"timeField":{"title":"提取时间字段","type":"string","example":"__time__"},"timeFormat":{"title":"时间字段格式","type":"string","example":"yyyy-MM-dd HH:mm:ss"},"timePattern":{"title":"提取时间正则","type":"string","example":"[0-9]{0,2}\\/[0-9a-zA-Z]+\\/[0-9:,]+"},"timeZone":{"title":"时间字段分区","type":"string","example":"GMT+08:00"}}},"SavedSearch":{"title":"A short description of struct","description":"快速查询数据结构。","type":"object","properties":{"savedsearchName":{"title":"savedsearchName","description":"快速查询名称。","type":"string","required":true,"example":"savedsearch-name"},"searchQuery":{"title":"searchQuery","description":"查询语句或者分析语句。","type":"string","required":true,"example":"status: 401 | SELECT remote_addr,COUNT(*) as pv GROUP by remote_addr ORDER by pv desc limit 5"},"logstore":{"title":"logstore","description":"Logstore名称。","type":"string","required":true,"example":"aliyun-test-logstore"},"topic":{"title":"topic","description":"日志主题。默认值为空字符串（\"\"）。","type":"string","example":"topic"},"displayName":{"title":"displayName","description":"快速查询显示名称。","type":"string","required":true,"example":"Method统计"}}},"Schedule":{"title":"job schedule","description":"调度结构","type":"object","properties":{"type":{"title":"定时类型：FixedRate/Cron","description":"schedule type","type":"string","required":true,"example":"Cron","enum":["FixedRate","Cron"]},"cronExpression":{"title":"Cron情况下：cron表达式","description":"cron表达式","type":"string","required":false,"example":"0/5 * * * *"},"runImmediately":{"title":"定时任务是否立即执行","description":"定时任务是否立即执行","type":"boolean","required":false,"example":"false"},"timeZone":{"title":"Cron表达式所在时区，默认为空，表示东八区","description":"Cron表达式所在时区，默认为空，表示东八区","type":"string","required":false,"example":"+0800"},"delay":{"title":"定时类任务延迟执行（单位是秒：s）","description":"定时类任务延迟执行（单位是秒：s）","type":"integer","format":"int32","required":false,"example":"4"},"interval":{"title":"FixedRate情况下：固定间隔","description":"固定间隔","type":"string","required":false,"example":"1m"}},"required":false},"ScheduledSQL":{"title":"定时sql调度任务","description":"scheduled sql job request configuration","type":"object","properties":{"description":{"title":"定时sql任务描述","description":"Job Description","type":"string","required":false,"example":"This is a scheduled sql job"},"displayName":{"title":"定时sql显示名称","description":"Job DisplayName","type":"string","required":true,"example":"This is a scheduled sql job"},"name":{"title":"定时sql任务名称","description":"Scheduled SQL name","type":"string","required":true,"example":"test-scheduled-sql"},"schedule":{"title":"调度配置","description":"调度配置","required":true,"$ref":"#/components/schemas/Schedule"},"configuration":{"title":"定时sql配置","description":"定时sql配置","required":true,"$ref":"#/components/schemas/ScheduledSQLConfiguration"},"createTime":{"title":"创建时间","description":"创建时间","type":"integer","format":"int64","example":"1714123644"},"lastModifiedTime":{"title":"最近修改时间","description":"最近修改时间","type":"integer","format":"int64","example":"1714123644"},"scheduleId":{"title":"调度ID","description":"调度ID","type":"string","example":"e73f43732852064ad5d091914e39342f"},"status":{"title":"定时SQL状态","description":"定时SQL状态","type":"string","example":"ENABLED"}},"required":false},"ScheduledSQLConfiguration":{"title":"A short description of struct","description":"定时SQL配置详细","type":"object","properties":{"script":{"title":"SQL代码","description":"定时SQL分析语句","type":"string","required":true,"example":"* | select *"},"sqlType":{"title":"SQL类型","description":"SQL类型","type":"string","required":true,"example":"searchQuery"},"destEndpoint":{"title":"目标Region","description":"目标Endpoint","type":"string","required":true,"example":"cn-hangzhou-intranet.log.aliyuncs.com"},"destProject":{"title":"目标Project","description":"目标Project","type":"string","required":true,"example":"project-demo"},"sourceLogstore":{"title":"源库","description":"源库","type":"string","required":true,"example":"source-logstore-demo"},"destLogstore":{"title":"目标库","description":"目标库","type":"string","required":true,"example":"dest-logstore-demo"},"roleArn":{"title":"角色ARN","description":"执行SQL授权角色ARN","type":"string","required":true,"example":"acs:ram::123456789:role/aliyunlogetlrole"},"destRoleArn":{"title":"写角色ARN","description":"写目标授权角色ARN","type":"string","required":true,"example":"acs:ram::123456789:role/aliyunlogetlrole"},"fromTimeExpr":{"title":"SQL时间窗口开始","description":"SQL时间窗口开始","type":"string","required":true,"example":"@m-1m"},"toTimeExpr":{"title":"SQL时间窗口结束","description":"SQL时间窗口结束","type":"string","required":true,"example":"@m"},"maxRunTimeInSeconds":{"title":"SQL超时最长时间","description":"SQL超时最长时间，单位：秒，取值范围60~1800。","type":"integer","format":"int64","required":true,"example":"600"},"resourcePool":{"title":"resourcePool","description":"资源池类型（enhanced表示增强型）","type":"string","required":true,"example":"enhanced"},"maxRetries":{"title":"SQL超时最大次数","description":"SQL超时最大次数，取值范围1～100。","type":"integer","format":"int64","required":true,"example":"20"},"fromTime":{"title":"调度时间范围开始","description":"开始时间。更多信息请参见[从Logstore到MetricStore\n](~~286459~~)。","type":"integer","format":"int64","required":true,"example":"1712592000"},"toTime":{"title":"调度时间范围结束","description":"结束时间。更多信息请参见[从Logstore到MetricStore\n](~~286459~~)。","type":"integer","format":"int64","required":true,"example":"0"},"dataFormat":{"title":"定时sql写入模式","description":"支持三种配置：log2log、log2metric、metric2metric。","type":"string","required":true,"example":"log2log"},"parameters":{"title":"parameters","description":"SQL配置。更多信息请参见[从Logstore到MetricStore\n](~~286459~~)。","type":"object","required":true,"example":"{\n  addLabels: \"{}\",\n  hashLabels: \"[]\",\n  labelKeys: \"[\\\"your label1\\\",\\\"your label2\\\"]\",\n  metricKeys: \"[\\\"your Indicator1\\\",\\\"your Indicator2\\\"]\",\n  metricName: \"\",\n  timeKey: \"\"\n}"}},"required":false},"SeverityConfiguration":{"title":"告警严重度配置","description":"告警严重度配置","type":"object","properties":{"severity":{"title":"告警严重度数值","description":"告警严重度数值","type":"integer","format":"int32","example":"8"},"evalCondition":{"title":"触发条件配置","description":"触发条件配置","$ref":"#/components/schemas/ConditionConfiguration"}}},"SinkAlerthubConfiguration":{"title":"告警发送到SLS告警管理服务的配置","description":"告警发送到SLS告警管理服务的配置","type":"object","properties":{"enabled":{"title":"是否开启","description":"是否开启","type":"boolean","example":"true"}},"required":false},"SinkCmsConfiguration":{"title":"告警发送到云监控的配置","description":"告警发送到云监控的配置","type":"object","properties":{"enabled":{"title":"是否开启","description":"是否开启","type":"boolean","example":"true"}}},"SinkEventStoreConfiguration":{"title":"告警发送到EventStore的配置","description":"告警发送到EventStore的配置","type":"object","properties":{"enabled":{"title":"是否开启","description":"是否开启","type":"boolean","example":"true"},"endpoint":{"title":"endpoint","description":"endpoint","type":"string","example":"cn-shanghai-intranet.log.aliyuncs.com"},"project":{"title":"项目名称","description":"项目名称","type":"string","example":"exampleProject"},"eventStore":{"title":"事件库名称","description":"事件库名称","type":"string","example":"exampleStore"},"roleArn":{"title":"角色","description":"角色","type":"string","example":"acs:ram::123456789:role/aliyunlogetlrole"}}},"StoreViewStore":{"title":"数据集中关联的日志库或时序库","description":"StoreView store","type":"object","properties":{"project":{"title":"Project 名称","description":"Project 名称","type":"string","required":true,"example":"ali-test-project"},"storeName":{"title":"LogStore 或 MetricStore 名称","description":"LogStore 或 MetricStore 名称","type":"string","required":true,"example":"my-logstore"},"query":{"title":"查询过滤语句","description":"查询过滤语句","type":"string"}}},"TemplateConfiguration":{"title":"模板告警配置","description":"模板告警配置","type":"object","properties":{"id":{"title":"模板ID","description":"模板ID","type":"string","required":true,"example":"sls.app.ack.ip.not_enough"},"type":{"title":"模板类型","description":"模板类型","type":"string","required":true,"example":"sys"},"version":{"title":"模板版本","description":"模板版本","type":"string","example":"1"},"lang":{"title":"模板语言","description":"模板语言","type":"string","example":"cn"},"tokens":{"title":"模板携带的token","description":"模板携带的token","type":"object","required":false},"aonotations":{"title":"模板标注","description":"模板标注","type":"object"}}},"Ticket":{"title":"Ticket结构","description":"Ticket信息","type":"object","properties":{"ticketId":{"title":"ticket对应唯一Id","type":"string","example":"xxxxx"},"ticket":{"title":"ticket","type":"string","example":"xxxxx"},"number":{"title":"ticket最大使用次数","type":"integer","format":"int32","maximum":"2147483647","minimum":"0","example":"1"},"expirationTime":{"title":"ticket过期时间，秒为单位","type":"integer","format":"int64","example":"100"},"extra":{"title":"扩展字段","type":"string","example":"{\"xx\":\"yy\"}"},"callerUid":{"title":"ticket创建时的Uid","type":"integer","format":"int64","example":"1000000000"},"name":{"title":"名称","type":"string","example":"测试"},"usedNumber":{"title":"ticket已使用次数","type":"integer","format":"int32","example":"1"},"createDate":{"title":"ticket创建时间","type":"string","example":"2023-09-06 14:57:07"},"expireDate":{"title":"ticket过期时间","type":"string","example":"2023-09-06 14:58:07"},"valid":{"title":"是否禁止","type":"boolean","example":"false"},"sharingTo":{"title":"分享对象","type":"string","example":"{\"type\":\"aliyun\",\"ids\":[1,2]}"}}},"chart":{"title":"A short description of struct","description":"图表数据结构。","type":"object","properties":{"title":{"title":"图表标题。支持大小写英文字母、数字、下划线_、连字符-，连字符与下划线不能作为名称开头与结尾，长度必须在[2,64] 之间。","description":"图表标题。","type":"string","required":true,"example":"my-chart"},"type":{"title":"图表的类型。","description":"图表类型。","type":"string","required":true,"example":"linepro"},"search":{"title":"查询配置","description":"查询配置。","type":"object","required":true,"example":"(*)| SELECT date_format(__time__ - __time__ % 60, '%H:%i:%s') as time, count(1) as count GROUP BY time ORDER BY time"},"display":{"title":"图表的显示配置","description":"图表的显示配置。","type":"object","required":true},"action":{"title":"action","description":"action","type":"object","required":true}}},"dashboard":{"title":"A short description of struct","description":"仪表盘数据结构。","type":"object","properties":{"dashboardName":{"title":"仪表盘ID。同一个Project下，仪表盘ID唯一，不可重复。","description":"仪表盘的内部显示名称。","type":"string","required":true,"example":"dashboard-1609294922657-434834"},"displayName":{"title":"仪表盘的展示名称。","description":"仪表盘的展示名称。","type":"string","required":true,"example":"test-alert"},"description":{"title":"描述信息。","description":"仪表盘的描述信息。","type":"string","required":false,"example":"这是一个仪表盘。"},"attribute":{"title":"属性值，可用于修改仪表盘的布局等属性，例如 \"type\": \"free\" 自由布局， \"type\":\"grid\" 网格布局。","description":"仪表盘的属性值。","type":"object","additionalProperties":{"description":"仪表盘的属性值。","type":"string","example":"yyy"}},"charts":{"title":"仪表盘内包含的图表。","description":"仪表盘包含的图表。","type":"array","items":{"description":"图表数据结构。","$ref":"#/components/schemas/chart"},"required":true}}},"externalStore":{"title":"A short description of struct","description":"外部存储数据结构。","type":"object","properties":{"externalStoreName":{"title":"外部存储的名称。","description":"外部存储名称，在同一Project中名称不能重复，且和Logstore名称不能重复。","type":"string","required":true,"example":"rds_store"},"storeType":{"title":"类型。可选 rds-vpc 或者 oss","description":"存储类型。固定取值为rds-vpc，表示VPC下的RDS MySQL数据库。","type":"string","required":true,"example":"rds-vpc"},"parameter":{"title":"参数","description":"外部存储的配置参数。","type":"object","required":true,"example":"{ \t\t\"vpc-id\": \"vpc-bp1aevy8sofi8mh1q****\", \t\t\"instance-id\": \"i-bp1b6c719dfa08exf****\", \t\t\"host\": \"192.168.XX.XX\", \t\t\"port\": \"3306\", \t\t\"username\": \"root\", \t\t\"password\": \"sfdsfldsfksfls****\", \t\t\"db\": \"meta\", \t\t\"table\": \"join_meta\", \t\t\"region\": \"cn-qingdao\" \t}"}}},"index":{"title":"日志索引","description":"索引配置数据结构。","type":"object","properties":{"max_text_len":{"title":"统计字段最大长度","description":"日志服务默认字段值的最大长度为2048字节，即2 KB。如果您需要修改字段值的最大长度，可设置统计字段（text）最大长度，取值范围为64~16384字节。","type":"integer","format":"int32","example":"2048"},"log_reduce_white_list":{"title":"日志聚类的聚类字段过滤白名单，仅当日志聚类开启时有效","description":"日志聚类的聚类字段过滤白名单，仅当日志聚类开启时有效。","type":"array","items":{"description":"白名单字段。","type":"string","example":"name"}},"log_reduce_black_list":{"title":"日志聚类的聚类字段过滤黑名单，仅当日志聚类开启时有效","description":"日志聚类的聚类字段过滤黑名单，仅当日志聚类开启时有效。","type":"array","items":{"description":"黑名单字段。","type":"string","example":"time"}},"line":{"title":"全文索引","description":"全文索引配置。该参数和keys必须至少指定一个。","type":"object","properties":{"chn":{"title":"包含中文","description":"是否包含中文。\n\n- true：包含中文。\n- false（默认值）：不包含中文。","type":"boolean","example":"false"},"caseSensitive":{"title":"大小写敏感","description":"是否大小写敏感。\n\n- true：大小写敏感。\n- false（默认值）：大小写不敏感。","type":"boolean","example":"true"},"token":{"title":"分词符","description":"分词符列表。可以设置一个分词参数，指定这个字段按照哪一种方式分词。","type":"array","items":{"description":"分词符。例如 \",\"  \".\"  \"\\r\" \"\\n\" 等。","type":"string","example":","},"required":true},"include_keys":{"title":"包含的字段列表，不能与exclude_keys同时指定。","description":"包含的字段列表，不能与exclude_keys同时指定。","type":"array","items":{"description":"包含字段列表。","type":"string","example":"includeField"}},"exclude_keys":{"title":"排除的字段列表，不能与include_keys同时指定。","description":"排除的字段列表，不能与include_keys同时指定。","type":"array","items":{"description":"排除字段列表。","type":"string","example":"excludeField"}}}},"keys":{"title":"字段索引","description":"字段索引配置，key为字段名称，value为字段索引配置。该参数和line必须至少指定一个。","type":"object","additionalProperties":{"description":"字段索引配置，key为字段名称，value为字段索引配置。","$ref":"#/components/schemas/IndexKey"}},"log_reduce":{"title":"是否开启日志聚类","description":"是否开启日志聚类。开启后白名单与黑名单至多生效其中一个。\n\n- true：开启日志聚类。\n- false（默认值）：不开启日志聚类。","type":"boolean","example":"true"}}},"logging":{"title":"A short description of struct","description":"项目的服务日志数据结构。","type":"object","properties":{"loggingProject":{"title":"project 名称。","description":"服务日志要保存到的Project名称。","type":"string","required":true,"example":"my-project"},"loggingDetails":{"title":"logging 配置项","description":"服务日志配置列表。","type":"array","items":{"description":"服务日志配置项，每项代表开启一种服务日志类型。","type":"object","properties":{"type":{"title":"logging 类型。","description":"服务日志的种类。取值包括：\n\n- consumergroup_log：消费组延迟日志\n- logtail_alarm：Logtail告警日志\n- operation_log：操作日志（此项服务收费）\n- logtail_profile：Logtail采集日志\n- metering：计量日志\n- logtail_status：Logtail状态日志\n- scheduledsqlalert：定时SQL任务运行日志\n- etl_alert：数据加工任务的运行日志","type":"string","required":true,"example":"consumergroup_log","enum":["consumergroup_log","logtail_alarm","operation_log","logtail_profile","metering","logtail_status","scheduled_sql_alert","etl_alert"]},"logstore":{"title":"logstore 名称。","description":"Logstore名称。","type":"string","required":true,"example":"my-logstore"}}},"required":true}}},"logstore":{"title":"A short description of struct","description":"日志库Logstore数据结构。","type":"object","properties":{"logstoreName":{"title":"logstore 的名称。","description":"Logstore名称。","type":"string","required":true,"example":"my-logstore"},"ttl":{"title":"数据保存的天数。","description":"数据的保存时间，单位为天。取值范围为1~3650。如果配置为3650，表示永久保存。","type":"integer","format":"int32","required":true,"example":"1"},"shardCount":{"title":"shard 数量。","description":"Shard分区个数。","type":"integer","format":"int32","required":true,"example":"2"},"enable_tracking":{"title":"WebTracking功能支持快速采集各种浏览器以及iOS/Android/APP访问信息，默认关闭","description":"是否开启WebTracking功能。默认值为false。\n\n- true：开启WebTracking。\n- false：不开启WebTracking。","type":"boolean","example":"false"},"autoSplit":{"title":"是否开启 shard 自动分裂。当写入数据量超过已有分区（Shard）写入服务能力且持续5分钟以上时，开启自动分裂功能可自动根据数据量增加分区数量","description":"是否自动分裂Shard。\n\n- true：自动分裂Shard。\n- false：不自动分裂Shard。","type":"boolean","example":"true"},"maxSplitShard":{"title":"最大 shard 数量。","description":"自动分裂时最大的Shard个数，最小值是1，最大值是64。","type":"integer","format":"int32","example":"6"},"appendMeta":{"title":"接收日志后，自动添加客户端外网IP和日志到达时间","description":"是否记录外网IP地址功能。默认值为false。\n\n- true：记录外网IP地址。\n- false：不记录外网IP地址。","type":"boolean","example":"false"},"telemetryType":{"title":"telemetryType","description":"要查询的日志类型。取值：\n\n- Metrics：时序存储。\n- None：非时序存储。","type":"string","example":"Metrics"},"createTime":{"title":"创建时间。","description":"日志库创建时间。UNIX时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","type":"integer","format":"int32","example":"1453949705"},"lastModifyTime":{"title":"最后修改时间。","description":"日志库最后一次更新时间。UNIX时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","type":"integer","format":"int32","example":"1524155379"},"encrypt_conf":{"title":"加密配置","description":"数据加密配置。","$ref":"#/components/schemas/EncryptConf"},"hot_ttl":{"title":"必须在 (30, ttl) 之间","description":"数据在Logstore热存储层中的存储时间，最少为30天。单位：天。","type":"integer","format":"int32","example":"60"},"infrequentAccessTTL":{"title":"低频存储时间","description":"低频存储时间","type":"integer","format":"int32","example":"30"},"mode":{"title":"[ standard | query ]","description":"日志服务提供标准型（Standard）和查询型（Query）两种类型的Logstore。\n\n- **standard**：支持日志服务一站式数据分析功能，适用于实时监控、交互式分析以及构建完整的可观测性系统等场景。\n- **query**：支持高性能查询，索引流量费用约为Standard的一半，但不支持SQL分析，适用于数据量大、存储周期长（周、月级别以上）、无日志分析的场景。","type":"string","example":"standard"},"productType":{"title":"日志所属产品类型","description":"日志所属产品类型。","type":"string","example":"aliyun"},"processorId":{"title":"IngestProcessor ID","description":"IngestProcessor ID","type":"string"}}},"machine":{"title":"A short description of struct","description":"机器数据结构。","type":"object","properties":{"ip":{"title":"机器 ip 地址。","description":"机器的IP地址。","type":"string","required":false,"example":"192.168.xx.x"},"machine-uniqueid":{"title":"机器的唯一标识。","description":"机器的唯一标识。","type":"string","required":false,"example":"3B70F4F1-80F7-46C4-A6C1-100***CEE647"},"lastHeartbeatTime":{"title":"最后一次心跳时间。Unix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","description":"最后一次心跳时间。Unix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","type":"integer","format":"int64","required":false,"example":"1447182247"},"userdefined-id":{"title":"机器的用户自定义标识。","description":"机器的用户自定义标识，当机器组标识类型为用户自定义类型时有效。","type":"string","example":"无"},"host-id":{"title":"机器的主机id。","description":"机器的主机id。","type":"string","example":"test"}}},"machineGroup":{"title":"机器组结构定义。","description":"机器组数据结构。","type":"object","properties":{"groupName":{"title":"机器组名称。","description":"机器组名称。","type":"string","required":true,"example":"machineGroup-1"},"groupType":{"title":"机器组种类。目前固定为空字符串。","description":"机器组类型，目前固定为空字符串。","type":"string","required":false,"example":"“”"},"machineIdentifyType":{"title":"机器组标识种类，支持 IP 标识或者用户自定义标识，即 ip 、userdefined 、 host-id。","description":"机器标识类型。\n\n- ip：IP地址机器组。\n- userdefined：用户自定义标识机器组。","type":"string","required":true,"example":"ip"},"groupAttribute":{"title":"机器组属性。","description":"机器组属性。","type":"object","properties":{"groupTopic":{"title":"机器组的日志主题。","description":"机器组的日志主题。","type":"string","required":false,"example":"testtopic"},"externalName":{"title":"机器组所依赖的外部管理系统标识。","description":"机器组所依赖的外部管理系统标识。","type":"string","required":false,"example":"testgroup"}}},"machineList":{"title":"机器组标识列表。","description":"机器列表。","type":"array","items":{"description":"机器的IP地址或自定义标识。","type":"string","example":"47.100.XX.XX"},"required":true}}},"project":{"title":"A short description of struct","description":"日志项目Project数据结构。","type":"object","properties":{"createTime":{"title":"创建时间","description":"创建Project的时间。","type":"string","example":"2021-07-07 14:08:09"},"lastModifyTime":{"title":"最后更新时间","description":"最后一次更新Project时间。","type":"string","example":"2022-04-18 13:30:19"},"description":{"title":"描述","description":"Project描述信息。","type":"string","required":true,"example":"Description of my-project"},"owner":{"title":"project owner","description":"Project所属得阿里云账号。","type":"string","example":"\"\""},"projectName":{"title":"Project名称","description":"Project名称，作为Host的一部分。Project名称在阿里云地域内全局唯一，创建后不可修改。","type":"string","required":true,"example":"ali-test-project"},"region":{"title":"所在区域","description":"Project所属地域。","type":"string","example":"cn-hangzhou"},"status":{"title":"状态","description":"Project状态。\n\n- Normal：正常\n- Disable：禁用","type":"string","example":"Normal"},"resourceGroupId":{"title":"资源组Id","description":"Project所属的资源组ID。","type":"string","example":"rg-acf******sq"},"dataRedundancyType":{"title":"数据冗余类型","description":"数据冗余类型","type":"string","example":"LRS"},"quota":{"title":"project quota","description":"project quota","type":"object","additionalProperties":{"type":"any"}},"recycleBinEnabled":{"title":"是否打开回收站","description":"是否打开回收站","type":"boolean","example":"false"},"location":{"title":"project 所在的具体地域","description":"project 所在的具体地域","type":"string"}}},"serviceStatus":{"description":"日志服务开通状态","type":"object","properties":{"status":{"title":"当前状态","description":"当前状态。\n- Opened：已开通。\n- NotExist：不存在。\n- Opening：正在开通。\n- Closed：已欠费禁用。","type":"string","enumValueTitles":{"Opened":"Opened","NotExist":"NotExist","Opening":"Opening","Closed":"Closed"},"example":"NotExist"},"enabled":{"title":"是否开通","description":"是否开通","type":"boolean","example":"false"}}},"shard":{"title":"A short description of struct","description":"Shard数据结构。","type":"object","properties":{"shardID":{"title":"shard id","description":"shard id","type":"integer","format":"int32","example":"0"},"status":{"title":"shard 的读写状态，readwrite 或者 readonly。","description":"Shard状态。创建Shard时，所有Shard状态均为readwrite状态。执行分裂或合并操作后，Shard状态变更为readonly，并生成新的readwrite状态的Shard。Shard状态不影响其数据读取的性能。readwrite状态的Shard可保证数据写入性能，readonly状态的Shard不提供数据写入服务。取值包括：\n\n- readwrite（读写）\n- readonly（只读）\n","type":"string","example":"readwrite"},"inclusiveBeginKey":{"title":"指定Shard范围的起始值，Shard范围中包含该值。即 shard 包含MD5值在 [inclusiveBeginKey, exclusiveEndKey) 之间的日志。","description":"Shard起始的Key值，在Shard MD5范围中包含该值。","type":"string","example":"00000000000000000000000000000000"},"exclusiveEndKey":{"title":"指定Shard范围的结束值，Shard范围中不包含该值。即 shard 包含MD5值在 [inclusiveBeginKey, exclusiveEndKey) 之间的日志。","description":"分区结束的Key值。","type":"string","example":"8000000000000000000000000000000"},"createTime":{"title":"Shard的创建时间。Unix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","description":"分区的创建时间。UNIX时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","type":"integer","format":"int32","example":"1524222931"}}}}},"apis":{"CreateProject":{"summary":"创建一个Project。","path":"/","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","riskType":"none","chargeType":"free","abilityTreeCode":"8733","abilityTreeNodes":["FEATUREslsMYXSJS"],"autoTest":true,"tenantRelevance":"tenant"},"parameters":[{"name":"body","in":"body","style":"json","schema":{"description":"请求体参数。","type":"object","properties":{"description":{"title":"project描述信息","description":"Project描述。","type":"string","required":true,"example":"this is test"},"projectName":{"title":"project名字","description":"Project名称在阿里云地域内全局唯一，创建后不可修改。其命名规则如下：\n\n- Project名称必须全局唯一。\n- 只能包括小写字母、数字和短划线（-）。\n- 必须以小写字母或者数字开头和结尾。\n- 长度为3-63字符。","type":"string","required":true,"example":"test-project"},"resourceGroupId":{"title":"资源组Id","description":"资源组ID。","type":"string","required":false,"example":"rg-aekzf******sxby"},"dataRedundancyType":{"title":"数据冗余类型：ZRS（同城冗余）、LRS（本地冗余）","description":"容灾类型。\n- LRS：本地冗余存储。\n\n- ZRS：同城冗余存储。\n","type":"string","required":false,"example":"LRS","enum":["LRS","ZRS"]},"recycleBinEnabled":{"description":"是否打开回收站","type":"boolean","required":false,"enumValueTitles":{"true":"true","false":"false"},"example":"true"}},"required":true,"example":"test-project"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建Project","description":"### 接口说明\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- Project名称在阿里云地域内全局唯一，创建后不可修改。\n- 每个阿里云账号支持添加的project数量请参见[基础资源](~~86660~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:CreateProject`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}`  |","requestParamsDescription":"**请求示例：** \n\n~~~\nPOST / HTTP/1.1\nHost:test-project.cn-hangzhou.log.aliyuncs.com\nContent-Type:application/json\n\n{\n  \"description\" : \"this is test\",\n  \"projectName\" : \"test-project\",\n  \"resourceGroupId\" : \"rg-aekzf******sxby\"\n}\n~~~","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 400  | ProjectAlreadyExist | Project already exist.  | Project已存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"CreateDomain":{"summary":"为Project绑定新的自定义域名。","path":"/domains","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create"},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求消息体。","type":"object","properties":{"domainName":{"description":"域名。","type":"string","required":true,"example":"example.com"}},"required":true}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建自定义域名","description":"Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 403  | ExceedQuota|  domain quota exceed. | 域名创建达到上限，目前最多只支持绑定一个域名。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"CreateLogging":{"summary":"为Project创建服务日志。","path":"/logging","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create"},"parameters":[{"name":"project","in":"host","schema":{"title":"Project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"body","in":"body","style":"json","schema":{"title":"请求结构体。","description":"请求结构体。","type":"object","properties":{"loggingProject":{"title":"服务日志要保存到的 project 名称。","description":"服务日志要保存到的Project名称。","type":"string","required":true,"example":"my-project"},"loggingDetails":{"title":"服务日志配置列表。","description":"服务日志配置列表。","type":"array","items":{"title":"服务日志配置项。","description":"服务日志配置项。","type":"object","properties":{"type":{"title":"服务日志的种类。可选 \"consumergroup_log\"、 \"logtail_alarm\"、\"operation_log\"、\"logtail_profile\"、\"metering\"、\"logtail_status\"、\"scheduled_sql_alert\"、 \"etl_alert\" 等。","description":"服务日志的种类。取值包括：\n\n-  consumergroup_log：消费组延迟日志\n-  logtail_alarm：消费组延迟日志\n- operation_log：操作日志\n- logtail_profile：Logtail采集日志\n- metering：计量日志\n- logtail_status：Logtail状态日志\n- scheduled_sql_alert：Scheduled SQL作业运行日志\n-  etl_alert：数据加工作业的运行日志","type":"string","required":true,"example":"consumergroup_log","enum":["consumergroup_log","logtail_alarm","operation_log","logtail_profile","metering","logtail_status","scheduled_sql_alert","etl_alert"]},"logstore":{"title":"该种类服务日志要保存到的 logstore 名称。","description":"该种类服务日志要保存到的Logstore名称。","type":"string","required":true,"example":"my-logstore"}},"required":false},"required":true}},"required":true}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建服务日志","description":"Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。"},"DeleteProject":{"summary":"删除一个指定的Project。","path":"/","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete","abilityTreeCode":"8740","abilityTreeNodes":["FEATUREslsMYXSJS"],"autoTest":true,"tenantRelevance":"tenant"},"parameters":[{"name":"project","in":"host","schema":{"title":"projetc 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-project-test"}},{"name":"forceDelete","in":"query","schema":{"type":"boolean","required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"删除指定Project","description":"### 接口说明\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project名称。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 删除Project后，其管理的所有日志数据及配置信息都会被释放，不可恢复。在删除Project前请慎重确认，避免数据丢失。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:DeleteProject`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}`  |","requestParamsDescription":"请求示例：\n\nDELETE / HTTP/1.1\nHost:ali-project-test.cn-hangzhou.log.aliyuncs.com\nContent-Type:application/json\n\n公共请求参数","responseParamsDescription":"返回示例：\n\nHTTP/1.1 200 OK","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist| The Project does not exist : projectName.  | Project不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。\n"},"DeleteLogging":{"summary":"删除一个指定Project的服务日志。","path":"/logging","methods":["delete"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete"},"parameters":[{"name":"project","in":"host","schema":{"title":"Project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除指定服务日志","description":"Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。"},"DeleteDomain":{"summary":"删除Project绑定的自定义域名。","path":"/domains/{domainName}","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete"},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"domainName","in":"path","schema":{"title":"要删除的域名","description":"要删除的域名。","type":"string","required":true,"example":"example.com"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除自定义域名","description":"Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 400  | ParameterInvalid|  specified domain does not exist. | 要删除的域名不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"UpdateProject":{"summary":"更新一个Project信息。","path":"/","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","abilityTreeCode":"8870","abilityTreeNodes":["FEATUREslsMYXSJS"],"autoTest":true,"tenantRelevance":"tenant"},"parameters":[{"name":"body","in":"body","style":"json","schema":{"description":"请求结构体。","type":"object","properties":{"description":{"title":"Project description","description":"Project的描述。默认为空字符串。","type":"string","required":true,"example":"Description of my-project-test"},"recycleBinEnabled":{"description":"是否打开回收站","type":"boolean","required":false,"enumValueTitles":{"true":"true","false":"false"},"example":"true"}},"required":true}},{"name":"project","in":"host","schema":{"title":"Project name","description":"Project名称。","type":"string","required":true,"example":"ali-project-test"}}],"responses":{"200":{"headers":{"Server":{"schema":{"type":"string","example":"nginx"}},"Content-Length":{"schema":{"type":"string","example":"0"}},"Connection":{"schema":{"type":"string","example":"close"}},"Access-Control-Allow-Origin":{"schema":{"type":"string","example":"*"}},"Date":{"schema":{"type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新Project","description":"### 接口说明\n\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:UpdateProject`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}`  |","requestParamsDescription":"请求示例：\n\nPUT / HTTP/1.1\nHost:ali-project-test.cn-hangzhou.log.aliyuncs.com\nContent-Type:application/json\n\n{\n  \"description\" : \"Description of my-project-test\",\n  \"recycleBinEnabled\": true\n}","responseParamsDescription":"返回示例：\n\nHTTP/1.1 200 OK","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist| The Project does not exist : projectName  | Project不存在。  |\n| 404  | ParameterInvalid| The body is not valid json string.  | 无效的参数。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"UpdateLogging":{"summary":"更新一个Project的服务日志配置。","path":"/logging","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update"},"parameters":[{"name":"project","in":"host","schema":{"title":"Project 名称。","description":"Project 名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"body","in":"body","style":"json","schema":{"title":"请求结构体。","description":"请求结构体。","type":"object","properties":{"loggingProject":{"title":"服务日志要保存到的 project 名称。","description":"服务日志要保存到的 project 名称。","type":"string","required":true,"example":"my-project"},"loggingDetails":{"title":"服务日志配置列表。","description":"服务日志配置列表。","type":"array","items":{"title":"服务日志配置项。","description":"服务日志配置项。","type":"object","properties":{"type":{"title":"服务日志的种类。可选 \"consumergroup_log\"、 \"logtail_alarm\"、\"operation_log\"、\"logtail_profile\"、\"metering\"、\"logtail_status\"、\"scheduled_sql_alert\"、 \"etl_alert\" 等。","description":"服务日志的种类。取值包括：\n\n-  consumergroup_log：消费组延迟日志\n-  logtail_alarm：消费组延迟日志\n- operation_log：操作日志\n- logtail_profile：Logtail采集日志\n- metering：计量日志\n- logtail_status：Logtail状态日志\n- scheduled_sql_alert：Scheduled SQL作业运行日志\n-  etl_alert：数据加工作业的运行日志","type":"string","required":true,"example":"consumergroup_log","enum":["consumergroup_log","logtail_alarm","operation_log","logtail_profile","metering","logtail_status","scheduled_sql_alert","etl_alert"]},"logstore":{"title":"该种类服务日志要保存到的 logstore 名称。","description":"该种类服务日志要保存到的Logstore名称。","type":"string","required":true,"example":"my-logstore"}},"required":false},"required":true}},"required":true}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新服务日志配置","description":"Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。"},"PutProjectTransferAcceleration":{"summary":"开通或关闭传输加速。","path":"/transferacceleration","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","riskType":"none","chargeType":"paid","abilityTreeCode":"205449","abilityTreeNodes":["FEATUREslsMYXSJS"]},"parameters":[{"name":"project","in":"host","schema":{"type":"string","required":true}},{"name":"body","in":"body","style":"json","schema":{"description":"请求body。","type":"object","properties":{"enabled":{"description":"是否开通传输加速","type":"boolean","required":true,"example":"true"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"配置传输加速"},"GetProject":{"summary":"查询目标Project的详细信息。","path":"/","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"8911","abilityTreeNodes":["FEATUREslsL870A3"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-project-test"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"Project详细信息。","example":"{     \"createTime\": \"2020-11-18 16:55:57\",     \"description\": \"test\",     \"lastModifyTime\": \"2020-11-18 17:07:26\",     \"owner\": \"174****745\",     \"projectName\": \"ali-project-test\",     \"region\": \"cn-hangzhou\",     \"status\": \"Normal\" }","$ref":"#/components/schemas/project"}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"createTime\\\": \\\"\\\",\\n  \\\"lastModifyTime\\\": \\\"\\\",\\n  \\\"description\\\": \\\"\\\",\\n  \\\"owner\\\": \\\"\\\",\\n  \\\"projectName\\\": \\\"\\\",\\n  \\\"region\\\": \\\"\\\",\\n  \\\"status\\\": \\\"\\\",\\n  \\\"resourceGroupId\\\": \\\"\\\",\\n  \\\"dataRedundancyType\\\": \\\"LRS\\\",\\n  \\\"quota\\\": {\\n    \\\"key\\\": \\\"\\\"\\n  },\\n  \\\"recycleBinEnabled\\\": false,\\n  \\\"location\\\": \\\"\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"获取指定Project","description":"### 接口说明\n请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist| The Project does not exist : projectName  | Project不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"ListProject":{"summary":"列出符合条件的Project信息。","path":"/","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","riskType":"none","chargeType":"free","abilityTreeCode":"8912","abilityTreeNodes":["FEATUREslsMYXSJS"]},"parameters":[{"name":"projectName","in":"query","schema":{"description":"Project名称。","type":"string","required":false,"example":"ali-test-project"}},{"name":"offset","in":"query","schema":{"description":"查询开始行，默认值为0。","type":"integer","format":"int32","required":false,"example":"0","default":"0"}},{"name":"size","in":"query","schema":{"title":"默认值为 500。","description":"分页查询时，设置的每页行数。默认值为100，最多返回500个Project信息。","type":"integer","format":"int32","required":false,"example":"10","default":"500"}},{"name":"resourceGroupId","in":"query","schema":{"description":"资源组ID。","type":"string","required":false,"example":"rg-aekzf******sxby"}},{"name":"fetchQuota","in":"query","schema":{"type":"boolean","required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"type":"string","example":"nginx"}},"Content-Length":{"schema":{"type":"string","example":"0"}},"Connection":{"schema":{"type":"string","example":"close"}},"Access-Control-Allow-Origin":{"schema":{"type":"string","example":"*"}},"Date":{"schema":{"type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"Project列表。","type":"object","properties":{"count":{"description":"当前页返回的Project个数。","type":"integer","format":"int64","example":"2"},"total":{"description":"符合查询条件的Project总数。","type":"integer","format":"int64","example":"11"},"projects":{"description":"符合查询条件Project列表。","type":"array","items":{"description":"符合查询条件Project。","example":"不涉及","$ref":"#/components/schemas/project"},"example":"不涉及"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"count\\\": 2,\\n  \\\"total\\\": 11,\\n  \\\"projects\\\": [\\n    {\\n      \\\"createTime\\\": \\\"\\\",\\n      \\\"lastModifyTime\\\": \\\"\\\",\\n      \\\"description\\\": \\\"\\\",\\n      \\\"owner\\\": \\\"\\\",\\n      \\\"projectName\\\": \\\"\\\",\\n      \\\"region\\\": \\\"\\\",\\n      \\\"status\\\": \\\"\\\",\\n      \\\"resourceGroupId\\\": \\\"\\\",\\n      \\\"dataRedundancyType\\\": \\\"LRS\\\",\\n      \\\"quota\\\": {\\n        \\\"key\\\": \\\"\\\"\\n      },\\n      \\\"recycleBinEnabled\\\": false,\\n      \\\"location\\\": \\\"\\\"\\n    }\\n  ]\\n}\",\"type\":\"json\"}]","title":"列出Project信息","description":"### 接口说明\nHost由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。","requestParamsDescription":"请求示例：\n\nGET /?projectName=ali-test-project&offset=0&size=10 HTTP/1.1\nHost:ali-test-project.cn-hangzhou.log.aliyuncs.com\nContent-Type:application/json","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ParameterInvalid | offset : offset pair is invalid  | offset参数取值不合法。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。\n"},"GetProjectLogs":{"summary":"查询目标Project下的日志，该接口是Project级别的SQL查询接口。","path":"/logs","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","riskType":"none","chargeType":"free","abilityTreeCode":"8913","abilityTreeNodes":["FEATUREslsCAO32E"]},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"query","in":"query","schema":{"title":"标准SQL语句。例如日志库名称为nginx-moni，查询时间区间在2022-03-01 10:41:40到2022-03-01 10:56:40之间的访问数量。","description":"标准SQL语句。例如日志库名称为nginx-moni，查询时间区间在2022-03-01 10:41:40到2022-03-01 10:56:40之间的访问数量。","type":"string","required":true,"example":"SELECT COUNT(*) as pv FROM nginx-moni where __time__ > 1646102500 and __time__ < 1646103400"}},{"name":"powerSql","in":"query","schema":{"title":"是否使用SQL独享版。更多信息，请参见开启SQL独享版。\n\ntrue：使用SQL独享版。\nfalse（默认值）：使用SQL普通版。\n除通过powerSql参数配置SQL独享版外，您还可以使用query参数。","description":"是否使用SQL独享版。更多信息，请参见[开启SQL独享版](~~223777~~)。\n\n- true：使用SQL独享版。\n- false（默认值）：使用SQL普通版。\n\n除通过powerSql参数配置SQL独享版外，您还可以使用**query**参数。","type":"boolean","required":false,"example":"false","default":"false"}}],"responses":{"200":{"headers":{"x-log-progress":{"schema":{"title":"查询结果的状态，包括：  Complete：查询已经完成，返回结果为完整结果。 Incomplete：查询已经完成，返回结果为不完整结果，需要重复请求以获得完整结果。","type":"string","example":"Complete"}},"x-log-count":{"schema":{"title":"当前查询结果的日志总数。","type":"integer","format":"int64","example":"10000"}},"x-log-processed-rows":{"schema":{"title":"本次查询处理的行数。","type":"integer","format":"int64","example":"10000"}},"x-log-elapsed-millisecond":{"schema":{"title":"本次查询消耗的毫秒时间。","type":"integer","format":"int64","example":"5"}},"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"title":"返回日志列表，列表中每一项对应一条返回的日志。","description":"查询到的日志。","type":"array","items":{"title":"每条日志是一个 Map<String,String>, 示例 {\n  \"__time__\" : 1409529660,\n  \"__source__\" : \"192.168.1.100\",\n  \"Key1\" : \"error\",\n  \"Key2\" : \"Value2\"\n}","description":"查询到的日志。","type":"object","additionalProperties":{"type":"string","description":"查询到的日志。","example":"[ { \"__time__\" : 1409529660, \"__source__\" : \"192.168.1.100\", \"Key1\" : \"error\", \"Key2\" : \"Value2\" }, { \"__time__\" : 1409529680, \"__source__\" : \"192.168.1.100\", \"Key3\" : \"error\", \"Key4\" : \"Value4\" } ]"},"example":"[ {   \"__time__\" : 1409529660,   \"__source__\" : \"192.168.1.100\",   \"Key1\" : \"error\",   \"Key2\" : \"Value2\" }, {   \"__time__\" : 1409529680,   \"__source__\" : \"192.168.1.100\",   \"Key3\" : \"error\",   \"Key4\" : \"Value4\" } ]"}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"type\":\"json\",\"example\":\"[\\n  {\\n    \\\"key\\\": \\\"[ { \\\\\\\"__time__\\\\\\\" : 1409529660, \\\\\\\"__source__\\\\\\\" : \\\\\\\"192.168.1.100\\\\\\\", \\\\\\\"Key1\\\\\\\" : \\\\\\\"error\\\\\\\", \\\\\\\"Key2\\\\\\\" : \\\\\\\"Value2\\\\\\\" }, { \\\\\\\"__time__\\\\\\\" : 1409529680, \\\\\\\"__source__\\\\\\\" : \\\\\\\"192.168.1.100\\\\\\\", \\\\\\\"Key3\\\\\\\" : \\\\\\\"error\\\\\\\", \\\\\\\"Key4\\\\\\\" : \\\\\\\"Value4\\\\\\\" } ]\\\"\\n  }\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"获取目标Project下的日志","description":"### 接口说明\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。\n- 查询日志前，已配置索引。具体操作，请参见[创建索引](~~90732~~)。\n- 日志服务查询日志时存在使用限制。请设计合理查询与分析语句、设置合理查询区间等。更多信息，请参见[查询日志使用限制](~~43772~~)和[分析日志使用限制](~~53608~~)。\n- 参数query是一个标准的SQL查询语句。\n- 查询的Logstore在查询语句的from条件中指定。可以将Logstore看做是SQL中的表。\n- 在查询的SQL条件中必须指定要查询的时间范围，时间范围由__date__（Timestamp类型）或__time__（Integer类型，单位是秒）来指定。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:GetProjectLogs`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}`  |","requestParamsDescription":"**请求示例：** \n\n~~~\nGET /logs?query=SELECT COUNT(*) as pv FROM nginx-moni where __time__ > 1646102500 and __time__ < 1646103400&powerSql=false HTTP/1.1\nHost:ali-test-project.ch-hangzhou.log.aliyuncs.com\nContent-Type:application/json\n~~~","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n|  400 |  ParameterInvalid|  Parameter is invalid. | 请求的参数错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"GetLogging":{"summary":"查询目标Project的服务日志配置。","path":"/logging","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"title":"Project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"服务日志信息。","example":"{\"loggingDetails\":[{\"logstore\":\"internal-diagnostic_log\",\"type\":\"consumergroup_log\"},{\"logstore\":\"internal-diagnostic_log\",\"type\":\"logtail_alarm\"},{\"logstore\":\"internal-diagnostic_log\",\"type\":\"logtail_profile\"},{\"logstore\":\"internal-diagnostic_log\",\"type\":\"metering\"},{\"logstore\":\"internal-diagnostic_log\",\"type\":\"scheduled_sql_alert\"},{\"logstore\":\"internal-diagnostic_log\",\"type\":\"logtail_status\"},{\"logstore\":\"internal-diagnostic_log\",\"type\":\"etl_alert\"}],\"loggingProject\":\"java-sdk-test-project-name\"}\n","$ref":"#/components/schemas/logging"}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"loggingProject\\\": \\\"my-project\\\",\\n  \\\"loggingDetails\\\": [\\n    {\\n      \\\"type\\\": \\\"consumergroup_log\\\",\\n      \\\"logstore\\\": \\\"my-logstore\\\"\\n    }\\n  ]\\n}\",\"type\":\"json\"}]","title":"获取服务日志信息","description":"Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。"},"ListDomains":{"summary":"列出Project绑定的自定义域名。","path":"/domains","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"title":"Project name","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"offset","in":"query","schema":{"description":"分页查询开始的位置。默认值为0。","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"size","in":"query","schema":{"description":"分页查询时，设置的每页行数。默认值为500，最大值为500。","type":"integer","format":"int32","required":false,"example":"10"}},{"name":"domainName","in":"query","schema":{"title":"用于搜索匹配的自定义域名","description":"用于匹配自定义域名，例如`example.com`会匹配到`a.example.com`与`b.example.com`。","type":"string","required":false,"example":"example.com"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"请求返回体。","type":"object","properties":{"domains":{"description":"域名列表。","type":"array","items":{"description":"域名。","type":"string","example":"example.com"}},"count":{"description":"当前页返回的域名数量。","type":"integer","format":"int64","example":"1"},"total":{"description":"域名总数。","type":"integer","format":"int64","example":"1"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"domains\\\": [\\n    \\\"example.com\\\"\\n  ],\\n  \\\"count\\\": 1,\\n  \\\"total\\\": 1\\n}\",\"type\":\"json\"}]","title":"查询自定义域名","description":"- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 目前每个Project最多只可以绑定一个自定义域名。"},"CreateLogStore":{"summary":"创建 LogStore。","path":"/logstores","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","abilityTreeCode":"115729","abilityTreeNodes":["FEATUREslsTA08U2"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求参数。","type":"object","properties":{"logstoreName":{"description":"Logstore名称。其命名规则如下：\n\n- 同一个Project下，Logstore名称不可重复。\n- 只能包括小写字母、数字、短划线（-）和下划线（_）。\n- 必须以小写字母或者数字开头和结尾。\n- 长度为2-63字符。","type":"string","required":true,"example":"my-logstore"},"shardCount":{"description":"Shard分区个数。\n\n> 该接口不支持更新Shard个数。只能通过SplitShard或MergeShards接口修改Shard个数。","type":"integer","format":"int32","required":true,"example":"2"},"ttl":{"description":"数据的保存时间，单位为天。取值范围为1~3650。如果配置为3650，表示永久保存。","type":"integer","format":"int32","required":true,"example":"1"},"encrypt_conf":{"description":"加密配置数据结构，包含参数`enable`、 `encrypt_type`、 `user_cmk_info`。更多信息，请参见[EncryptConf ](~~409461~~)。","required":false,"$ref":"#/components/schemas/EncryptConf"},"autoSplit":{"description":"是否自动分裂Shard。\n\n- true：自动分裂Shard。\n- false：不自动分裂Shard。","type":"boolean","required":false,"example":"true"},"enable_tracking":{"description":"是否开启WebTracking功能。默认值为false。\n\n- true：开启WebTracking。\n- false：不开启WebTracking。","type":"boolean","required":false,"example":"false"},"maxSplitShard":{"description":"自动分裂时最大的Shard个数，最小值是1，最大值是256。\n\n> 当autoSplit参数为true时必须设置。","type":"integer","format":"int32","required":false,"example":"64"},"appendMeta":{"description":"是否记录**外网IP地址**和**日志接收时间**。默认值为false。\n\n- true：开启记录外网IP和日志接收时间功能，开启后日志服务自动把日志来源设备的公网IP地址和日志到达服务端的时间添加到日志的Tag字段中。\n- false：不开启记录外网IP和日志接收时间功能。","type":"boolean","required":false,"example":"false"},"telemetryType":{"description":"可观测数据类型。取值包括：\n\n- **None**：日志数据。默认为日志数据。\n- **Metrics**：时序数据。","type":"string","required":false,"example":"None"},"hot_ttl":{"title":"数据在Logstore热存储层中的存储时间，最少为7天。单位：天，取值范围：7~3000。","description":"数据在Logstore热存储层中的存储时间。单位：天，最小为7，最大不能超过ttl的值，取值为-1代表保存时间ttl内全是热存储。\n\n当数据的存储时间超过您所配置的热存储层数据保存时间后，数据将转为低频存储。更多信息，请参见[智能冷热分层存储](~~308645~~)。","type":"integer","format":"int32","required":false,"example":"60"},"mode":{"description":"日志服务提供标准型（Standard）和查询型（Query）两种类型的Logstore。\n\n- **standard**：支持日志服务一站式数据分析功能，适用于实时监控、交互式分析以及构建完整的可观测性系统等场景。\n- **query**：支持高性能查询，索引流量费用约为Standard的一半，但不支持SQL分析，适用于数据量大、存储周期长（周、月级别以上）、无日志分析的场景。\n","type":"string","required":false,"example":"standard"},"infrequentAccessTTL":{"title":"低频存储。没有最少存储时间要求，至少保存30天转归档存储。","description":"低频存储。没有最少存储时间要求，至少保存30天转归档存储。","type":"integer","format":"int32","required":false,"example":"30"},"processorId":{"title":"IngestProcessor ID","description":"IngestProcessor ID","type":"string","required":false}},"required":true}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}},"201":{}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建LogStore","description":"### 接口说明\n\n- 请求语法中的Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等信息。如何查询，请参见[管理Project](~~48984~~)。\n\n- 一个Project中，最多创建200个Logstore。\n- 当日志保存时间达到您所设置的数据保存时间后，日志将被删除。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:CreateLogStore`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/logstore/{#LogstoreName}`  |","extraInfo":"\n| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist | Project does not exist.  | Project不存在。  |\n| 400  | LogstoreAlreadyExist | Logstore already exists. | Logstore已存在。  |\n| 400  |  LogStoreInfoInvalid|  Logstore info is invalid | Logstore信息无效。  |\n|  400 |  ProjectQuotaExceed|  Project Quota Exceed. | 超过Project限额。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"CreateIndex":{"summary":"为指定Logstore创建索引。","path":"/logstores/{logstore}/index","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"readAndWrite","deprecated":false,"systemTags":{"operationType":"create","chargeType":"paid","abilityTreeCode":"8963","abilityTreeNodes":["FEATUREslsTA08U2"]},"parameters":[{"name":"logstore","in":"path","schema":{"description":"Logstore的名称。","type":"string","required":true,"example":"ali-logstore-test"}},{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-project-test"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求消息体。","required":false,"$ref":"#/components/schemas/index"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建索引","description":"Host 由 Project 名称和日志服务 Endpoint 构成，您需要在 Host 中指定 Project。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 400  | IndexInfoInvalid  |  Required field token is lacking or of error format. | 缺少必要的字段标记或格式配置错误。  |\n| 400  |  IndexAlreadyExist |  Logstore index is already created. | 日志索引已经创建。  |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"DeleteLogStore":{"summary":"删除指定Logstore，包括所有Shard数据和索引。","path":"/logstores/{logstore}","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"title":"logstore 名称","description":"Logstore名称。","type":"string","required":true,"example":"aliyun-test-logstore"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除LogStore","description":"### 接口说明\n请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n| 405  | InvalidTimeRange  |  invalid request method: /logstores/logstoreName| logstoreName参数不合法。 |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"DeleteIndex":{"summary":"删除指定Logstore的索引。","path":"/logstores/{logstore}/index","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"readAndWrite","deprecated":false,"systemTags":{"operationType":"delete"},"parameters":[{"name":"logstore","in":"path","schema":{"title":"A short description of struct","description":"Logstore名称。","type":"string","required":true,"example":"ali-test-logstore"}},{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除索引","description":"### 接口说明\nHost由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 400  | ParameterInvalid  |  Log store index not created. | 没有创建日志索引。  |\n| 404  | ProjectNotExist  | The Project does not exist : projectName.  | Project不存在。  |\n| 404  | LogStoreNotExist  |logstore logstoreName does not exist.  | Logstore不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"PutWebtracking":{"summary":"通过 WebTracking 方式单次写入多条日志。","path":"/logstores/{logstoreName}/track","methods":["post"],"schemes":["http","https"],"security":[{"Anonymous":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","riskType":"none","chargeType":"free","abilityTreeCode":"9127","abilityTreeNodes":["FEATUREslsWY5SG2"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstoreName","in":"path","schema":{"title":"A short description of struct","description":"Logstore名称。","type":"string","required":true,"example":"ali-test-logstore"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求消息体。","type":"object","properties":{"__topic__":{"description":"日志主题。","type":"string","required":false,"example":"topic"},"__source__":{"description":"日志来源。","type":"string","required":true,"example":"source"},"__logs__":{"description":"日志内容列表。每个元素为一个JSON对象，表示一条日志。\n> **说明**WebTracking采集的日志时间为日志到达服务端的时间，每条日志中无需设置__time__字段，如果存在该字段，将被服务端使用日志到达的时间覆盖。","type":"array","items":{"description":"日志内容列表。","type":"object","required":false,"additionalProperties":{"type":"string","description":"日志内容。","example":"{          \"key1\": \"value1\",          \"key2\": \"value2\"         }"}},"required":true},"__tags__":{"description":"日志标签。","type":"object","required":false,"additionalProperties":{"type":"string","description":"日志标签。","example":"{ \"tag1\": \"value1\", \"tag2\": \"value2\" }"}}},"required":true}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"通过WebTracking批量写入日志","description":"### 接口说明\n\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n\n- 适用于在网页或者客户端采集日志的场景。\n- 使用Web Tracking采集日志时，单个请求只能写入一条日志。更多信息，请参见[使用Web Tracking采集日志](~~31752~~)。\n- 针对日志量较大的场景，可以调用PutWebTracking接口将多条日志合并为一次请求。\n- 使用PutWebTracking接口写入日志时，需要先为Logstore打开Web Tracking开关。更多信息，请参见[使用Web Tracking采集日志](~~31752~~)。\n- 该接口不支持同时写入多个Topic的日志数据。\n- 使用该接口则表示该Logstore打开互联网匿名写入权限，没有经过有效鉴权（不需要AccessKey），可能产生脏数据。","requestParamsDescription":"仅支持如下三个请求头，在调用PutWebTracking接口时前两个为必选，格式和含义请参见公共请求参数文档。\n\n- x-log-apiversion: 0.6.0\n- x-log-bodyrawsize: 1234\n- x-log-compresstype: lz4\n\n如果发送的数据没有经过任何压缩，不需要指定x-log-compresstype。如果需要对数据压缩发送，当前仅支持lz4和Deflate算法，其分别对应的请求头为：`x-log-compresstype: lz4`或`x-log-compresstype: deflate`。详细数据压缩步骤，请参见[数据压缩](~~449460~~)。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n| 400  | PostBodyInvalid  |  Fail to parse protobuf. | Protobuffer内容不合法，无法解析。  |\n| 400  |  PostBodyInvalid |  Body invalid error message. | 请求的Body不合法。  |\n|  400 |  PostBodyUncompressError |  Post body uncompressed fail. | 日志内容解压失败。  |\n|  400 |  PostBodyTooLarge |  Body size bodySize must little than 10485760. | 请求Body （压缩前）不能超过10MB。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"UpdateLogStore":{"summary":"更新Logstore的属性信息。","path":"/logstores/{logstore}","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","abilityTreeCode":"115728","abilityTreeNodes":["FEATUREslsTA08U2"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"description":"Logstore名称。","type":"string","required":true,"example":"test-logstore"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求体参数。","type":"object","properties":{"logstoreName":{"description":"Logstore名称。","type":"string","required":true,"example":"test-logstore"},"shardCount":{"description":"Shard分区个数。\n\n> 该接口不支持更新分区个数。只能通过SplitShard或MergeShards接口修改分区个数。","type":"integer","format":"int32","deprecated":true,"required":false,"example":"2"},"ttl":{"description":"数据的保存时间，单位为天。取值范围为1~3650。如果配置为3650，表示永久保存。","type":"integer","format":"int32","required":true,"example":"30"},"encrypt_conf":{"description":"加密配置数据结构。","required":false,"$ref":"#/components/schemas/EncryptConf"},"autoSplit":{"description":"是否自动分裂Shard。\n\n- true：自动分裂Shard。\n- false：不自动分裂Shard。","type":"boolean","required":false,"example":"true"},"enable_tracking":{"description":"是否开启WebTracking功能。默认值为false。\n\n- true：开启WebTracking。\n- false：不开启WebTracking。","type":"boolean","required":false,"example":"false"},"appendMeta":{"description":"是否记录外网IP地址功能。默认值为false。\n\n- true：记录外网IP地址。\n- false：不记录外网IP地址。","type":"boolean","required":false,"example":"false"},"maxSplitShard":{"description":"自动分裂时最大的Shard个数，最小值是1，最大值是256。\n\n> 当autoSplit为true时必须指定。","type":"integer","format":"int32","required":false,"example":"64"},"telemetryType":{"description":"可观测数据类型。取值包括：\n\n- None：日志数据。默认为日志数据。\n- Metrics：时序数据。","type":"string","deprecated":true,"required":false,"example":"None"},"hot_ttl":{"title":"数据在Logstore热存储层中的存储时间，最少为7天。单位：天，取值范围：7~3000。","description":"数据在Logstore热存储层中的存储时间，最少为7天。单位：天，取值范围：7~3000。\n当数据的存储时间超过您所配置的热存储层数据保存时间后，数据将转为低频存储。更多信息，请参见[智能冷热分层存储](~~308645~~)。","type":"integer","format":"int32","required":false,"example":"60"},"mode":{"description":"日志服务提供标准型（Standard）和查询型（Query）两种类型的Logstore。\n\n- **standard**：支持日志服务一站式数据分析功能，适用于实时监控、交互式分析以及构建完整的可观测性系统等场景。\n- **query**：支持高性能查询，索引流量费用约为Standard的一半，但不支持SQL分析，适用于数据量大、存储周期长（周、月级别以上）、无日志分析的场景。\n\n","type":"string","required":false,"example":"standard"},"infrequentAccessTTL":{"title":"低频存储。没有最少存储时间要求，至少保存30天转归档存储。","description":"低频存储。没有最少存储时间要求，至少保存30天转归档存储。","type":"integer","format":"int32","required":false,"example":"30"}},"required":true}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"eventInfo":{"enable":false,"eventNames":[]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新LogStore","description":"### 接口说明\n\n- 更新Logstore前需要先使用GetLogStore获取Logstore的原配置，在此基础上修改后，作为参数传入到UpdateLogStore中。\n- 请求语法中的Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等信息。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:UpdateLogStore`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/logstore/{#LogstoreName}`  |","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"UpdateIndex":{"summary":"更新Logstore的索引信息。","path":"/logstores/{logstore}/index","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","abilityTreeCode":"8958","abilityTreeNodes":["FEATUREslsTA08U2"]},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"title":"logstore 名称。","description":"Logstore名称。","type":"string","required":true,"example":"test-logstore"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求体。","required":false,"$ref":"#/components/schemas/index"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"更新索引","description":"### 接口说明\nHost由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。"},"SplitShard":{"summary":"分裂一个指定的readwrite状态的Shard。","path":"/logstores/{logstore}/shards/{shard}?action=split","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"readAndWrite","deprecated":false,"systemTags":{"operationType":"update"},"parameters":[{"name":"project","in":"host","schema":{"title":"Project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"title":"Logstore 名称。","description":"Logstore名称。","type":"string","required":true,"example":"logstorename"}},{"name":"shard","in":"path","schema":{"title":"必须是一个 readwrite 状态的 shard 的 id。","description":"Shard ID。","type":"integer","format":"int32","required":true,"example":"0"}},{"name":"key","in":"query","schema":{"title":"分裂的位置。","description":"分裂位置。","type":"string","required":false,"example":"ef000000000000000000000000000000"}},{"name":"shardCount","in":"query","schema":{"title":"要分裂成的 shard 数量，默认为 2。","description":"Shard分裂个数。","type":"integer","format":"int32","required":false,"example":"2"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"title":"请求成功后，其响应Body中包含3个Shard元素组成的数组，第一个Shard为原Shard，后两个为分裂后的Shard。","description":"返回的Shard列表。例如Shard数量为2，则返回3个Shard元素组成的数组，第一个Shard为原Shard，后两个为分裂后的Shard。","type":"array","items":{"title":"shard 结构体。","description":"Shard信息。","$ref":"#/components/schemas/shard"}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"[\\n  {\\n    \\\"shardID\\\": 0,\\n    \\\"status\\\": \\\"readwrite\\\",\\n    \\\"inclusiveBeginKey\\\": \\\"00000000000000000000000000000000\\\",\\n    \\\"exclusiveEndKey\\\": \\\"8000000000000000000000000000000\\\",\\n    \\\"serverIp\\\": \\\"10.0.xx.x\\\",\\n    \\\"createTime\\\": 1453949705\\n  }\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"分裂Shard","description":"### 接口说明\n\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n- 每个Shard均有范围，为MD5左闭右开区间`[BeginKey,EndKey)`。Shard状态包括readwrite（读写）和readonly（只读），支持分裂和合并Shard。更多信息，请参见[分区（Shard）](~~28976~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:SplitShard`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/logstore/{#LogstoreName}`  |","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n| 400  | ParameterInvalid|  invalid shard id. | 无效Shard ID。  |\n| 400  |  ParameterInvalid|  invalid mid hash. | 无效分裂位置参数。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[错误码对照表](~~29013~~)。"},"UpdateLogStoreMeteringMode":{"summary":"更新Logstore计量模式。","path":"/logstores/{logstore}/meteringmode","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","riskType":"high","chargeType":"paid"},"parameters":[{"name":"project","in":"host","schema":{"title":"Project名称","description":"Project名称","type":"string","required":true,"example":"projectName"}},{"name":"logstore","in":"path","schema":{"title":"LogStore名称","description":"LogStore名称","type":"string","required":true,"example":"logstoreName"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求参数。","type":"object","properties":{"meteringMode":{"title":"计量模式。ChargeByFunction 默认计量模式，ChargeByDataIngest 流量模式。","description":"计量模式。ChargeByFunction 默认计量模式，ChargeByDataIngest 流量模式。","type":"string","required":true,"example":"ChargeByFunction","default":"ChargeByFunction","enum":["ChargeByDataIngest","ChargeByFunction"]}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新LogStore计量模式"},"MergeShard":{"summary":"合并相邻位置的读写Shard。","path":"/logstores/{logstore}/shards/{shard}?action=merge","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"deprecated":false,"systemTags":{"operationType":"update","riskType":"none","chargeType":"paid","abilityTreeCode":"155307","abilityTreeNodes":["FEATUREslsL870A3"],"tenantRelevance":"tenant"},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"description":"Logstore名称。","type":"string","required":true,"example":"ali-test-logstore"}},{"name":"shard","in":"path","schema":{"description":"Shard ID。","type":"integer","format":"int32","required":true,"example":"3"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}},"schema":{"description":"Shard数据结构。","type":"array","items":{"description":"包含3个Shard元素组成的数组，第一个Shard为合并之后的Shard，后两个为合并之前的Shard。","$ref":"#/components/schemas/shard"}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"[\\n  {\\n    \\\"shardID\\\": 0,\\n    \\\"status\\\": \\\"readwrite\\\",\\n    \\\"inclusiveBeginKey\\\": \\\"00000000000000000000000000000000\\\",\\n    \\\"exclusiveEndKey\\\": \\\"8000000000000000000000000000000\\\",\\n    \\\"serverIp\\\": \\\"10.0.xx.x\\\",\\n    \\\"createTime\\\": 1453949705\\n  }\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"合并shard","description":"### 接口说明\n\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 每个Shard均有范围，为MD5左闭右开区间`[BeginKey,EndKey)`。Shard状态包括readwrite（读写）和readonly（只读），支持分裂和合并Shard。更多信息，请参见[分区（Shard）](~~28976~~)。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n| 400  | ParameterInvalid|  invalid shard id.| 无效Shard ID。  |\n| 400  |  ParameterInvalid| can not merge the last shard. | 无效merge。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[错误码对照表](~~29013~~)。"},"ListLogStores":{"summary":"查询指定Project下所有或匹配的LogStore列表。","path":"/logstores","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"offset","in":"query","schema":{"description":"查询开始行。默认值为0。","type":"integer","format":"int32","required":false,"example":"0","default":"0"}},{"name":"size","in":"query","schema":{"title":"默认值为 500。","description":"分页查询时，设置的每页行数。最大值为500。默认值为200。","type":"integer","format":"int32","required":false,"example":"10","default":"500"}},{"name":"logstoreName","in":"query","schema":{"description":"Logstore名称。支持模糊匹配，例如输入test，则返回名称包含test的Logstore列表。","type":"string","required":false,"example":"my-logstore"}},{"name":"telemetryType","in":"query","schema":{"description":"要查询的日志类型。取值包括：\n\n- None：查询所有日志类型。\n- Metrics：查询Metrics类型。","type":"string","required":false,"example":"None"}},{"name":"mode","in":"query","schema":{"description":"日志服务提供标准型（Standard）和查询型（Query）两种类型的Logstore。\n  - **standard**：支持日志服务一站式数据分析功能，适用于实时监控、交互式分析以及构建完整的可观测性系统等场景。\n  - **query**：支持高性能查询，索引流量费用约为Standard的一半，但不支持SQL分析，适用于数据量大、存储周期长（周、月级别以上）、无日志分析的场景。","type":"string","required":false,"example":"standard"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"title":"","description":"返回body","type":"object","properties":{"total":{"title":"符合查询条件的logstore总数","description":"符合查询条件的Logstore总数。","type":"integer","format":"int32","example":"2"},"count":{"title":"当前返回行数","description":"当前返回行数。","type":"integer","format":"int32","example":"2"},"logstores":{"description":"满足条件的Logstore列表。","type":"array","items":{"description":"Logstore信息。","type":"string","example":"test-1,test-2"},"example":"[\"test-1\",\"test-2\"]"}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"total\\\": 2,\\n  \\\"count\\\": 2,\\n  \\\"logstores\\\": [\\n    \\\"test-1,test-2\\\"\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"列出LogStore","description":"### 接口说明\n\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:ListLogStores`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/logstore/*`  |","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"GetLogStore":{"summary":"查看Logstore的详细信息。","path":"/logstores/{logstore}","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"115730","abilityTreeNodes":["FEATUREslsTA08U2"]},"parameters":[{"name":"logstore","in":"path","schema":{"title":"The logstore name.","description":"Logstore名称。","type":"string","required":true,"example":"ali-test-logstore"}},{"name":"project","in":"host","schema":{"type":"string","required":true}}],"responses":{"200":{"schema":{"title":"Schema of Response","description":"Logstore结构体。","example":"ali-test-logstore","$ref":"#/components/schemas/logstore"}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"logstoreName\\\": \\\"my-logstore\\\",\\n  \\\"ttl\\\": 30,\\n  \\\"shardCount\\\": 2,\\n  \\\"enable_tracking\\\": false,\\n  \\\"autoSplit\\\": true,\\n  \\\"maxSplitShard\\\": 2,\\n  \\\"appendMeta\\\": true,\\n  \\\"telemetryType\\\": \\\"\\\",\\n  \\\"createTime\\\": 0,\\n  \\\"lastModifyTime\\\": 0,\\n  \\\"encrypt_conf\\\": {\\n    \\\"enable\\\": true,\\n    \\\"encrypt_type\\\": \\\"default\\\",\\n    \\\"user_cmk_info\\\": {\\n      \\\"cmk_key_id\\\": \\\"\\\",\\n      \\\"arn\\\": \\\"\\\",\\n      \\\"region_id\\\": \\\"\\\"\\n    }\\n  },\\n  \\\"hot_ttl\\\": 0,\\n  \\\"infrequentAccessTTL\\\": 30,\\n  \\\"mode\\\": \\\"standard\\\",\\n  \\\"productType\\\": \\\"\\\",\\n  \\\"resourceQuota\\\": {\\n    \\\"storage\\\": {\\n      \\\"preserved\\\": 0,\\n      \\\"used\\\": 0\\n    }\\n  },\\n  \\\"processorId\\\": \\\"\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"查看Logstore信息","description":"### 接口说明\nHost由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。","extraInfo":"### 错误码\n| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。\n"},"GetIndex":{"summary":"查询指定Logstore的索引信息。","path":"/logstores/{logstore}/index","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"8966","abilityTreeNodes":["FEATUREslsTA08U2"]},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"project 名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"title":"logstore 名称。","description":"Logstore名称。","type":"string","required":true,"example":"test-logstore"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"请求返回的结构体。","type":"object","properties":{"ttl":{"title":"ttl","description":"索引文件生命周期，支持7天、30天、90天。","type":"integer","format":"int32","required":true,"example":"30"},"max_text_len":{"title":"统计字段最大长度","description":"日志服务默认字段值的最大长度为2048字节，即2 KB。如果您需要修改字段值的最大长度，可设置统计字段（text）最大长度，取值范围为64~16384字节。","type":"integer","format":"int32","example":"2048"},"log_reduce_white_list":{"title":"日志聚类的聚类字段过滤白名单，仅当日志聚类开启时有效","description":"日志聚类的聚类字段过滤白名单，仅当日志聚类开启时有效","type":"array","items":{"description":"白名单字段。","type":"string","example":"a"}},"log_reduce_black_list":{"title":"日志聚类的聚类字段过滤黑名单，仅当日志聚类开启时有效","description":"日志聚类的聚类字段过滤黑名单，仅当日志聚类开启时有效。","type":"array","items":{"description":"黑名单字段。","type":"string","example":"b"}},"line":{"title":"全文索引","description":"全文索引配置。","type":"object","properties":{"chn":{"title":"包含中文","description":"是否包含中文。\n\n- true：包含中文。\n- false：不包含中文。","type":"boolean","example":"false"},"caseSensitive":{"title":"大小写敏感","description":"是否大小写敏感。\n  - true：大小写敏感。\n  - false：大小写不敏感。","type":"boolean","example":"false"},"token":{"title":"分词符","description":"分词符列表。","type":"array","items":{"description":"分词符。例如 \",\"  \".\"  \"\\r\" \"\\n\" 等。","type":"string","example":","},"required":true},"include_keys":{"title":"包含的字段列表，不能与exclude_keys同时指定。","description":"包含的字段列表。","type":"array","items":{"description":"包含字段列表。","type":"string","example":"includeField"}},"exclude_keys":{"title":"排除的字段列表，不能与include_keys同时指定。","description":"\t排除的字段列表。","type":"array","items":{"description":"排除字段列表。","type":"string","example":"excludeField"}}}},"keys":{"title":"字段索引","description":"字段索引配置。key为字段名称，value为索引配置。","type":"object","additionalProperties":{"$ref":"#/components/schemas/IndexKey","description":"单个字段的索引配置。"}},"log_reduce":{"title":"是否开启日志聚类","description":"是否开启日志聚类。","type":"boolean","example":"false"},"lastModifyTime":{"title":"上次修改时间","description":"索引最后更新时间。Unix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","type":"integer","format":"int64","example":"1524155379"},"index_mode":{"title":"index 模式","description":"索引类型。","type":"string","example":"v2"},"storage":{"title":"存储类型","description":"存储类型，目前固定取值为pg。","type":"string","example":"pg"}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"ttl\\\": 30,\\n  \\\"max_text_len\\\": 2048,\\n  \\\"log_reduce_white_list\\\": [\\n    \\\"a\\\"\\n  ],\\n  \\\"log_reduce_black_list\\\": [\\n    \\\"b\\\"\\n  ],\\n  \\\"line\\\": {\\n    \\\"chn\\\": false,\\n    \\\"caseSensitive\\\": false,\\n    \\\"token\\\": [\\n      \\\",\\\"\\n    ],\\n    \\\"include_keys\\\": [\\n      \\\"includeField\\\"\\n    ],\\n    \\\"exclude_keys\\\": [\\n      \\\"excludeField\\\"\\n    ]\\n  },\\n  \\\"keys\\\": {\\n    \\\"key\\\": {\\n      \\\"chn\\\": true,\\n      \\\"caseSensitive\\\": true,\\n      \\\"token\\\": [\\n        \\\"|\\\"\\n      ],\\n      \\\"alias\\\": \\\"myAlias\\\",\\n      \\\"type\\\": \\\"text\\\",\\n      \\\"doc_value\\\": true,\\n      \\\"index_all\\\": true,\\n      \\\"max_depth\\\": 0,\\n      \\\"json_keys\\\": {\\n        \\\"key\\\": {\\n          \\\"chn\\\": true,\\n          \\\"caseSensitive\\\": true,\\n          \\\"token\\\": [\\n            \\\"|\\\"\\n          ],\\n          \\\"alias\\\": \\\"myAlias\\\",\\n          \\\"type\\\": \\\"text\\\",\\n          \\\"doc_value\\\": true\\n        }\\n      }\\n    }\\n  },\\n  \\\"log_reduce\\\": false,\\n  \\\"lastModifyTime\\\": 1524155379,\\n  \\\"index_mode\\\": \\\"v2\\\",\\n  \\\"storage\\\": \\\"pg\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"获取索引","description":"### 接口说明\n请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n| 404  | IndexConfigNotExist| index config doesn’t exist.  | 查询的索引不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"ListShards":{"summary":"列出指定Logstore中所有可用的Shard。","path":"/logstores/{logstore}/shards","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"project 名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"title":"logstore 名称。","description":"logstore名称。","type":"string","required":true,"example":"test-logstore"}}],"responses":{"200":{"schema":{"title":"shard 列表。","description":"返回项目下所有 shard 的列表。","type":"array","items":{"title":"shard 结构体。","description":"shard 结构体。","$ref":"#/components/schemas/shard"}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"[\\n  {\\n    \\\"shardID\\\": 0,\\n    \\\"status\\\": \\\"readwrite\\\",\\n    \\\"inclusiveBeginKey\\\": \\\"00000000000000000000000000000000\\\",\\n    \\\"exclusiveEndKey\\\": \\\"8000000000000000000000000000000\\\",\\n    \\\"serverIp\\\": \\\"10.0.xx.x\\\",\\n    \\\"createTime\\\": 1453949705\\n  }\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"<ListShardsResponse>\\n    <shardID>0</shardID>\\n    <status>readwrite</status>\\n    <inclusiveBeginKey>0</inclusiveBeginKey>\\n    <exclusiveEndKey>8000000000000000000000000000000</exclusiveEndKey>\\n    <createTime>1453949705</createTime>\\n</ListShardsResponse>\",\"errorExample\":\"\"}]","title":"查询shard列表"},"GetLogs":{"summary":"查询指定Project下某个Logstore中的日志数据。","path":"/logstores/{logstore}?type=log","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"8954","abilityTreeNodes":["FEATUREslsCAO32E"]},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"title":"logstore 名称。","description":"查询Logstore中的数据。","type":"string","required":true,"example":"example-logstore"}},{"name":"from","in":"query","schema":{"title":"查询开始时间点。该时间是指写入日志数据时指定的日志时间。\n\n请求参数from和to定义的时间区间遵循左闭右开原则，即该时间区间包括区间开始时间点，但不包括区间结束时间点。如果from和to的值相同，则为无效区间，函数直接返回错误。\nUnix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","description":"查询开始时间点。该时间是指写入日志数据时指定的日志时间。\n\n- 请求参数**from**和**to**定义的时间区间遵循左闭右开原则，即该时间区间包括区间开始时间点，但不包括区间结束时间点。如果**from**和**to**的值相同，则为无效区间，函数直接返回错误。\n- Unix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。\n\n> 如果您要确保不漏查数据，请将查询时间对齐到分钟级别。如果您在分析语句中设置了时间范围，则查询分析时以该时间范围为准。\n\n如果您需要精确到秒，需要在分析语句中指定时间时，使用[from_unixtime函数](~~63451~~)或[to_unixtime函数](~~63451~~)转换下时间格式。例如：\n- `* | SELECT * FROM log WHERE from_unixtime(__time__) > from_unixtime(1664186624) AND from_unixtime(__time__) < now()`\n- `* | SELECT * FROM log WHERE __time__ > to_unixtime(date_parse('2022-10-19 15:46:05', '%Y-%m-%d %H:%i:%s')) AND __time__ < to_unixtime(now())`","type":"integer","format":"int32","required":true,"example":"1627268185"}},{"name":"to","in":"query","schema":{"title":"查询结束时间点。该时间是指写入日志数据时指定的日志时间。\n\n请求参数from和to定义的时间区间遵循左闭右开原则，即该时间区间包括区间开始时间点，但不包括区间结束时间点。如果from和to的值相同，则为无效区间，函数直接返回错误。\nUnix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","description":"查询结束时间点。该时间是指写入日志数据时指定的日志时间。\n\n- 请求参数**from**和**to**定义的时间区间遵循左闭右开原则，即该时间区间包括区间开始时间点，但不包括区间结束时间点。如果**from**和**to**的值相同，则为无效区间，函数直接返回错误。\n- Unix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。\n\n> 如果您要确保不漏查数据，请将查询时间对齐到分钟级别。如果您在分析语句中设置了时间范围，则查询分析时以该时间范围为准。\n\n如果您需要精确到秒，需要在分析语句中指定时间时，使用[from_unixtime函数](~~63451~~)或[to_unixtime函数](~~63451~~)转换下时间格式。例如：\n- `* | SELECT * FROM log WHERE from_unixtime(__time__) > from_unixtime(1664186624) AND from_unixtime(__time__) < now()`\n- `* | SELECT * FROM log WHERE __time__ > to_unixtime(date_parse('2022-10-19 15:46:05', '%Y-%m-%d %H:%i:%s')) AND __time__ < to_unixtime(now())`","type":"integer","format":"int32","required":true,"example":"1627269085"}},{"name":"query","in":"query","schema":{"title":"查询语句或者分析语句。更多信息，请参见查询概述和分析概述。\n\n在query参数的分析语句中加上set session parallel_sql=true;，表示使用SQL独享版。例如* | set session parallel_sql=true; select count(*) as pv 。\n\n说明 当query参数中有分析语句（SQL语句）时，该接口的line参数和offset参数无效，建议设置为0，需通过SQL语句的LIMIT语法实现翻页。更多信息，请参见分页显示查询分析结果。","description":"查询语句或者分析语句。更多信息，请参见[查询概述](~~43772~~)和[分析概述](~~53608~~)。\n在query参数的分析语句中加上`set session parallel_sql=true;`，表示使用SQL独享版。例如`* | set session parallel_sql=true; select count(*) as pv` 。常见查询与分析问题，请参见[查询与分析日志的常见报错](~~61628~~)。\n\n> 当query参数中有分析语句（SQL语句）时，该接口的line参数和offset参数无效，建议设置该接口的参数为0，需通过SQL语句的LIMIT语法实现翻页。更多信息，请参见[分页显示查询分析结果](~~89994~~)。","type":"string","required":false,"example":"status: 401 | SELECT remote_addr,COUNT(*) as pv GROUP by remote_addr ORDER by pv desc limit 5"}},{"name":"topic","in":"query","schema":{"title":"status: 401 | SELECT remote_addr,COUNT(*) as pv GROUP by remote_addr ORDER by pv desc limit 5","description":"日志主题。默认值为空字符串。更多信息，请参见[日志主题（Topic）](~~48881~~)。","type":"string","required":false,"example":"topic"}},{"name":"line","in":"query","schema":{"title":"仅当query参数为查询语句时，该参数有效，表示请求返回的最大日志条数。最小值为0，最大值为100，默认值为100。","description":"仅当query参数为查询语句时，该参数有效，表示请求返回的最大日志条数。最小值为0，最大值为100，默认值为100。分页查询请参见[分页显示查询分析结果](~~89994~~)。","type":"integer","format":"int64","required":false,"maximum":"100","minimum":"0","example":"100","default":"100"}},{"name":"offset","in":"query","schema":{"title":"仅当query参数为查询语句时，该参数有效，表示查询开始行。默认值为0。","description":"仅当query参数为查询语句时，该参数有效，表示查询开始行。默认值为0。分页查询请参见[分页显示查询分析结果](~~89994~~)。","type":"integer","format":"int64","required":false,"example":"0","default":"0"}},{"name":"reverse","in":"query","schema":{"title":"用于指定返回结果是否按日志时间戳降序返回日志，精确到分钟级别。\n\ntrue：按照日志时间戳降序返回日志。\nfalse（默认值）：按照日志时间戳升序返回日志。\n注意\n当query参数为查询语句时，参数reverse有效，用于指定返回日志排序方式。\n当query参数为查询和分析语句时，参数reverse无效，由SQL分析语句中order by语法指定排序方式。如果order by为asc（默认），则为升序；如果order by为desc，则为降序。","description":"用于指定返回结果是否按日志时间戳降序返回日志，精确到分钟级别。\n\n- true：按照日志时间戳降序返回日志。\n- false（默认值）：按照日志时间戳升序返回日志。\n\n><notice>\n\n- 当query参数为查询语句时，参数reverse有效，用于指定返回日志排序方式。\n- 当query参数为查询和分析语句时，参数reverse无效，由SQL分析语句中order by语法指定排序方式。如果order by为asc（默认），则为升序；如果order by为desc，则为降序。\n\n></notice>","type":"boolean","required":false,"example":"false","default":"false"}},{"name":"powerSql","in":"query","schema":{"title":"用于指定返回结果是否按日志时间戳降序返回日志，精确到分钟级别。\n\ntrue：按照日志时间戳降序返回日志。\nfalse（默认值）：按照日志时间戳升序返回日志。\n注意\n当query参数为查询语句时，参数reverse有效，用于指定返回日志排序方式。\n当query参数为查询和分析语句时，参数reverse无效，由SQL分析语句中order by语法指定排序方式。如果order by为asc（默认），则为升序；如果order by为desc，则为降序。","description":"是否使用SQL独享版。更多信息，请参见[开启SQL独享版](~~223777~~)。\n\n- true：使用SQL独享版。\n- false（默认值）：使用SQL普通版。\n\n除通过powerSql参数配置SQL独享版外，您还可以使用**query**参数。","type":"boolean","required":false,"example":"false","default":"false"}}],"responses":{"200":{"headers":{"x-log-progress":{"schema":{"title":"查询结果的状态，包括：  Complete：查询已经完成，返回结果为完整结果。 Incomplete：查询已经完成，返回结果为不完整结果，需要重复请求以获得完整结果。","type":"string","example":"Complete"}},"x-log-count":{"schema":{"title":"当前查询结果的日志总数。","type":"integer","format":"int64","example":"10000"}},"x-log-processed-rows":{"schema":{"title":"本次查询处理的行数。","type":"integer","format":"int64","example":"10000"}},"x-log-elapsed-millisecond":{"schema":{"title":"本次查询消耗的毫秒时间。","type":"integer","format":"int64","example":"5"}},"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"日志数组Logs，其每个元素就是一条Log。","type":"array","items":{"description":"日志数组Logs，其每个元素就是一条Log。","type":"object","example":"[{'remote_addr': '198.51.XXX.XXX', 'pv': '1', '__source__': '', '__time__': '1649902984'}, {'remote_addr': '198.51.XXX.XXX', 'pv': '1', '__source__': '', '__time__': '1649902984'}, {'remote_addr': '198.51.XXX.XXX', 'pv': '1', '__source__': '', '__time__': '1649902984'}, {'remote_addr': '198.51.XXX.XXX', 'pv': '1', '__source__': '', '__time__': '1649902984'}, {'remote_addr': '198.51.100.XXX', 'pv': '1', '__source__': '', '__time__': '1649902984'}]"}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"[\\n  {\\n    \\\"test\\\": \\\"test\\\",\\n    \\\"test2\\\": 1\\n  }\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"查询日志库日志","description":"### 接口说明\n> 日志服务支持创建定时SQL任务。具体操作，请参见[创建定时SQL任务](~~286457~~)。\n\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n- 日志服务查询日志时存在使用限制。请设计合理查询与分析语句、设置合理查询区间等。更多信息，请参见[查询日志使用限制](~~43772~~)和[分析日志使用限制](~~53608~~)。\n- 查询日志前，已配置索引。具体操作，请参见[创建索引](~~90732~~)。\n\n- 当查询涉及的日志数量变化非常大时，日志服务API无法预测需要调用多少次该接口来获取完整结果。所以需要您查看每次请求返回结果中的x-log-progress状态值，根据状态值来确定是否需要重复调用该接口来获取最终完整结果。每次重复调用该接口都会重新消耗相同数量的查询CU。\n- 当日志写入到Logstore中，日志服务的查询接口（GetHistograms和GetLogs）能够查到该日志的延时因写入日志类型不同而异。日志服务按日志时间戳把日志分为如下两类：\n\n     - 实时数据：日志中时间点为服务器当前时间点(-180秒，900秒]。例如，日志时间为UTC 2014-09-25 12:03:00，服务器收到时为UTC 2014-09-25 12:05:00，则该日志被作为实时数据处理，一般出现在正常场景下。\n     - 历史数据：日志中时间点为服务器当前时间点\\[-7*86400秒，-180秒）。例如，日志时间为UTC 2014-09-25 12:00:00，服务器收到时为UTC 2014-09-25 12:05:00，则该日志被作为历史数据处理，一般出现在补数据场景下。\n   其中，实时数据写入至可查询的延时为3秒左右。\n\n> 日志服务将日志时间（字段名称为__time__）和服务器收到时间（字段名称为__tag__:__receive_time__）做差，若其差值位于\\(-180秒，900秒]范围，则为实时数据，若其差位于\\[-7x86400秒，-180秒），则为历史数据。\n\n- 日志服务提供Java和Python SDK的GetLogs查询使用示例。更多信息，请参见[Java GetLogs使用示例](~~407683~~)和[Python GetLogs使用示例](~~407684~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:GetLogStoreLogs`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/logstore/{#LogstoreName}`  |","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n| 400  | InvalidTimeRange  |  Request time range is invalid. | 请求的时间区间无效。  |\n| 400  |  InvalidQueryString |  Query string is invalid. | 请求的查询分析语句无效。  |\n|  400 |  InvalidOffset |  Offset is invalid. | 请求的offset参数无效。  |\n|  400 |  InvalidLine |  Line is invalid. | 请求的line参数无效。  |\n|  400 |  InvalidReverse |  Reverse value is invalid.| Reverse参数的值无效。  |\n|  400 |  IndexConfigNotExist |  Logstore without index config. | Logstore未开启索引。  |\n|  400 |  ParameterInvalid |  ErrorType:OLSQueryParseError.ErrorMessage:offset is not available for pagination in sql query, please use limit x,y syntax for pagination.|当query参数中有分析语句（SQL语句）时，建议设置该接口的line参数和offset参数为0，通过SQL语句的LIMIT语法实现翻页。<br/>query参数中的SQL语句存在问题时，您可以参见[查询与分析日志的常见报错](~~61628~~)进行排查。|\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"UpdateLogStoreEncryption":{"summary":"更新日志库的加密配置。可以为日志库创建加密配置、开启或关闭日志加密功能。","path":"/logstores/{logstore}/encryption","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","riskType":"none","chargeType":"free","abilityTreeCode":"250787","abilityTreeNodes":["FEATUREslsL870A3"]},"parameters":[{"name":"project","in":"host","schema":{"title":"日志项目。","description":"日志项目。","type":"string","required":true,"example":"test-project"}},{"name":"logstore","in":"path","schema":{"title":"日志库。","description":"日志库。","type":"string","required":true,"example":"test-logstore"}},{"name":"body","in":"body","style":"json","schema":{"title":"请求结构体","description":"请求结构体","type":"object","properties":{"enable":{"title":"是否开启日志加密。\n加密配置更新成功后，后续的加密配置更新请求只允许修改是否开启日志加密，不允许修改 encryptType、userCmkInfo 参数。","description":"是否开启日志加密。\n加密配置更新成功后，后续的加密配置更新请求只允许修改是否开启日志加密，不允许修改 encryptType、userCmkInfo 参数。","type":"boolean","required":true,"example":"true"},"encryptType":{"title":"加密算法类型，支持 default、m4、sm4_ecb、sm4_cbc、sm4_gcm、aes_ecb、aes_cbc、aes_cfb、aes_ofb、aes_gcm。","description":"加密算法类型，支持 default、m4、sm4_ecb、sm4_cbc、sm4_gcm、aes_ecb、aes_cbc、aes_cfb、aes_ofb、aes_gcm。","type":"string","required":false,"example":"default","enum":["default","m4","sm4_ecb","sm4_cbc","sm4_gcm","aes_ecb","aes_cbc","aes_cfb","aes_ofb","aes_gcm"]},"userCmkInfo":{"title":"可选，当通过用户自带密钥（BYOK）加密时，请填写此选项。当通过日志服务自带的服务密钥加密时，无需填写此选项。","description":"可选，当通过用户自带密钥（BYOK）加密时，请填写此选项。当通过日志服务自带的服务密钥加密时，无需填写此选项。","type":"object","properties":{"keyId":{"title":"BYOK的主密钥ID，可通过阿里云密钥管理服务创建一个主密钥。","description":"BYOK的主密钥ID，可通过阿里云密钥管理服务创建一个主密钥，主密钥地域需要与日志服务访问接入点相同。","type":"string","required":false,"example":"f5136b95-2420-ab31-xxxxxxxxx"},"roleArn":{"title":"RAM角色的ARN，格式为 acs:ram::12344***:role/xxxxx。使用 BYOK 加密需要先创建一个 RAM角色，并授予给该角色AliyunKMSReadOnlyAccess、AliyunKMSCryptoUserAccess权限。同时授予此 API 访问者该RAM 角色的 PassRole 权限。","description":"RAM角色的ARN，格式为 acs:ram::12344***:role/xxxxx。使用 BYOK 加密需要先创建一个 RAM角色，并授予给该角色AliyunKMSReadOnlyAccess、AliyunKMSCryptoUserAccess权限。同时授予此 API 访问者该RAM 角色的 PassRole 权限。","type":"string","required":false,"example":"acs:ram::12344***:role/xxxxx"},"regionId":{"title":"地域，例如 cn-hangzhou。","description":"地域，例如 cn-hangzhou。","type":"string","required":false,"example":"cn-hangzhou"}},"required":false}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"errorCodes":{"404":[{"errorCode":"ProjectNotExist","errorMessage":"The Project does not exist: xxxx."},{"errorCode":"LogStoreNotExist","errorMessage":"logstore xxxx does not exist."}]},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新加密配置","description":"## 使用限制\n配置数据加密时，您第一次选定加密机制后，后续您无法修改数据加密机制。也不支持修改加密算法和加密类型，您只能通过enable参数开启或者关闭加密功能。\n例如，您第一次选择的是通过日志服务自带的服务密钥加密机制，后续您无法修改为通过用户自带密钥（BYOK）加密方式。\n\n## 创建加密配置\n### 通过日志服务自带的服务密钥加密\n无需额外操作，加密和密钥管理完全由日志服务负责。\n创建加密配置时需要传入 enable 与 encryptType 参数。\n\n### 通过用户自带密钥（BYOK）加密\n需要先创建 KMS 主密钥，日志服务通过用户提供的密钥加密日志。\n创建加密配置时，需要传入 enable 、encryptType、userCmkInfo 参数。\n\n## 开启或者关闭日志加密\n在您首次创建加密配置成功后，后续不再支持修改加密机制。但是可以通过 enable 参数来开启或者关闭日志加密。"},"GetCursor":{"summary":"可以根据时间获取对应的游标（Cursor）。","path":"/logstores/{logstore}/shards/{shardId}?type=cursor","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"project 名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"title":"logstore 名称。","description":"Logstore名称。","type":"string","required":true,"example":"sls-test-logstore"}},{"name":"shardId","in":"path","schema":{"title":"shard id。","description":"Shard ID。","type":"integer","format":"int32","required":true,"example":"1"}},{"name":"from","in":"query","schema":{"title":"时间点（Unix时间戳）或者字符串begin、end。","description":"时间点（Unix时间戳）或者字符串`begin`、`end`。","type":"string","required":true,"example":"begin"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"Cursor值。","type":"object","properties":{"cursor":{"title":"游标位置。","description":"Cursor值。","type":"string","example":"MTQ0NzI5OTYwNjg5NjYzMjM1Ng=="}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"cursor\\\": \\\"MTQ0NzI5OTYwNjg5NjYzMjM1Ng==\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"通过时间查询Cursor","description":"### 接口说明\n\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n\n- Cursor与Project、Logstore、Shard的关系如下：\n    - Project下有多个Logstore。\n    - 每个Logstore会有多个Shard。\n    - 通过Cursor可以获得特定日志对应的位置。","requestParamsDescription":"通过from可以在Shard中定位生命周期内的日志，假设Logstore的生命周期为`[begin_time,end_time)`，`from=from_time`，那么：\n\n- 当`from_time ≤ begin_time or from_time = \"begin\"`时：返回时间点为begin_time对应的Cursor位置。\n- 当`from_time ≥ end_time or from_time = \"end\"`时：返回当前时间点下一条将被写入的Cursor位置（当前该Cursor位置上无数据）。\n- 当`from_time > begin_time and from_time < end_time`时：返回第一个服务端接收时间大于等于from_time的数据包对应的Cursor。\n\n> Logstore生命周期由属性中TTL字段指定。例如，当前时间为`2018-11-11 09:00:00`，TTL=5。则每个Shard中可以消费的数据时间段为` [2018-11-05 09:00:00,2018-11-11 09:00:00)`，这里的时间指的是服务端时间。更多信息，请参见[数据保存时间](~~48990~~)。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 400  | ParameterInvalid  |  ParameterInvalid | 无效参数。  |\n| 400  |  ShardNotExist |  Shard ShardID does not exist.| Shard不存在。  |\n| 400  |  LogStoreWithoutShard |The logstore has no shard.  | Logstore没有Shard。 |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"GetContextLogs":{"summary":"调用GetContextLogs接口查询指定日志前（上文）后（下文）的若干条日志。","path":"/logstores/{logstore}?type=context_log","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"title":"logstore 名称。","description":"Logstore名称。","type":"string","required":true,"example":"test-logstore"}},{"name":"pack_id","in":"query","schema":{"title":"起始日志所属的LogGroup的唯一身份标识。","description":"起始日志所属的LogGroup的唯一身份标识。","type":"string","required":true,"example":"85C897C740352DC6-808"}},{"name":"pack_meta","in":"query","schema":{"title":"起始日志在对应LogGroup内的唯一上下文结构标识。","description":"起始日志在对应LogGroup内的唯一上下文结构标识。","type":"string","required":true,"example":"2|MTY1NTcwNTUzODY5MTY0MDk1Mg==|3|0"}},{"name":"back_lines","in":"query","schema":{"title":"指定起始日志往前（上文）的日志条数，取值范围为(0,100]。","description":"指定起始日志往前（上文）的日志条数，取值范围为`(0,100]`。","type":"integer","format":"int64","required":true,"example":"10"}},{"name":"forward_lines","in":"query","schema":{"title":"指定起始日志往后（下文）的日志条数，取值范围为(0,100]。","description":"指定起始日志往后（下文）的日志条数，取值范围为`(0,100]`。","type":"integer","format":"int64","required":true,"example":"10"}}],"responses":{"200":{"schema":{"title":"Schema of Response","description":"Schema of Response","type":"object","properties":{"total_lines":{"title":"返回的总日志条数，包含请求参数中所指定的起始日志。","description":"返回的总日志条数，包含请求参数中所指定的起始日志。","type":"integer","format":"int64","example":"201"},"back_lines":{"title":"向前查询到的日志条数。","description":"向前查询到的日志条数。","type":"integer","format":"int64","example":"100"},"forward_lines":{"title":"向后查询到的日志条数。","description":"向后查询到的日志条数。","type":"integer","format":"int64","example":"100"},"progress":{"title":"查询的结果是否完整。\nComplete：查询已经完成，返回结果为完整结果。\nIncomplete：查询已经完成，返回结果为不完整结果，需要重复请求以获得完整结果。","description":"查询的结果是否完整。\n\n- Complete：查询已经完成，返回结果为完整结果。\n- Incomplete：查询已经完成，返回结果为不完整结果，需要重复请求以获得完整结果。","type":"string","example":"Complete"},"logs":{"title":"获取到的日志，按上下文顺序排列。当根据指定起始日志查询不到上下文日志时，此参数为空。","description":"获取到的日志。","type":"array","items":{"title":"每一条日志是一个 map，例如 {\n            \"__index_number__\": \"-100\",\n            \"__tag__:__pack_id__\": \"895CEA449A52FE-8c8\",\n            \"__pack_meta__\": \"0|MTU1OTI4NTExMjg3NTQ2NDU1OA==|4|1\",\n            ...\n      }。","description":"获取到的日志，按上下文顺序排列。当根据指定起始日志查询不到上下文日志时，此参数为空。","type":"object","example":"{ \"__index_number__\": \"-100\",             \"__tag__:__pack_id__\": \"895CEA449A52FE-8c8\",             \"__pack_meta__\": \"0|MTU1OTI4NTExMjg3NTQ2NDU1OA==|4|1\"}"}}}}}},"eventInfo":{"enable":false,"eventNames":[]},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"total_lines\\\": 201,\\n  \\\"back_lines\\\": 100,\\n  \\\"forward_lines\\\": 100,\\n  \\\"progress\\\": \\\"Complete\\\",\\n  \\\"logs\\\": [\\n    {\\n      \\\"__index_number__\\\": \\\"-100\\\",\\n      \\\"__tag__:__pack_id__\\\": \\\"895CEA449A52FE-8c8\\\",\\n      \\\"__pack_meta__\\\": \\\"0|MTU1OTI4NTExMjg3NTQ2NDU1OA==|4|1\\\"\\n    }\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"查询上下文日志","description":"### 接口说明\n- 上下文查询的时间范围为起始日志的前后一天。\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n- 查询日志前，已配置索引。具体操作，请参见[创建索引](~~90732~~)。\n- pack\\_id和pack\\_meta字段属于内部字段，在执行查询前，您需要在日志服务控制台通过浏览器的调试功能获取字段值。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:GetLogStoreContextLogs`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/logstore/{#LogstoreName}`  |\n","responseParamsDescription":"logs中的每一项都是该日志的内容（键值对），除用户日志内容外，还包含三个字段，具体如下：\n| 参数名称 | 数据类型| 示例值  | 描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| `__index_number__ ` | String  |  -100| 该日志在本次查询结果中相对上下文的位置，负数表示上文，0表示起始日志，正数表示下文。例如：-100表示起始日志往前的第100条日志。  |\n|`__tag__:__pack_id__`| String  |  895CEA449A52FE-8c8 | 该日志所属的LogGroup的唯一身份标识，可作为请求参数中的pack_id进行查询。  |\n|`__pack_meta__`| String  | `0\\|MTU1OTI4NTExMjg3NTQ2NDU1OA==\\|4\\|1` | 该日志在所属LogGroup内的唯一上下文结构标识，可作为请求参数中的pack_meta进行查询。  |","extraInfo":"| HTTP 状态码 | 错误码| 错误信息  | 描述  |\n| :------------ | :------------ | :------------ | :------------ |\n|404|ProjectNotExist|Project ProjectName does not exist.|Project 不存在。|\n|404|LogstoreNotExist|logstore logstoreName does not exist.|Logstore 不存在。|\n|400|InvalidParameter|Invalid pack meta/id.|请求参数中的 pack_meta 或 pack_id 为非法值。|\n|400|InvalidParameter|back_lines or forward_lines must be postive.|请求参数中的 back_lines 或 forward_lines 中有非法值，其中至少有一个参数应为正数。|\n\n更多错误码，请参见[通用错误码](~~29013~~)。\n\n**SDK示例**\n\n此处以Java SDK为例，请使用Java SDK 0.6.38及以上的版本。 如果您通过Logtail采集方式采集日志，该方式将自动为日志附加上下文信息。 更多示例，请参见[SDK代码示例](https://github.com/aliyun/aliyun-log-java-producer/blob/a5a57cafd9e795ee5a781aa2b0c2742bce3ddef5/src/main/java/com/aliyun/openservices/aliyun/log/producer/internals/SendProducerBatchTask.java)。\n```\npackage sdksample;\n\nimport com.aliyun.openservices.log.Client;\nimport com.aliyun.openservices.log.common.LogContent;\nimport com.aliyun.openservices.log.common.LogItem;\nimport com.aliyun.openservices.log.common.QueriedLog;\nimport com.aliyun.openservices.log.common.TagContent;\nimport com.aliyun.openservices.log.exception.LogException;\nimport com.aliyun.openservices.log.request.PutLogsRequest;\nimport com.aliyun.openservices.log.response.GetContextLogsResponse;\nimport com.aliyun.openservices.log.response.GetLogsResponse;\n\nimport java.util.ArrayList;\nimport java.util.Date;\nimport java.util.List;\n\npublic class GetContextLogsSample {\n\n    private static int getCurrentTimestamp() {\n        return (int) (new Date().getTime() / 1000);\n    }\n\n    private static class PackInfo {\n        public String packID;\n        public String packMeta;\n\n        public PackInfo(String id, String meta) {\n            this.packID = id;\n            this.packMeta = meta;\n        }\n    }\n\n    private static PackInfo extractPackInfo(QueriedLog log) {\n        PackInfo ret = new PackInfo(\"\", \"\");\n        ArrayList<LogContent> contents = log.GetLogItem().GetLogContents();\n        for (int i = 0; i < contents.size(); ++i) {\n            LogContent content = contents.get(i);\n            if (content.GetKey().equals(\"__tag__:__pack_id__\")) {\n                ret.packID = content.GetValue();\n            } else if (content.GetKey().equals(\"__pack_meta__\")) {\n                ret.packMeta = content.GetValue();\n            }\n        }\n        return ret;\n    }\n\n    public static void main(String args[]) throws InterruptedException, LogException {\n        // 日志服务的服务接入点。此处以杭州为例，其它地域请根据实际情况填写。\n        String endpoint = \"https://cn-hangzhou.log.aliyuncs.com\"; \n       // 本示例从环境变量中获取AccessKey ID和AccessKey Secret。\n        String accessKeyId = System.getenv(\"ALIBABA_CLOUD_ACCESS_KEY_ID\")；\n        String accessKeySecret = System.getenv(\"ALIBABA_CLOUD_ACCESS_KEY_SECRET\"); \n        // 待查询的Project名称。\n        String project = \"ProjectName\"; \n       // 待查询的Logstore名称。\n        String logstore = \"logstoreName\"; \n        // 构建一个客户端实例。\n        Client client = new Client(endpoint, accessKeyId, accessKeySecret);\n\n        System.out.println(\"请确保指定的logstore已开启索引。\");\n        Thread.sleep(3000);\n\n        // 使用GetLogs并在查询语句中加上|with_pack_meta来获取起始日志的pack_id和pack_meta。\n        // 查询时间范围：最近15分钟。\n        // 起始日志：返回结果的第一条。\n        String query = \"*|with_pack_meta\";\n        GetLogsResponse response = client.GetLogs(project, logstore,\n                (int) getCurrentTimestamp() - 900, (int) getCurrentTimestamp(),\"\", query);\n        ArrayList<QueriedLog> logs = response.GetLogs();\n        if (logs.isEmpty()) {\n            System.out.println(\"未查询到任何日志。\");\n            System.exit(1);\n        }\n\n        // 提取第一条日志的pack信息。\n        PackInfo info = extractPackInfo(logs.get(0));\n        if (info.packMeta.isEmpty() || info.packID.isEmpty()) {\n            System.out.println(\"pack ID: \" + info.packID + \", pack meta: \" + info.packMeta);\n            System.out.println(\"起始日志的pack信息不完整，请确保该日志是通过logtail写入。\");\n            System.exit(1);\n        }\n\n        // 使用得到的pack信息进行上下文查询（双向查询）。\n        GetContextLogsResponse contextRes = client.getContextLogs(project, logstore,\n                info.packID, info.packMeta, 10, 10);\n        System.out.println(\"双向查询\");\n        System.out.println(\"pack ID: \" + info.packID + \", pack meta: \" + info.packMeta);\n        System.out.println(\"is complete: \" + contextRes.isCompleted());\n        System.out.println(\"total lines: \" + contextRes.getTotalLines());\n        System.out.println(\"back lines: \" + contextRes.getBackLines());\n        System.out.println(\"forward lines: \" + contextRes.getForwardLines());\n        Thread.sleep(1000);\n\n        // 使用查询结果中的第一条日志，向前查询上文（单向），至多三次。\n        List<QueriedLog> contextLogs = contextRes.getLogs();\n        for (int i = 0; i < 3 && !contextLogs.isEmpty(); i++) {\n            QueriedLog log = contextLogs.get(0);\n            info = extractPackInfo(log);\n            GetContextLogsResponse res = client.getContextLogs(project, logstore,\n                    info.packID, info.packMeta, 10, 0);\n            System.out.println(\"向前查询上文\");\n            System.out.println(\"pack ID: \" + info.packID + \", pack meta: \" + info.packMeta);\n            System.out.println(\"is complete: \" + res.isCompleted());\n            System.out.println(\"total lines: \" + res.getTotalLines());\n            System.out.println(\"back lines: \" + res.getBackLines());\n            System.out.println(\"forward lines: \" + res.getForwardLines());\n            contextLogs = res.getLogs();\n\n            Thread.sleep(1000);\n        }\n\n        // 使用查询结果中的最后一条日志，向后查询下文（单向），至多三次。\n        contextLogs = contextRes.getLogs();\n        for (int i = 0; i < 3 && !contextLogs.isEmpty(); i++) {\n            QueriedLog log = contextLogs.get(contextLogs.size() - 1);\n            info = extractPackInfo(log);\n            GetContextLogsResponse res = client.getContextLogs(project, logstore,\n                    info.packID, info.packMeta, 0, 10);\n            System.out.println(\"向后查询下文\");\n            System.out.println(\"pack ID: \" + info.packID + \", pack meta: \" + info.packMeta);\n            System.out.println(\"is complete: \" + res.isCompleted());\n            System.out.println(\"total lines: \" + res.getTotalLines());\n            System.out.println(\"back lines: \" + res.getBackLines());\n            System.out.println(\"forward lines: \" + res.getForwardLines());\n            contextLogs = res.getLogs();\n\n            Thread.sleep(1000);\n        }\n    }\n}\n```\n\n\n\n"},"GetHistograms":{"summary":"调用GetHistograms接口查询指定Logstore中满足查询语法条件的日志分布情况。","path":"/logstores/{logstore}/index?type=histogram","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"project 名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"title":"logstore 名称。","description":"Logstore名称。","type":"string","required":true,"example":"test-logstore"}},{"name":"from","in":"query","schema":{"title":"查询开始时间点。UNIX时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。\n\n时间区间遵循“左闭右开”原则，即该时间区间包括区间开始时间点，但不包括区间结束时间点。如果from和to的值相同，则为无效区间，函数直接返回错误。","description":"子时间区间的开始时间点。UNIX时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","type":"integer","format":"int64","required":true,"example":"1409529600"}},{"name":"to","in":"query","schema":{"title":"查询结束时间点。UNIX时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。\n\n时间区间遵循“左闭右开”原则，即该时间区间包括区间开始时间点，但不包括区间结束时间点。如果from和to的值相同，则为无效区间，函数直接返回错误。","description":"子时间区间的结束时间点。UNIX时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","type":"integer","format":"int64","required":true,"example":"1409569200"}},{"name":"topic","in":"query","schema":{"title":"日志主题。","description":"日志主题。","type":"string","required":false,"example":"topic"}},{"name":"query","in":"query","schema":{"title":"查询语句。仅支持查询语句，不支持分析语句。关于查询语句的详细语法，请参见查询语法。","description":"查询语句。仅支持查询语句，不支持分析语句。关于查询语句的详细语法，请参见[查询语法](~~43772~~)。","type":"string","required":false,"example":"with_pack_meta"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"type":"array","items":{"type":"object","properties":{"from":{"title":"子时间区间的开始时间点。UNIX时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。\n\n时间区间遵循“左闭右开”原则，即该时间区间包括区间开始时间点，但不包括区间结束时间点。如果from和to的值相同，则为无效区间，函数直接返回错误。","description":"子时间区间的开始时间点。UNIX时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。\n\n时间区间遵循“左闭右开”原则，即该时间区间包括区间开始时间点，但不包括区间结束时间点。如果from和to的值相同，则为无效区间，函数直接返回错误。","type":"integer","format":"int64","example":"1409529600"},"to":{"title":"子时间区间的结束时间点。UNIX时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。\n\n时间区间遵循“左闭右开”原则，即该时间区间包括区间开始时间点，但不包括区间结束时间点。如果from和to的值相同，则为无效区间，函数直接返回错误。","description":"子时间区间的结束时间点。UNIX时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。\n\n时间区间遵循“左闭右开”原则，即该时间区间包括区间开始时间点，但不包括区间结束时间点。如果from和to的值相同，则为无效区间，函数直接返回错误。","type":"integer","format":"int64","example":"1409569200"},"count":{"title":"该子时间区间内查询到的日志条数。","description":"该子时间区间内查询到的日志条数。","type":"integer","format":"int64","example":"2"},"progress":{"title":"当前查询结果在该子时间区间内的结果是否完整。\n\nComplete：查询已经完成，返回结果为完整结果。\n\nIncomplete：查询已经完成，返回结果为不完整结果，需要重复请求以获得完整结果。","description":"当前查询结果在该子时间区间内的结果是否完整。\n\nComplete：查询已经完成，返回结果为完整结果。\n\nIncomplete：查询已经完成，返回结果为不完整结果，需要重复请求以获得完整结果。","type":"string","example":"Complete"}}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"[\\n  {\\n    \\\"from\\\": 1409529600,\\n    \\\"to\\\": 1409569200,\\n    \\\"count\\\": 2,\\n    \\\"progress\\\": \\\"Complete\\\"\\n  }\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"查询日志分布情况","description":"### 接口说明\n\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 该接口的响应中子区间划分方式是一直稳定的。如果您在请求查询的时间区间不变，则响应中子区间划分结果也不会改变。\n- 当查询涉及的日志数量变化非常大时，日志服务API无法预测需要调用多少次该接口来获取完整结果。所以需要您查看每次请求返回结果中的progress成员状态值，根据成员状态值来确定是否需要重复调用该接口来获取最终完整结果。每次重复调用该接口都会重新消耗相同数量的查询CU。\n- 从日志写入日志库到查询接口（GetHistograms和GetLogs）查到该日志，延时时长因写入日志类型不同而异。日志服务按日志时间戳把日志分为如下两类：\n    - 实时数据：日志中时间点为服务器当前时间点（-180秒，900秒]。例如，日志时间为UTC 2014-09-25 12:03:00，服务器收到时为UTC 2014-09-25 12:05:00，则该日志被视作实时数据处理。实时数据从写入到在日志查询界面查询到该数据的延迟为3秒。\n    - 历史数据：日志中时间点为服务器当前时间点\\[-7x86400秒，-180秒）。例如，日志时间为UTC 2014-09-25 12:00:00，服务器收到时为UTC 2014-09-25 12:05:00，则该日志被作为历史数据处理，一般出现在补数据场景下。\n   其中，实时数据写入至可查询的最大延时为3秒，99.9%情况下1秒内即可查询完毕。\n\n> 日志服务将日志时间（字段名称为\\_\\_time\\_\\_）和服务器收到时间（字段名称为\\_\\_tag\\_\\_:\\_\\_receive\\_time\\__）做差，若其差值位于\\(-180秒，900秒]范围，则为实时数据，若其差位于\\[-7x86400秒，-180秒），则为历史数据。\n\n- 日志服务提供Java SDK的GetHistograms查询使用示例。更多信息，请参见[使用GetHistograms查询日志分布数量](~~462234~~)。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist| Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n| 400  |  InvalidTimeRange|  request time range is invalid. | 请求的时间区间无效。  |\n|  400 |  InvalidQueryString|  query string is invalid. | 请求的查询语句无效。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。\n"},"GetCursorTime":{"summary":"根据 Cursor 游标获取游标对应的服务端时间。","path":"/logstores/{logstore}/shards/{shardId}?type=cursor_time","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"title":"logstore 名称。","description":"Logstore名称。","type":"string","required":true,"example":"ali-test-logstore"}},{"name":"shardId","in":"path","schema":{"title":"shard id。","description":"Shard ID。","type":"integer","format":"int32","required":true,"example":"0"}},{"name":"cursor","in":"query","schema":{"title":"游标。","description":"希望获取时间戳的Cursor。接口[GetCursor](~~2771314~~)可以获取Cursor。\n\n> 如果Cursor取值小于Begin Cursor或者Cursor取值大于End Cursor，返回InvalidCursor；当Shard中无数据时，返回当前时间。","type":"string","required":true,"example":"MTU0NzQ3MDY4MjM3NjUxMzQ0Ng=="}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"type":"object","properties":{"cursor_time":{"title":"Cursor的服务端时间。Unix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","description":"Cursor的服务端时间。Unix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","type":"string","example":"1554260243"}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"cursor_time\\\": \\\"1554260243\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"通过Cursor查询服务器端时间","description":"### 接口说明\n\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:GetCursorOrData`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/logstore/{#LogstoreName}`  |","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n| 400  | ShardNotExist|  Shard shardID does not exist.| Shard不存在。  |\n| 400  |  LogStoreWithoutShard| the logstore has no shard.| Logstore没有Shard。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"GetLogsV2":{"summary":"查询指定Project下某个Logstore中的原始日志数据，返回结果显示某时间区间中的原始日志（返回结果压缩后传输）。","path":"/logstores/{logstore}/logs","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","riskType":"none","abilityTreeCode":"179698","abilityTreeNodes":["FEATUREslsCAO32E"]},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"project 名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"title":"logstore 名称。","description":"logstore 名称。","type":"string","required":true,"example":"test-logstore"}},{"name":"Accept-Encoding","in":"header","schema":{"title":"压缩方式","description":"压缩方式\n\n- Java、Python、Go目前支持lz4 、gzip 解压缩\n\n- php、Js、C#目前仅支持gzip解压缩","type":"string","required":true,"enumValueTitles":{"lz4":"lz4","gzip":"gzip"},"example":"lz4","default":"lz4"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求结构体。","type":"object","properties":{"from":{"title":"查询开始时间点。该时间是指写入日志数据时指定的日志时间。\n\n请求参数from和to定义的时间区间遵循左闭右开原则，即该时间区间包括区间开始时间点，但不包括区间结束时间点。如果from和to的值相同，则为无效区间，函数直接返回错误。\nUnix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","description":"查询开始时间点。该时间是指写入日志数据时指定的日志时间。\n\n请求参数from和to定义的时间区间遵循左闭右开原则，即该时间区间包括区间开始时间点，但不包括区间结束时间点。如果from和to的值相同，则为无效区间，函数直接返回错误。\nUnix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","type":"integer","format":"int32","required":true,"example":"1627268185"},"to":{"title":"查询结束时间点。该时间是指写入日志数据时指定的日志时间。\n\n请求参数from和to定义的时间区间遵循左闭右开原则，即该时间区间包括区间开始时间点，但不包括区间结束时间点。如果from和to的值相同，则为无效区间，函数直接返回错误。\nUnix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","description":"查询结束时间点。该时间是指写入日志数据时指定的日志时间。\n\n请求参数from和to定义的时间区间遵循左闭右开原则，即该时间区间包括区间开始时间点，但不包括区间结束时间点。如果from和to的值相同，则为无效区间，函数直接返回错误。\nUnix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","type":"integer","format":"int32","required":true,"example":"1627268185"},"line":{"title":"仅当query参数为查询语句时，该参数有效，表示请求返回的最大日志条数。最小值为0，最大值为100，默认值为100。","description":"仅当query参数为查询语句时，该参数有效，表示请求返回的最大日志条数。最小值为0，最大值为100，默认值为100。","type":"integer","format":"int64","required":false,"maximum":"100","minimum":"0","example":"100","default":"100"},"offset":{"title":"仅当query参数为查询语句时，该参数有效，表示查询开始行。默认值为0。","description":"仅当query参数为查询语句时，该参数有效，表示查询开始行。默认值为0。","type":"integer","format":"int64","required":false,"example":"0","default":"0"},"reverse":{"title":"用于指定返回结果是否按日志时间戳降序返回日志，精确到分钟级别。\n\ntrue：按照日志时间戳降序返回日志。\nfalse（默认值）：按照日志时间戳升序返回日志。\n注意\n当query参数为查询语句时，参数reverse有效，用于指定返回日志排序方式。\n当query参数为查询和分析语句时，参数reverse无效，由SQL分析语句中order by语法指定排序方式。如果order by为asc（默认），则为升序；如果order by为desc，则为降序。","description":"用于指定返回结果是否按日志时间戳降序返回日志，精确到分钟级别。\n\ntrue：按照日志时间戳降序返回日志。\nfalse（默认值）：按照日志时间戳升序返回日志。\n注意\n当query参数为查询语句时，参数reverse有效，用于指定返回日志排序方式。\n当query参数为查询和分析语句时，参数reverse无效，由SQL分析语句中order by语法指定排序方式。如果order by为asc（默认），则为升序；如果order by为desc，则为降序。","type":"boolean","required":false,"example":"false","default":"false"},"powerSql":{"title":"是否开启增强sql，默认关闭。","description":"是否开启增强sql，默认关闭。","type":"boolean","required":false,"example":"false","default":"false"},"session":{"description":"查询参数","type":"string","required":false,"example":"mode=scan"},"topic":{"description":"日志主题。默认值为双引号（\"\"）。","type":"string","required":false,"example":"\"\""},"query":{"title":"查询语句或者分析语句。更多信息，请参见查询概述和分析概述。\n\n在query参数的分析语句中加上set session parallel_sql=true;，表示使用SQL独享版。例如* | set session parallel_sql=true; select count(*) as pv 。\n\n说明 当query参数中有分析语句（SQL语句）时，该接口的line参数和offset参数无效，建议设置为0，需通过SQL语句的LIMIT语法实现翻页。更多信息，请参见分页显示查询分析结果。","description":"查询语句或者分析语句。更多信息，请参见[查询概述](~~43772~~)和[分析概述](~~53608~~)。\n\n在query参数的分析语句中加上set session parallel_sql=true;，表示使用SQL独享版。例如* | set session parallel_sql=true; select count(*) as pv 。\n\n说明当query参数中有分析语句（SQL语句）时，该接口的line参数和offset参数无效，建议设置为0，需通过SQL语句的LIMIT语法实现翻页。更多信息，请参见分页显示查询分析结果。","type":"string","required":false,"example":"status: 401 | SELECT remote_addr,COUNT(*) as pv GROUP by remote_addr ORDER by pv desc limit 5"},"forward":{"description":"scan或短语查询表示是否向前或向后翻页","type":"boolean","required":false,"example":"false","default":"false"},"highlight":{"description":"是否高亮","type":"boolean","required":false,"example":"false","default":"false"}},"required":false}}],"responses":{"200":{"headers":{"date":{"schema":{"title":"返回响应的时间。","type":"string"}},"server":{"schema":{"title":"服务器名称。","type":"string"}},"content-length":{"schema":{"title":"响应内容长度。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}},"x-log-bodyrawsize":{"schema":{"title":"返回响应内容的大小。","type":"string"}},"connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"content-type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"x-log-compresstype":{"schema":{"title":"返回响应内容的压缩格式。","type":"string"}}},"schema":{"description":"返回数据","type":"object","properties":{"meta":{"description":"返回数据meta信息","type":"object","properties":{"progress":{"description":"查询的结果是否完整。\n\n- Complete：查询已经完成，返回结果为完整结果。\n- Incomplete：查询已经完成，返回结果为不完整结果，需要重复请求以获得完整结果。","type":"string","example":"Complete"},"aggQuery":{"description":"查询语句中 | 之后的SQL部分","type":"string","example":"select *"},"whereQuery":{"description":"查询语句中 | 之前的部分","type":"string","example":"*"},"hasSQL":{"description":"是否sql查询","type":"boolean","example":"false"},"processedRows":{"description":"本次查询处理的行数。","type":"integer","format":"int64","example":"10000"},"elapsedMillisecond":{"description":"本次查询消耗的毫秒时间。","type":"integer","format":"int64","example":"5"},"cpuSec":{"description":"独享SQL的核时","type":"number","format":"double","example":"0.002"},"cpuCores":{"description":"使用cpu核数","type":"integer","format":"int32","example":"3"},"keys":{"description":"查询结果中所有的key","type":"array","items":{"description":"key","type":"string","example":"key"}},"terms":{"description":"查询语句中所有的词","type":"array","items":{"description":"词","type":"object","example":"{term=*, key=}"}},"limited":{"description":"限制条数，sql不带limit会返回","type":"integer","format":"int32","example":"100"},"mode":{"description":"查询模式枚举\n0: 普通查询（包括sql）\n1: 短语查询\n2: SCAN扫描\n3: SCAN SQL","type":"integer","format":"int32","example":"0"},"phraseQueryInfo":{"description":"短语查询","type":"object","properties":{"scanAll":{"description":"是否已经扫描了全部日志","type":"boolean","example":"true"},"beginOffset":{"description":"本次扫描结果对应的索引过滤后的起始offset","type":"integer","format":"int64","example":"0"},"endOffset":{"description":"本次扫描结果对应的索引过滤后的结束offset","type":"integer","format":"int64","example":"0"},"endTime":{"description":"本次扫描结果对应的索引过滤后的最后时间","type":"integer","format":"int64","example":"1"}}},"scanBytes":{"description":"scan时返回扫描的数据量（字节）。","type":"integer","format":"int64","example":"1024"},"highlights":{"description":"高亮内容","type":"array","items":{"description":"高亮内容","type":"array","items":{"description":"高亮日志内容","$ref":"#/components/schemas/LogContent"}}},"count":{"description":"本次查询请求返回的日志行数。","type":"integer","format":"int32","example":"1"},"processedBytes":{"description":"查询处理日志量","type":"integer","format":"int64","example":"10000"},"isAccurate":{"description":"是否秒级精确","type":"boolean","example":"true"},"columnTypes":{"description":"列类型","type":"array","items":{"description":"类型","type":"string","example":"long"}},"telementryType":{"description":"可观测数据类型","type":"string","example":"None"}}},"data":{"description":"返回结果。","type":"array","items":{"description":"返回的数据。","type":"object","additionalProperties":{"type":"string","example":"{'remote_addr': '198.51.XXX.XXX', 'pv': '1', '__source__': '', '__time__': '1649902984'}","description":"返回数据。"}}}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"meta\\\": {\\n    \\\"progress\\\": \\\"Complete\\\",\\n    \\\"aggQuery\\\": \\\"select *\\\",\\n    \\\"whereQuery\\\": \\\"*\\\",\\n    \\\"hasSQL\\\": false,\\n    \\\"processedRows\\\": 10000,\\n    \\\"elapsedMillisecond\\\": 5,\\n    \\\"cpuSec\\\": 0.002,\\n    \\\"cpuCores\\\": 3,\\n    \\\"keys\\\": [\\n      \\\"key\\\"\\n    ],\\n    \\\"terms\\\": [\\n      {\\n        \\\"test\\\": \\\"test\\\",\\n        \\\"test2\\\": 1\\n      }\\n    ],\\n    \\\"limited\\\": 100,\\n    \\\"mode\\\": 0,\\n    \\\"phraseQueryInfo\\\": {\\n      \\\"scanAll\\\": true,\\n      \\\"beginOffset\\\": 0,\\n      \\\"endOffset\\\": 0,\\n      \\\"endTime\\\": 1\\n    },\\n    \\\"scanBytes\\\": 1024,\\n    \\\"highlights\\\": [\\n      [\\n        {\\n          \\\"Key\\\": \\\"key-test\\\",\\n          \\\"Value\\\": \\\"value-test\\\"\\n        }\\n      ]\\n    ],\\n    \\\"count\\\": 1,\\n    \\\"processedBytes\\\": 10000,\\n    \\\"isAccurate\\\": true,\\n    \\\"columnTypes\\\": [\\n      \\\"long\\\"\\n    ],\\n    \\\"telementryType\\\": \\\"None\\\"\\n  },\\n  \\\"data\\\": [\\n    {\\n      \\\"key\\\": \\\"{'remote_addr': '198.51.XXX.XXX', 'pv': '1', '__source__': '', '__time__': '1649902984'}\\\"\\n    }\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"查询Logstore中的日志数据","description":"- 日志服务SDK目前仅支持Go、Java、Python三种语言，OpenAPI全部已支持。\n\n- 使用过程中注意指定压缩方法，不同语言实现的压缩算法不同，详情参考入参Accept-Encoding。\n\n- 更多相关说明请参见[GetLogs](~~29029~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:GetLogStoreLogs`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}`  |"},"PullLogs":{"summary":"调用PullLogs接口获取指定游标（Cursor）位置的日志数据。此接口获取的是原始日志，如要查询或分析日志，请使用GetLogsV2接口。","path":"/logstores/{logStore}/shards/{shardId}?type=log","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":[],"produces":[],"operationType":"read","deprecated":false,"systemTags":{"operationType":"none","riskType":"none","chargeType":"free","abilityTreeCode":"238167","abilityTreeNodes":["FEATUREslsTA08U2"],"autoTest":false},"parameters":[{"name":"project","in":"path","schema":{"title":"日志项目。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logStore","in":"path","schema":{"title":"日志库。","description":"Logstore名称。","type":"string","required":true,"example":"ali-test-logstore\n"}},{"name":"shardId","in":"path","schema":{"title":"日志库的分片 id。","description":"日志库的分片 id。","type":"integer","format":"int32","required":true,"example":"1"}},{"name":"cursor","in":"query","schema":{"title":"游标，表示从什么位置开始读取数据，相当于起点。","description":"游标，表示从什么位置开始读取数据，相当于起点。","type":"string","required":true,"example":"MTQ0NzMyOTQwMTEwMjEzMDkwNA"}},{"name":"count","in":"query","schema":{"title":"要拉取的日志的 logGroup 的最大数量，最小值为1，最大值为1000。","description":"返回的Loggroup数目，最小值为1，最大值为1000。","type":"integer","format":"int32","required":true,"maximum":"1000","minimum":"1","example":"1000"}},{"name":"end_cursor","in":"query","schema":{"title":"结束游标，表示读取数据到什么地方结束，相当于终点，不包括此位点。","description":"结束游标，表示读取数据到什么地方结束，相当于终点。","type":"string","required":false,"example":"MTU1NzA1NzQwMTEwMjEzMDkwCg"}},{"name":"query","in":"query","schema":{"title":"过滤语句，spl 语法，https://help.aliyun.com/zh/sls/user-guide/spl-overview?spm=a2c4g.11174283.0.i3","description":"过滤语句，spl 语法，请参见[SPL指令](~~2536530~~)","type":"string","required":false,"example":"* | where userId='123'"}},{"name":"Accept-Encoding","in":"header","schema":{"title":"期望服务端返回的数据压缩格式，支持 lz4","description":"期望服务端返回的数据压缩格式，支持 lz4","type":"string","required":false,"example":"lz4"}}],"responses":{"200":{"headers":{"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}},"x-log-count":{"schema":{"title":"拉取到的日志组 logGroup 的数量","type":"string"}},"x-log-cursor":{"schema":{"title":"nextCursor，即下次拉取的起始 cursor","type":"string"}},"x-log-cursor-time":{"schema":{"title":"cursor 的时间戳","type":"string"}},"x-log-end-of-cursor":{"schema":{"title":"是否已经拉取到末尾","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"x-log-compresstype":{"schema":{"title":"返回体的压缩格式","type":"string"}},"x-log-bodyrawsize":{"schema":{"title":"返回体压缩前大小，单位为字节","type":"string"}}},"schema":{"title":"压缩后的 pb 数据","description":"压缩后的 pb 数据","$ref":"#/components/schemas/LogGroupList"}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"logGroupList\\\": [\\n    {\\n      \\\"Topic\\\": \\\"topic-test\\\",\\n      \\\"Source\\\": \\\"192.1.1.1\\\",\\n      \\\"LogTags\\\": [\\n        {\\n          \\\"Key\\\": \\\"key-test\\\",\\n          \\\"Value\\\": \\\"value-test\\\"\\n        }\\n      ],\\n      \\\"LogItems\\\": [\\n        {\\n          \\\"Time\\\": 1690254376,\\n          \\\"Contents\\\": [\\n            {\\n              \\\"Key\\\": \\\"key-test\\\",\\n              \\\"Value\\\": \\\"value-test\\\"\\n            }\\n          ]\\n        }\\n      ]\\n    }\\n  ]\\n}\",\"type\":\"json\"}]","title":"拉取日志","description":"><warning>目前OpenAPI SDK不支持此接口，请使用[日志服务SDK](~~29063~~)。></warning>\n\n* 获取日志时必须指定Shard。\n* 目前仅支持读取[Protocol Buffer](~~29055~~)格式数据。\n* 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。","requestParamsDescription":"PullLogs接口的特有请求头如下所示：\n\n* Accept：application/x-protobuf\n* Accept-Encoding：lz4\n\n其中，Accept-Encoding取值包括lz4、deflate或双引号（\"\"）之一。\n\n**请求示例：** \n\n~~~\nGET /logstores/sls-test-logstore/shards/0?type=logs&cursor=MTQ0NzMyOTQwMTEwMjEzMDkwNA&count=1000 HTTP/1.1\nHost:ali-test-project.cn-hangzhou.log.aliyuncs.com\nContent-Type:application/json\n~~~","responseParamsDescription":"PullLogs接口的特有响应元素如下所示：\n\n* x-log-cursor：当前读取数据下一条Cursor。\n* x-log-end-of-cursor：当前读取数据最后一条Cursor。\n* x-log-count：当前返回数量。\n\n关于Log Service API的公共响应头，请参见[公共响应头](~~29011~~)。\n\n响应元素为protobuf格式序列化后的数据（可能经过压缩）。"},"PutLogs":{"summary":"调用PutLogs接口向指定的Logstore中写入日志数据。","path":"/logstores/{logstore}/shards/lb","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":[],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none","riskType":"none","chargeType":"free","abilityTreeCode":"186129","abilityTreeNodes":["FEATUREslsL870A3"]},"parameters":[{"name":"project","in":"host","schema":{"title":"Project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"title":"Logstore名称。","description":"Logstore名称。","type":"string","required":true,"example":"ali-test-logstore"}},{"name":"x-log-compresstype","in":"header","schema":{"title":"压缩方式，目前支持 lz4。","description":"日志压缩类型，目前支持lz4、gzip两种类型。","type":"string","required":true,"example":"lz4","default":"lz4","enum":["lz4"]}},{"name":"body","in":"body","schema":{"title":"压缩后的 pb 日志数据","description":"压缩后的 pb 日志数据","required":false,"$ref":"#/components/schemas/LogGroup"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"写入日志","description":"><warning>目前OpenAPI SDK不支持此接口，请使用[日志服务SDK](~~29063~~)。></warning>\n* 服务端会对每次PutLogs写入的日志数据做格式检查，只要日志数据中有任何一条日志不符合规范，则整个请求失败且无任何日志数据成功写入。\n* 目前仅支持写入[PB格式](~~29055~~)的日志数据，日志数据以LogGroup的形式展示。\n* 日志数据写入时有两种模式：\n  * 负载均衡模式（LoadBalance）：自动根据Logstore下所有可写的Shard进行负载均衡写入。该方法写入可用性较高，适合不保证顺序的数据消费场景。\n  * Key路由Shard模式（KeyHash）：在URL参数中增加Key字段，用来判断数据写入哪个Shard中。该参数为可选参数，不设置时自动切换为负载均衡写入模式。例如，可以将某个生产者（例如instance）根据名称Hash固定到Shard上，这样就能保证写入与消费在该Shard上的数据是严格有序的（在合并、分裂过程中能够严格保证对于Key在一个时间点只会出现在一个Shard上，请参见[分区（Shard）](~~28976~~)。\n* PutLogs接口每次可以写入的原始日志大小上限为10 MB，日志组中每条日志下的Value部分建议不超过1 MB。历史版本的SDK可能存在不同限制，建议升级到最新的版本解决。\n* 在SDK参考中，日志服务提供Java和Python SDK等PutLogs的使用示例。更多信息，请参见[Java SDK快速入门](~~279525~~)和[Python SDK快速入门](~~284638~~)等。","requestParamsDescription":"**请求头**\n\n  关于Log Service API的公共请求头，请参见[公共请求头](~~29010~~)。\n\n**请求示例：** \n\n~~~\nPOST /logstores/sls-test-logstore/shards/lb\n{\n    \"Content-Length\": 118,\n    \"Content-Type\":\"application/x-protobuf\",\n    \"x-log-bodyrawsize\":1356,\n    \"Host\": \"ali-test-project.cn-hangzhou-devcommon-intranet.sls.aliyuncs.com\",\n    \"Content-MD5\":\"6554BD042149C844761C2C094A8FECCE\",\n    \"Date\":\"Thu, 12 Nov 2015 06:54:26 GMT\",\n    \"x-log-apiversion\": \"0.6.0\",\n    \"x-log-compresstype\":\"lz4\"\n    \"x-log-signaturemethod\": \"hmac-sha1\",\n    \"Authorization\":\"LOG yourAccessKeyId:yourSignature\"\n}\n<PB格式日志使用Lz4压缩后的二进制数据>\n~~~","responseParamsDescription":"**响应头**\n\n  PutLogs接口无特有响应头。关于Log Service API的公共响应头，请参见[公共响应头](~~29011~~)。\n\n**响应元素**\n\n  返回HTTP状态码200，则表示请求成功。该接口调用成功后无任何响应元素。"},"GetLogStoreMeteringMode":{"summary":"获取Logstore计量模式。","path":"/logstores/{logstore}/meteringmode","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","riskType":"none","chargeType":"free","abilityTreeCode":"195981","abilityTreeNodes":["FEATUREslsTA08U2"]},"parameters":[{"name":"project","in":"host","schema":{"title":"project名称","description":"project名称","type":"string","required":true,"example":"projectName"}},{"name":"logstore","in":"path","schema":{"title":"logstore名称","description":"logstore名称","type":"string","required":true,"example":"logstoreName"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"type":"object","properties":{"meteringMode":{"title":"计量模式。ChargeByFunction 默认计量模式，ChargeByDataIngest 流量模式。","description":"计量模式。ChargeByFunction 默认计量模式，ChargeByDataIngest 流量模式。","type":"string","example":"ChargeByFunction","enum":["ChargeByFunction","ChargeByDataIngest"]}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"meteringMode\\\": \\\"ChargeByFunction\\\"\\n}\",\"type\":\"json\"}]","title":"查询LogStore计量模式"},"ListMetricStores":{"summary":"列出日志项目下的时序库，支持按照时序库名称模糊查找。","path":"/metricstores","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":[],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"list","riskType":"none","chargeType":"free","abilityTreeCode":"225690","abilityTreeNodes":["FEATUREslsA3NLDD"]},"parameters":[{"name":"project","in":"host","schema":{"title":"日志项目名称","description":"日志项目名称","type":"string","required":true,"example":"my-project"}},{"name":"offset","in":"query","schema":{"title":"查询分页的起始位置","description":"查询分页的起始位置","type":"integer","format":"int32","required":false,"example":"0","default":"0"}},{"name":"size","in":"query","schema":{"title":"查询分页的页大小，一次请求最多返回的时序库名称数量","description":"查询分页的页大小，一次请求最多返回的时序库数量","type":"integer","format":"int32","required":false,"example":"100","default":"500"}},{"name":"mode","in":"query","schema":{"title":"要查询的时序库规格类型，例如 standard","description":"要查询的时序库规格类型，例如 standard","type":"string","required":false,"example":"standard"}},{"name":"name","in":"query","schema":{"title":"要查询的时序库名称，支持模糊查询","description":"要查询的时序库名称，支持模糊查询，此参数为空或者不传递此参数表示查询所有时序库","type":"string","required":false,"example":"metric_store"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"title":"请求返回的结构体","description":"返回结构体","type":"object","properties":{"count":{"title":"此次返回结果中包含的时序库数量","description":"此次返回结果中包含的时序库数量","type":"integer","format":"int32","example":"10"},"total":{"title":"总共包含的时序库数量","description":"总共包含的时序库数量","type":"integer","format":"int32","example":"100"},"metricstores":{"title":"时序库名称列表，列表中元素为时序库名称","description":"时序库名称列表，列表中元素为时序库名称","type":"array","items":{"title":"时序库名称","description":"时序库名称","type":"string","example":"my_metric_store"}}}}}},"staticInfo":{"returnType":"synchronous"},"eventInfo":{"enable":false,"eventNames":[]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"count\\\": 10,\\n  \\\"total\\\": 100,\\n  \\\"metricstores\\\": [\\n    \\\"my_metric_store\\\"\\n  ]\\n}\",\"type\":\"json\"}]","title":"列出时序库","description":"- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。"},"CreateMetricStore":{"summary":"创建时序库（MetricStore），可用于存储时序数据。","path":"/metricstores","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","riskType":"none","chargeType":"free","abilityTreeCode":"225682","abilityTreeNodes":["FEATUREslsA3NLDD"]},"parameters":[{"name":"project","in":"host","schema":{"title":"日志项目名称","description":"日志项目名称","type":"string","required":true,"example":"my-project"}},{"name":"body","in":"body","style":"json","schema":{"title":"请求体","description":"请求体","type":"object","properties":{"name":{"title":"时序库名称","description":"要创建的时序库名称","type":"string","required":true,"example":"my_metric_store"},"ttl":{"title":"时序库的保存时间，单位为天","description":"时序库的数据保存时间，单位为天","type":"integer","format":"int32","required":true,"example":"7"},"shardCount":{"title":"时序库的 shard 分片数量","description":"时序库的 [shard](~~28976~~) 分片数量","type":"integer","format":"int32","required":true,"example":"2"},"autoSplit":{"title":"是否开启自动分裂","description":"是否开启自动分裂","type":"boolean","required":false,"example":"true","default":"false"},"maxSplitShard":{"title":"自动分裂的最大 shard 数，仅当 autoSplit 为 true 时有效","description":"自动分裂的最大 shard 数，仅当 autoSplit 为 true 时有效","type":"integer","format":"int32","required":false,"example":"64"},"mode":{"title":"时序库的类型，例如 standard","description":"时序库的类型，目前仅支持 standard，默认为 standard","type":"string","required":false,"example":"standard","default":"standard"},"metricType":{"title":"时序库类型，例如 prometheus","description":"时序库类型，目前仅支持 prometheus，默认为 prometheus","type":"string","required":false,"example":"prometheus","default":"prometheus"},"hot_ttl":{"title":"数据在热存储层中的存储时间，单位为天。","type":"integer","format":"int32","required":false},"infrequentAccessTTL":{"title":"低频存储，单位为天。","type":"integer","format":"int32","required":false}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"errorCodes":{"400":[{"errorCode":"MetricStoreAlreadyExist","errorMessage":"The specified metricstore xxx already exists."}]},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建时序库","description":"[时序库](~~171723~~)可用于存储[时序数据](~~174965~~)。\n- 请求语法中的Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等信息。如何查询，请参见[管理Project](~~48984~~)。\n\n- 一个Project中，最多创建 200 个 LogStore 或 MetricStore。\n- 当时序数据保存时间达到您所设置的数据保存时间后，数据将被删除。\n- 同一个Project中，LogStore 与 MetricStore 不能重名。"},"DeleteMetricStore":{"summary":"删除一个已存在的时序库，该时序库所存储的时序数据、关联的采集配置、加工配置等关联资源将被一并删除。","path":"/metricstores/{name}","methods":["delete"],"schemes":["https"],"security":[{"AK":[]}],"consumes":[],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete","riskType":"none","chargeType":"free","abilityTreeCode":"225684","abilityTreeNodes":["FEATUREslsA3NLDD"]},"parameters":[{"name":"project","in":"host","schema":{"title":"日志项目名称","description":"日志项目名称","type":"string","required":true,"example":"my-project"}},{"name":"name","in":"path","schema":{"title":"时序库名称","description":"时序库名称","type":"string","required":true,"example":"my_metric_store"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"errorCodes":{"404":[{"errorCode":"MetricStoreNotExist","errorMessage":"The specified metricstore xxx does not exist."}]},"staticInfo":{"returnType":"synchronous"},"eventInfo":{"enable":false,"eventNames":[]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除时序库","description":"[时序库](~~171723~~)可用于存储[时序数据](~~174965~~)。\n- 此接口需要指定一个已存在的时序库。\n- 请求语法中的Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等信息。如何查询，请参见[管理Project](~~48984~~)。\n\n- 一个Project中，最多创建 200 个 Logstore 或 MetricStore。\n- 当时序数据保存时间达到您所设置的数据保存时间后，数据将被删除。"},"UpdateMetricStore":{"summary":"更新一个已存在的时序库的配置，时序库可用于存储时序数据。","path":"/metricstores/{name}","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","riskType":"none","chargeType":"free","abilityTreeCode":"225678","abilityTreeNodes":["FEATUREslsA3NLDD"]},"parameters":[{"name":"project","in":"host","schema":{"title":"日志项目名称","description":"日志项目名称","type":"string","required":true,"example":"my-project"}},{"name":"name","in":"path","schema":{"title":"时序库名称","description":"时序库名称","type":"string","required":true,"example":"my_metric_store"}},{"name":"body","in":"body","style":"json","schema":{"title":"请求体","description":"请求体","type":"object","properties":{"ttl":{"title":"保存时长，单位为天，可选参数。","description":"保存时长，单位为天","type":"integer","format":"int32","required":false,"example":"7"},"autoSplit":{"title":"是否开启自动分裂","description":"是否开启自动分裂","type":"boolean","required":false,"example":"true","default":"false"},"maxSplitShard":{"title":"自动分裂的最大 shard 数，仅当 autoSplit 为 true 时有效","description":"自动分裂的最大 shard 数，仅当 autoSplit 为 true 时有效","type":"integer","format":"int32","required":false,"example":"64"},"mode":{"title":"时序库的类型","description":"时序库的类型","type":"string","required":false,"example":"standard","default":"standard"},"hot_ttl":{"title":"数据在热存储层中的存储时间，单位为天。","type":"integer","format":"int32","required":false},"infrequentAccessTTL":{"title":"低频存储，单位为天。","type":"integer","format":"int32","required":false}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"errorCodes":{"404":[{"errorCode":"MetricStoreNotExist","errorMessage":"The specified metricstore xxx does not exist."}]},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新时序库","description":"[时序库](~~171723~~)可用于存储[时序数据](~~174965~~)。\n- 此接口需要指定一个已存在的时序库。\n- 请求语法中的Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等信息。如何查询，请参见[管理Project](~~48984~~)。\n\n- 一个Project中，最多创建 200 个 Logstore 或 MetricStore。\n- 当时序数据保存时间达到您所设置的数据保存时间后，数据将被删除。"},"UpdateMetricStoreMeteringMode":{"summary":"更新指定时序库的计费模式。","path":"/metricstores/{metricStore}/meteringmode","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","riskType":"none","chargeType":"free","abilityTreeCode":"213244","abilityTreeNodes":["FEATUREslsA3NLDD"]},"parameters":[{"name":"project","in":"host","schema":{"title":"日志项目名称","description":"日志项目名称","type":"string","required":true,"example":"projectName"}},{"name":"metricStore","in":"path","schema":{"title":"MetricStore名称","description":"时序库名称","type":"string","required":true,"example":"metricStoreName"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求体","type":"object","properties":{"meteringMode":{"title":"计量模式。ChargeByFunction 默认计量模式，ChargeByDataIngest 流量模式。","description":"要切换到的计费模式。ChargeByFunction 表示[按使用功能计费](~~48220~~) ，ChargeByDataIngest 表示 [按写入数据量计费](~~2365756~~)。","type":"string","required":true,"example":"ChargeByFunction","default":"ChargeByFunction","enum":["ChargeByDataIngest","ChargeByFunction"]}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"eventInfo":{"enable":false,"eventNames":[]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新时序库计费模式","description":"时序库支持两种计费模式，[按使用功能计费](~~48220~~) 与 [按写入数据量计费](~~2365756~~)。\n\n- 此接口需要指定一个已存在的时序库。\n- 请求语法中的Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等信息。如何查询，请参见[管理Project](~~48984~~)。"},"GetMetricStore":{"summary":"查询时序库。","path":"/metricstores/{name}","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":[],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","riskType":"none","chargeType":"free","abilityTreeCode":"225685","abilityTreeNodes":["FEATUREslsA3NLDD"]},"parameters":[{"name":"project","in":"host","schema":{"title":"日志项目名称","description":"日志项目名称","type":"string","required":true,"example":"my-project"}},{"name":"name","in":"path","schema":{"title":"时序库名称","description":"时序库名称","type":"string","required":true,"example":"my_metric_store"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"title":"返回结构体","description":"返回结构体","type":"object","properties":{"name":{"title":"时序库名称","description":"时序库名称","type":"string","example":"my_metric_store"},"ttl":{"title":"保存时间，单位为天","description":"保存时间，单位为天","type":"integer","format":"int32","example":"7"},"shardCount":{"title":"shard 分片数量","description":"shard 分片数量","type":"integer","format":"int32","example":"2"},"autoSplit":{"title":"是否开启自动分裂","description":"是否开启自动分裂","type":"boolean","example":"true","default":"true"},"maxSplitShard":{"title":"shard 最大自动分裂数量","description":"shard 最大自动分裂数量","type":"integer","format":"int32","example":"64"},"mode":{"title":"时序库规格类型，例如 standard","description":"时序库规格类型，例如 standard","type":"string","example":"standard"},"metricType":{"title":"时序库种类，例如 prometheus","description":"时序库种类，例如 prometheus","type":"string","example":"prometheus"},"createTime":{"title":"创建时间，unix 时间戳","description":"创建时间，unix 时间戳","type":"integer","format":"int64","example":"1698933894"},"lastModifyTime":{"title":"最后更新时间，unix 时间戳","description":"最后更新时间，unix 时间戳","type":"integer","format":"int64","example":"1712023974"},"hot_ttl":{"title":"数据在热存储层中的存储时间，单位为天。","description":"数据在热存储层中的存储时间，单位为天。","type":"integer","format":"int32"},"infrequentAccessTTL":{"title":"低频存储，单位为天。","description":"低频存储，单位为天。","type":"integer","format":"int32"}}}}},"errorCodes":{"404":[{"errorCode":"MetricStoreNotExist","errorMessage":"The specified metricstore xxx does not exist."}]},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"name\\\": \\\"my_metric_store\\\",\\n  \\\"ttl\\\": 7,\\n  \\\"shardCount\\\": 2,\\n  \\\"autoSplit\\\": true,\\n  \\\"maxSplitShard\\\": 64,\\n  \\\"mode\\\": \\\"standard\\\",\\n  \\\"metricType\\\": \\\"prometheus\\\",\\n  \\\"createTime\\\": 1698933894,\\n  \\\"lastModifyTime\\\": 1712023974,\\n  \\\"hot_ttl\\\": 0,\\n  \\\"infrequentAccessTTL\\\": 0\\n}\",\"type\":\"json\"}]","title":"查询时序库","description":"[时序库](~~171723~~)可用于存储[时序数据](~~174965~~)。\n此接口仅用于查询时序库的配置，若要查询时序库中的时序数据，可参见[查询与分析](~~174968~~)以及[GetLogsV2](~~2771318~~)。\n- 此接口需要指定一个已存在的时序库。\n- 请求语法中的Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等信息。如何查询，请参见[管理Project](~~48984~~)。\n\n- 一个Project中，最多创建 200 个 Logstore 或 MetricStore。\n- 当时序数据保存时间达到您所设置的数据保存时间后，数据将被删除。"},"GetMetricStoreMeteringMode":{"summary":"查询指定时序库的当前计费模式。","path":"/metricstores/{metricStore}/meteringmode","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","riskType":"none","chargeType":"free","abilityTreeCode":"213243","abilityTreeNodes":["FEATUREslsA3NLDD"]},"parameters":[{"name":"project","in":"host","schema":{"title":"日志项目名称","description":"日志项目名称","type":"string","required":true,"example":"projectName"}},{"name":"metricStore","in":"path","schema":{"title":"metricStore","description":"时序库名称","type":"string","required":true,"example":"metricStoreName"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"title":"请求返回的结构体","description":"请求返回的结构体","type":"object","properties":{"meteringMode":{"title":"计量模式。ChargeByFunction 默认计量模式，ChargeByDataIngest 流量模式。","description":"当前时序库计费模式。ChargeByFunction 表示[按使用功能计费](~~48220~~) ，ChargeByDataIngest 表示 [按写入数据量计费](~~2365756~~)。","type":"string","example":"ChargeByFunction","enum":["ChargeByFunction","ChargeByDataIngest"]}}}}},"staticInfo":{"returnType":"synchronous"},"eventInfo":{"enable":false,"eventNames":[]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"meteringMode\\\": \\\"ChargeByFunction\\\"\\n}\",\"type\":\"json\"}]","title":"查询时序库计费模式","description":"时序库支持两种计费模式，[按使用功能计费](~~48220~~) 与 [按写入数据量计费](~~2365756~~)。\n- 此接口需要指定一个已存在的时序库。\n- 请求语法中的Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等信息。如何查询，请参见[管理Project](~~48984~~)。\n\n- 一个Project中，最多创建 200 个 Logstore 或 MetricStore。\n- 当时序数据保存时间达到您所设置的数据保存时间后，数据将被删除。"},"CreateStoreView":{"summary":"创建一个数据集。","path":"/storeviews","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","riskType":"none","chargeType":"free","abilityTreeCode":"208488","abilityTreeNodes":["FEATUREsls27DZA4"]},"parameters":[{"name":"project","in":"host","schema":{"description":"日志项目名称。","type":"string","required":true,"example":"example-project"}},{"name":"body","in":"body","style":"json","schema":{"description":"数据集配置。","type":"object","properties":{"name":{"description":"数据集名称。\n- 只能包括小写字母、数字和下划线（_）。\n- 必须以小写字母开头。\n- 长度为3-62字符。","type":"string","required":true,"example":"my_storeview"},"storeType":{"description":"数据集类型，支持两种类型，当创建时序库数据集时 storeType 指定为 metricstore ，当创建日志库数据集时， storeType 指定为 logstore 。","type":"string","required":true,"enumValueTitles":{"metricstore":"metricstore","logstore":"logstore"},"example":"logstore"},"stores":{"description":"日志库或者时序库列表。","type":"array","items":{"description":"日志库或时序库。","required":true,"$ref":"#/components/schemas/StoreViewStore"},"required":true}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建数据集"},"DeleteStoreView":{"summary":"根据名称删除指定数据集。","path":"/storeviews/{name}","methods":["delete"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete","riskType":"high","chargeType":"free","abilityTreeCode":"208667","abilityTreeNodes":["FEATUREsls27DZA4"]},"parameters":[{"name":"project","in":"host","schema":{"description":"日志项目名称","type":"string","required":true,"example":"example-project"}},{"name":"name","in":"path","schema":{"description":"数据集名称","type":"string","required":true,"example":"my_storeview"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除数据集"},"UpdateStoreView":{"summary":"更新指定数据集配置。","path":"/storeviews/{name}","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","riskType":"high","chargeType":"free","abilityTreeCode":"208677","abilityTreeNodes":["FEATUREsls27DZA4"]},"parameters":[{"name":"project","in":"host","schema":{"description":"日志项目名称","type":"string","required":true,"example":"example-project"}},{"name":"name","in":"path","schema":{"description":"数据集名称。","type":"string","required":true,"example":"my_storeview"}},{"name":"body","in":"body","style":"json","schema":{"description":"数据集配置。","type":"object","properties":{"storeType":{"description":"数据集类型","type":"string","required":true,"enumValueTitles":{"metricstore":"metricstore","logstore":"logstore"},"example":"logstore"},"stores":{"description":"日志库或者时序库列表。","type":"array","items":{"description":"日志库或者时序库。","required":true,"$ref":"#/components/schemas/StoreViewStore"},"required":true}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新数据集配置"},"GetStoreView":{"summary":"根据名称查询指定数据集配置。","path":"/storeviews/{name}","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","riskType":"none","chargeType":"free","abilityTreeCode":"208676","abilityTreeNodes":["FEATUREsls27DZA4"]},"parameters":[{"name":"project","in":"host","schema":{"description":"日志项目名称。","type":"string","required":true,"example":"example-project"}},{"name":"name","in":"path","schema":{"description":"数据集名称。","type":"string","required":true,"example":"my_storeview"}}],"responses":{"200":{"schema":{"title":"Schema of Response","description":"数据集配置。","type":"object","properties":{"storeType":{"title":"Id of the request","description":"数据集类型。","type":"string","enumValueTitles":{"metricstore":"metricstore","logstore":"logstore"},"example":"logstore"},"stores":{"description":"日志库或时序库列表。","type":"array","items":{"description":"日志库或者时序库。","$ref":"#/components/schemas/StoreViewStore"}}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"storeType\\\": \\\"logstore\\\",\\n  \\\"stores\\\": [\\n    {\\n      \\\"project\\\": \\\"\\\",\\n      \\\"storeName\\\": \\\"\\\",\\n      \\\"query\\\": \\\"\\\"\\n    }\\n  ]\\n}\",\"type\":\"json\"}]","title":"查询指定数据集"},"GetStoreViewIndex":{"summary":"根据指定名称查询数据集索引，只支持 logstore 类型的数据集。","path":"/storeviews/{name}/index","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","riskType":"none","chargeType":"free","abilityTreeCode":"212612","abilityTreeNodes":["FEATUREsls27DZA4"]},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"日志项目名称。","type":"string","required":true,"example":"example-project"}},{"name":"name","in":"path","schema":{"description":"数据集名称。","type":"string","required":true,"example":"my_storeview"}}],"responses":{"200":{"schema":{"title":"Schema of Response","description":"数据集中所有 LogStore 索引配置。","type":"object","properties":{"indexes":{"description":"索引配置列表。","type":"array","items":{"description":"索引配置。","type":"object","properties":{"project":{"description":"LogStore 所属日志项目名称。","type":"string","example":"example-project"},"logstore":{"description":"LogStore 名称。","type":"string","example":"my-logstore"},"index":{"description":"LogStore 索引配置。","$ref":"#/components/schemas/index"}}}}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"indexes\\\": [\\n    {\\n      \\\"project\\\": \\\"example-project\\\",\\n      \\\"logstore\\\": \\\"my-logstore\\\",\\n      \\\"index\\\": {\\n        \\\"max_text_len\\\": 2048,\\n        \\\"log_reduce_white_list\\\": [\\n          \\\"name\\\"\\n        ],\\n        \\\"log_reduce_black_list\\\": [\\n          \\\"time\\\"\\n        ],\\n        \\\"line\\\": {\\n          \\\"chn\\\": true,\\n          \\\"caseSensitive\\\": true,\\n          \\\"token\\\": [\\n            \\\",\\\"\\n          ],\\n          \\\"include_keys\\\": [\\n            \\\"\\\"\\n          ],\\n          \\\"exclude_keys\\\": [\\n            \\\"\\\"\\n          ]\\n        },\\n        \\\"keys\\\": {\\n          \\\"key\\\": {\\n            \\\"chn\\\": true,\\n            \\\"caseSensitive\\\": true,\\n            \\\"token\\\": [\\n              \\\"|\\\"\\n            ],\\n            \\\"alias\\\": \\\"myAlias\\\",\\n            \\\"type\\\": \\\"text\\\",\\n            \\\"doc_value\\\": true,\\n            \\\"index_all\\\": true,\\n            \\\"max_depth\\\": 0,\\n            \\\"json_keys\\\": {\\n              \\\"key\\\": {\\n                \\\"chn\\\": true,\\n                \\\"caseSensitive\\\": true,\\n                \\\"token\\\": [\\n                  \\\"|\\\"\\n                ],\\n                \\\"alias\\\": \\\"myAlias\\\",\\n                \\\"type\\\": \\\"text\\\",\\n                \\\"doc_value\\\": true\\n              }\\n            }\\n          }\\n        },\\n        \\\"log_reduce\\\": true\\n      }\\n    }\\n  ]\\n}\",\"type\":\"json\"}]","title":"查询指定数据集索引配置"},"ListStoreViews":{"summary":"查询日志项目中的数据集列表。","path":"/storeviews","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"list","riskType":"none","chargeType":"free","abilityTreeCode":"208670","abilityTreeNodes":["FEATUREsls27DZA4"]},"parameters":[{"name":"project","in":"host","schema":{"description":"日志项目名称。","type":"string","required":true,"example":"example-project"}},{"name":"size","in":"query","schema":{"description":"期望返回的数据集个数， 默认值为 100。","type":"integer","format":"int32","required":false,"example":"100"}},{"name":"offset","in":"query","schema":{"description":"返回结果在全部数据集中的偏移位置， 默认为 0 。","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"name","in":"query","schema":{"description":"用于模糊搜索的数据集名称。","type":"string","required":false,"example":"my_storeview"}},{"name":"storeType","in":"query","schema":{"description":"数据集类型，默认不根据类型过滤。","type":"string","required":false,"enumValueTitles":{"metricstore":"metricstore","logstore":"logstore"},"example":"logstore"}}],"responses":{"200":{"schema":{"title":"Schema of Response","description":"数据集列表。","type":"object","properties":{"count":{"description":"返回的数据集个数。","type":"integer","format":"int32","example":"100"},"total":{"description":"日志项目中的数据集总数。","type":"integer","format":"int32","example":"100"},"storeviews":{"description":"数据集名称列表。","type":"array","items":{"description":"数据集名称。","type":"string","example":"my_storeview"}}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"count\\\": 100,\\n  \\\"total\\\": 100,\\n  \\\"storeviews\\\": [\\n    \\\"my_storeview\\\"\\n  ]\\n}\",\"type\":\"json\"}]","title":"查询数据集列表"},"CreateMachineGroup":{"summary":"创建一个机器组。","path":"/machinegroups","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"body","in":"body","style":"json","schema":{"title":"请求体。","description":"请求体参数。","type":"object","properties":{"groupName":{"title":"机器组名称。","description":"机器组名称。其命名规则如下：\n\n- 同一个Project下，机器组名称不可重复。\n- 只能包括小写字母、数字、短划线（-）和下划线（_）。\n- 必须以小写字母或者数字开头和结尾。\n- 长度为3-128字符。","type":"string","required":true,"example":"test-machine-group"},"machineIdentifyType":{"title":"机器组标识种类，支持 ip 、userdefined 两种。","description":"机器标识类型。\n\n- ip：IP地址机器组。\n- userdefined：用户自定义标识机器组。","type":"string","required":true,"example":"ip","default":"ip"},"groupType":{"title":"机器组类型，可选值，默认为空。","description":"机器组类型，可选值为空。","type":"string","required":false,"example":"\"\""},"groupAttribute":{"title":"机器组属性。","description":"机器组的属性。","type":"object","properties":{"groupTopic":{"title":"机器组的日志主题。","description":"机器组的日志主题。","type":"string","required":false,"example":"testtopic"},"externalName":{"title":"机器组所依赖的外部管理系统标识。","description":"机器组所依赖的外部管理系统标识。","type":"string","required":false,"example":"testgroup"}},"required":false},"machineList":{"title":"机器列表。","description":"机器组的标识信息。\n\n- 如果machineIdentifyType配置为ip，则此处填写服务器的IP地址。\n- 如果machineIdentifyType配置为userdefined，则此处填写自定义的标识。","type":"array","items":{"title":"机器标识，如 ip 地址、用户自定义标识。","description":"机器标识，根据机器组类型填写IP地址或者用户自定义标识。","type":"string","required":false,"example":"192.168.XX.XX"},"required":true}},"required":true,"example":"ali-test-project"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建机器组","description":"### 接口说明\nHost由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 400  | MachineGroupAlreadyExist| groupName already exists. | 机器组已存在。  |\n| 400  | InvalidParameter| invalid group resource json. | 无效机器组参数。  |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"DeleteMachineGroup":{"summary":"删除机器组。如果机器组已应用Logtail采集配置，则删除机器组后，会解绑对应的Logtail配置。","path":"/machinegroups/{machineGroup}","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"machineGroup","in":"path","schema":{"title":"机器组名称。","description":"机器组名称。","type":"string","required":true,"example":"test-machine-group-4"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除机器组","description":"### 接口说明\n请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n|  404 |  MachineGroupNotExist|  MachineGroup groupName does not exist.| 机器组不存在。  |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。\n"},"RemoveConfigFromMachineGroup":{"summary":"从机器组中移除Logtail配置。","path":"/machinegroups/{machineGroup}/configs/{configName}","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"machineGroup","in":"path","schema":{"title":"机器组名称。","description":"机器组名称。","type":"string","required":true,"example":"test-group"}},{"name":"configName","in":"path","schema":{"title":"logtail 配置名称。","description":"Logtail配置名称。","type":"string","required":true,"example":"test-logtail"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除机器组Logtail配置","description":"Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | MachineGroupNotExist| MachineGroup groupName does not exist.| 机器组不存在。  |\n| 404  | ConfigNotExist| Config configName does not exist. | Logtail配置不存在。 |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"ApplyConfigToMachineGroup":{"summary":"将Logtail配置应用到机器组。","path":"/machinegroups/{machineGroup}/configs/{configName}","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","riskType":"none","chargeType":"free"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"machineGroup","in":"path","schema":{"title":"机器组名称。","description":"机器组名称。","type":"string","required":true,"example":"sample-group"}},{"name":"configName","in":"path","schema":{"title":"logtail 配置名称。","description":"Logtail配置名称。","type":"string","required":true,"example":"logtail-config-sample"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"应用Logtail配置到机器组","description":"Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | MachineGroupNotExist|  MachineGroupdoes not exist. | 机器组不存在。  |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | ConfigNotExist | Configdoes not exist. | Logtail配置不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"UpdateMachineGroup":{"summary":"修改机器组配置信息。","path":"/machinegroups/{groupName}","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"groupName","in":"path","schema":{"title":"机器组名称。","description":"机器组名称。","type":"string","required":true,"example":"test-group"}},{"name":"body","in":"body","style":"json","schema":{"title":"请求体。","description":"请求体结构。","type":"object","properties":{"groupName":{"title":"机器组名称。","description":"机器组名称。","type":"string","required":true,"example":"test-machine-group"},"machineIdentifyType":{"title":"机器组标识种类，支持 ip 、userdefined 两种。","description":"机器组标识类型。\n\n- ip：IP地址机器组。\n- userdefined：用户自定义标识机器组。","type":"string","required":true,"example":"userdefined","default":"ip"},"groupType":{"title":"机器组类型，可选值，默认为空。","description":"机器组类型，固定为空字符串。","type":"string","required":false,"example":"\"\""},"groupAttribute":{"title":"机器组属性。","description":"机器组的属性，默认为空。","type":"object","properties":{"groupTopic":{"title":"机器组的日志主题。","description":"机器组的日志主题。默认为空。","type":"string","required":false,"example":"testtopic2"},"externalName":{"title":"机器组所依赖的外部管理系统标识。","description":"机器组所依赖的外部管理系统标识。默认为空。","type":"string","required":false,"example":"testgroup2"}},"required":false},"machineList":{"title":"机器列表。","description":"机器组的标识信息。\n\n- 如果machineIdentifyType配置为ip，则此处填写服务器的IP地址。\n- 如果machineIdentifyType配置为userdefined，则此处填写自定义的标识。","type":"array","items":{"title":"机器标识，如 ip 地址、用户自定义标识。","description":"机器标识，如IP地址、用户自定义标识。","type":"string","required":false,"example":"192.168.xx.xx"},"required":true,"example":"[uu_id_1，uu_id_2]"}},"required":true,"example":"ali-test-project"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"修改机器组","description":"Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project名称。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 400  | InvalidParameter| invalid group resource json  | Project不存在。  |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | MachineGroupNotExist  | MachineGroup groupName does not exist.  | 无效机器组参数。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。\n"},"UpdateMachineGroupMachine":{"summary":"修改机器组中的机器列表，支持从机器列表中增加或者删除机器。","path":"/machinegroups/{machineGroup}/machines","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"machineGroup","in":"path","schema":{"title":"机器组名称。","description":"机器组名称。","type":"string","required":true,"example":"test-group"}},{"name":"body","in":"body","style":"json","schema":{"title":"请求结构体。要添加或删除的机器列表。","description":"请求结构体。要添加或删除的机器列表。","type":"array","items":{"title":"机器标识。ip 地址或者用户自定义标识。","description":"机器标识。ip地址或者用户自定义标识。","type":"string","required":false,"example":"192.168.xx.x"},"required":true}},{"name":"action","in":"query","schema":{"title":"add 表示添加机器到机器组中， delete 表示从机器组中删除机器。","description":"add表示添加机器到机器组中， delete表示从机器组中删除机器。","type":"string","required":false,"example":"add","default":"add","enum":["add","delete"]}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"修改机器组机器列表","description":"请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。"},"ListMachineGroup":{"summary":"列出目标Project下的机器组。","path":"/machinegroups","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"offset","in":"query","schema":{"title":"分页请求的起始位置。默认为0。","description":"查询开始行。默认值为0。","type":"integer","format":"int32","required":false,"example":"1"}},{"name":"size","in":"query","schema":{"title":"分页查询时，设置的每页行数。默认值为2000。","description":"分页查询时，设置的每页行数。最大值为500。","type":"integer","format":"int32","required":false,"example":"10","default":"2000"}},{"name":"groupName","in":"query","schema":{"title":"可将 groupName 作为 pattern 匹配名称，只会返回匹配的机器组。例如 test 可以匹配机器组 test-group。","description":"机器组名称。用于过滤机器组，支持部分匹配。","type":"string","required":false,"example":"test-machine-group"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"title":"请求返回体。","description":"符合查询条件的数据。","type":"object","properties":{"count":{"title":"当前页返回的机器组数量。","description":"当前页返回的机器组数。","type":"integer","format":"int32","example":"1"},"total":{"title":"机器组总数量。","description":"符合查询条件的机器组总数。","type":"integer","format":"int32","example":"1"},"machinegroups":{"title":"机器组名称列表。","description":"符合查询条件的机器组列表。","type":"array","items":{"title":"机器组名称。","description":"机器组名称。","type":"string","example":"test-group"},"example":"[ \"test-machine-group-1\", \"test-machine-group-2\" ]"}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"count\\\": 1,\\n  \\\"total\\\": 1,\\n  \\\"machinegroups\\\": [\\n    \\\"test-group\\\"\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"查询Project下的机器组","description":"### 接口说明\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:ListMachineGroup`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/machinegroup/*`  |","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n|  500 |  InternalServerError |  internal server error. | 内部服务调用错误。 |\n\n更多信息，请参见[错误码对照表](~~29013~~)。\n"},"ListMachines":{"summary":"列出目标机器组中与日志服务连接正常的机器列表。","path":"/machinegroups/{machineGroup}/machines","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"machineGroup","in":"path","schema":{"title":"机器组名称。","description":"机器组名称。","type":"string","required":true,"example":"test-group"}},{"name":"offset","in":"query","schema":{"title":"查询开始行。默认值为0。","description":"查询开始行。默认值为0。","type":"integer","format":"int32","required":false,"example":"0","default":"0"}},{"name":"size","in":"query","schema":{"title":"分页查询时，设置的每页行数。默认值为2000。","description":"分页查询时，设置的每页行数。默认值为100，最大值为500。","type":"integer","format":"int32","required":false,"example":"10","default":"2000"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"返回的机器信息列表。","type":"object","properties":{"count":{"title":"当前页返回的机器数目。","description":"当前页返回的机器数目。","type":"integer","format":"int32","example":"3"},"total":{"title":"机器总数。","description":"机器总数。","type":"integer","format":"int32","example":"8"},"machines":{"title":"返回的机器信息列表。","description":"返回的机器信息列表。","type":"array","items":{"title":"机器信息。","description":"机器信息。","example":"[{\"ip\": \"10.***.***.***\", \"machine-uniqueid\": \"\", \"userdefined-id\": \"\", \"lastHeartbeatTime\":                                       1447182247},{\"ip\": \"10.***.***.***\", \"machine-uniqueid\": \"\",\"userdefined-id\": \"\",\"lastHeartbeatTime\":                                       1447182246}]","$ref":"#/components/schemas/machine"}}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"count\\\": 3,\\n  \\\"total\\\": 8,\\n  \\\"machines\\\": [\\n    {\\n      \\\"ip\\\": \\\"192.168.x.x\\\",\\n      \\\"machine-uniqueid\\\": \\\"3B70F4F1-80F7-46C4-A6C1-100D66C***47\\\",\\n      \\\"lastHeartbeatTime\\\": 1657509674,\\n      \\\"userdefined-id\\\": \\\"test\\\",\\n      \\\"host-id\\\": \\\"test\\\"\\n    }\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"查询机器组中的机器列表","description":"Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | MachineGroupNotExist| MachineGroup groupName does not exist.  | 机器组不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。\n"},"GetMachineGroup":{"summary":"查看目标机器组的具体信息。","path":"/machinegroups/{machineGroup}","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"machineGroup","in":"path","schema":{"title":"机器组名称。","description":"机器组名称。","type":"string","required":true,"example":"test-machine-group"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"title":"请求返回体。","description":"机器组数据结构。","$ref":"#/components/schemas/machineGroup"}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"groupName\\\": \\\"test-group\\\",\\n  \\\"groupType\\\": \\\"\\\",\\n  \\\"machineIdentifyType\\\": \\\"ip\\\",\\n  \\\"groupAttribute\\\": {\\n    \\\"groupTopic\\\": \\\"test-topic\\\",\\n    \\\"externalName\\\": \\\"test-group\\\"\\n  },\\n  \\\"machineList\\\": [\\n    \\\"192.168.xx.x\\\"\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"获取机器组配置","description":"### 接口说明\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。\n- 已获取机器组名称。更多信息，请参见[ListMachineGroup](~~29035~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:GetMachineGroup`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/machinegroup/{#MachineGroupName}`  |","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | MachineGroupNotExist| MachineGroup groupName does not exist. | 机器组不存在。  |\n| 500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"GetAppliedConfigs":{"summary":"获取目标机器组上已经被应用的Logtail配置列表。","path":"/machinegroups/{machineGroup}/configs","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"machineGroup","in":"path","schema":{"title":"机器组名称。","description":"机器组名称。","type":"string","required":true,"example":"test-machine-group"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"title":"请求返回体。","description":"请求返回体。","type":"object","properties":{"count":{"title":"Logtail配置数量。","description":"Logtail配置数量。","type":"integer","format":"int32","example":"2"},"configs":{"title":"Logtail配置名称列表。","description":"Logtail配置名称列表。","type":"array","items":{"title":"Logtail 配置名称。","description":"Logtail配置信息。","type":"string","example":"[ \"two\", \"three\", \"test_logstore\" ]"}}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"count\\\": 2,\\n  \\\"configs\\\": [\\n    \\\"[ \\\\\\\"two\\\\\\\", \\\\\\\"three\\\\\\\", \\\\\\\"test_logstore\\\\\\\" ]\\\"\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"获取已应用的Logtail配置列表","description":"Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | MachineGroupNotExist| MachineGroup groupName does not exist. | 机器组不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"GetAppliedMachineGroups":{"summary":"调用GetAppliedMachineGroups接口获取已绑定指定Logtail配置的机器组列表。","path":"/configs/{configName}/machinegroups","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"configName","in":"path","schema":{"title":"logtail 配置名称。","description":"Logtail配置名称。","type":"string","required":true,"example":"logtail-config-sample"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"title":"请求返回体。","description":"请求返回体。","type":"object","properties":{"count":{"title":"返回的机器组数量。","description":"返回的机器组数量。","type":"integer","format":"int32","example":"2"},"machinegroups":{"title":"返回的机器组名称列表。","description":"返回的机器组名称。","type":"array","items":{"title":"机器组名称。","description":"机器组名称。","type":"string","example":"sample-group1"},"example":"[ \"sample-group1\",\"sample-group2\" ]"}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"count\\\": 2,\\n  \\\"machinegroups\\\": [\\n    \\\"sample-group1\\\"\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"通过Logtail配置获取已绑定的机器组","description":"请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project名称。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | ConfigNotExist  | Config confiName does not exist.  | Logtail配置不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"CreateConfig":{"summary":"创建Logtail采集配置。","path":"/configs","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","riskType":"none","chargeType":"free","abilityTreeCode":"8979","abilityTreeNodes":["FEATUREslsYP6SBU"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"body","in":"body","schema":{"description":"请求消息体。","required":false,"$ref":"#/components/schemas/LogtailConfig"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"eventInfo":{"enable":false,"eventNames":[]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建Logtail采集配置","description":"### 接口说明\n\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)。\n- 每个Project最多可创建100个Logtail配置。\n\n- 已规划好Logtail采集配置。更多信息，请参见[Logtail配置](~~29058~~)。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | ConfigAlreadyExist  | config configname already exists.  | Logtail配置已存在。  |\n|  400 |  InvalidParameter |  Invalid config resource json.| 无效的Logtail配置参数。 |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"CreateLogtailPipelineConfig":{"summary":"创建Logtail流水线配置。","path":"/pipelineconfigs","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","riskType":"none","chargeType":"free"},"parameters":[{"name":"project","in":"host","schema":{"title":"Project名称","description":"Project名称。","type":"string","required":true,"example":"test-project"}},{"name":"body","in":"body","style":"json","schema":{"title":"Logtail流水线配置内容","description":"Logtail流水线配置内容。","type":"object","properties":{"configName":{"title":"配置名称","description":"配置名称。\n\n> 配置名称在所属Project内唯一，且创建成功后无法修改。命名规则如下：\n> - 只能包括小写字母、数字、-和_。\n> - 必须以小写字母或数字开头和结尾。\n> - 长度必须在2~128字符之间。","type":"string","required":true,"example":"test-config","pattern":"^[0-9a-zA-Z][0-9a-zA-Z-_]{0,126}[0-9a-zA-Z]$"},"logSample":{"title":"日志样例","description":"日志样例。支持多条日志。","type":"string","required":false,"example":"2022-06-14 11:13:29.796 | DEBUG    | __main__:<module>:1 - hello world"},"global":{"title":"全局配置","description":"全局配置。","type":"object","required":false},"inputs":{"title":"输入插件列表","description":"输入插件列表。\n><notice>目前，只允许配置1个输入插件。></notice>","type":"array","items":{"title":"输入插件","description":"输入插件。\n\n> 文件输入插件参数请参见[文件插件](~~65064~~)，其余输入插件参数请参见[处理插件](~~64957~~)。","type":"object","required":false,"example":"{\n    \"Type\": \"input_file\",\n    \"FilePaths\": [\"/var/log/*.log\"]\n}"},"required":true,"minItems":1},"processors":{"title":"输入插件列表","description":"处理插件列表。\n\n> 可分为原生处理插件和扩展处理插件，详情请参见[处理插件](~~64957~~)。\n\n><notice>\n\n> - 原生插件仅可用于采集文本日志。\n> - 不支持同时添加原生插件和扩展插件。\n> - 使用原生插件时，须符合如下要求：\n>   - 第一个处理插件必须为正则解析插件、分隔符模式解析插件、JSON解析插件、NGINX模式解析插件、Apache模式解析插件或IIS模式解析插件。\n>   - 第一个处理插件之后仅允许存在1个时间解析处理插件，1个过滤插件和多个脱敏插件。></notice>","type":"array","items":{"title":"输入插件","description":"处理插件。\n\n> 原生处理插件和扩展处理插件，详情请参见[处理插件](~~64957~~)。","type":"object","required":false,"example":"{\n    \"Type\": \"processor_parse_json_native\",\n    \"SourceKey\": \"content\"\n}"},"required":false,"minItems":1},"aggregators":{"title":"聚合插件列表","description":"聚合插件列表。\n><notice>仅当使用了扩展处理插件时有效，且最多允许使用1个聚合插件。></notice>","type":"array","items":{"title":"聚合插件","description":"聚合插件。","type":"object","required":false},"required":false,"minItems":1},"flushers":{"title":"输出插件列表","description":"输出插件列表。\n><notice>目前，只允许存在1个flusher_sls插件。></notice>","type":"array","items":{"title":"输出插件","description":"输出插件。","type":"object","required":false,"example":"{\n    \"Type\": \"flusher_sls\",\n    \"Logstore\": \"test\"\n}"},"required":true,"minItems":1}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建Logtail流水线配置","requestParamsDescription":"## 全局配置\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **默认值**  | **示例**                           | **说明**                                                                                                                                                                                                                                                                                                                                                                                                          |\n| --- | --- | --- | --- |----------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  TopicType  |  string  |  否  |  空  | filepath                         | Topic类型。可选值包括：<ul><li>filepath：从日志文件路径中提取信息作为Topic。仅当输入插件为input\\_file时有效。</li><li>machine\\_group\\_topic：将应用该配置的机器组Topic作为Topic。</li><li>custom：自定义Topic      更多信息，请参见[日志主题](~~60069~~)。</li></ul>                                                                                                                                                                                                               |\n|  TopicFormat  |  string  |  否，当TopicType取值为filepath或custom时必填  |  /  | /var/log/(.\\*).log               | Topic格式。                                                                                                                                                                                                                                                                                                                                                                                                        |\n|  EnableTimestampNanosecond  |  bool  |  否  |  false  | false                            | 是否启用时间纳秒精度。                                                                                                                                                                                                                                                                                                                                                                                                     |\n|  PipelineMetaTagKey  |  object  |  否  |  空  | {\"HOST_NAME\":\"\\_\\_hostname\\_\\_\"} | <notice>仅 LoongCollector 3.0.10 之后支持。</notice>   控制LoongCollector自身信息相关Tag。key为Tag参数名，value为Tag在日志中的字段名。当 value 为__default__时，取默认值。当 value 为空字符串时，表示删除 Tag。 可配置 Tag 如下：<ul><li>HOST_NAME：主机名。默认添加，默认值为\"\\_\\_hostname\\_\\_\"。</li><li>AGENT_TAG：用户自定义标识。默认添加，默认值为\"\\_\\_user_defined_id\\_\\_\"。</li><li>HOST_ID：主机 ID。默认不添加，默认值为\"\\_\\_host_id\\_\\_\"。</li><li>CLOUD_PROVIDER：默认不添加，默认值为\"\\_\\_cloud_provider\\_\\_\"。</li></ul> |\n\n\n## 输入插件\n\n### 文件输入插件\n\n|  **参数**  |  **类型**  |  **是否必填**  | **默认值** | **示例**                                       | **说明|\n| --- | --- | --- |---------|----------------------------------------------||\n|  Type  |  string  |  是  | /       | input\\_file                                  | 插件类型。固定为input\\_file。|\n|  FilePaths  |  \\[string\\]  |  是  | /       | \\[\"/var/log/\\*.log\"\\]                        | 待采集的日志文件路径列表（目前仅限1个路径）。路径中支持使用\\*和\\*\\*通配符，其中\\*\\*通配符仅能出现一次且仅限用于文件名前。|\n|  MaxDirSearchDepth  |  uint  |  否  | 0       | 0                                            | 文件路径中\\*\\*通配符匹配的最大目录深度。仅当日志路径中存在\\*\\*通配符时有效，取值范围为0～1000。|\n|  ExcludeFilePaths  |  \\[string\\]  |  否  | 空       | \\[\"/home/admin/\\*.log\"\\]                     | 文件路径黑名单。路径必须为绝对路径，支持使用\\*通配符|\n|  ExcludeFiles  |  \\[string\\]  |  否  | 空       | \\[\"app\\*.log\", \"password\"\\]                  | 文件名黑名单。支持使用\\*通配符|\n|  ExcludeDirs  |  \\[string\\]  |  否  | 空       | \\[\"/home/admin/dir1\", \"/home/admin/dir2\\*\"\\] | 目录黑名单。路径必须为绝对路径，支持使用\\*通配符|\n|  FileEncoding  |  string  |  否  | utf8    | utf8                                         | 文件编码格式。可选值包括utf8和gbk。|\n|  TailSizeKB  |  uint  |  否  | 1024    | 1024                                         | 配置首次生效时，匹配文件的起始采集位置距离文件结尾的大小。如果文件大小小于该值，则从头开始采集，取值范围为0～10485760KB。|\n|  Multiline  |  object  |  否  | 空       | /                                            | 多行聚合选项。|\n|  Multiline.Mode  |  string  |  否  | custom  | custom                                       | 多行聚合模式。可选值包括custom和JSON。|\n|  Multiline.StartPattern  |  string  |  当Multiline.Mode取值为custom时必填  | 空       | \\d+-\\d+-\\d+.\\*                               | 行首正则表达式。|\n|  EnableContainerDiscovery  |  bool  |  否  | false   | true                                         | 是否启用容器发现功能。仅当Logtail以Daemonset模式运行，且采集文件路径为容器内路径时有效。|\n|  ContainerFilters  |  object  |  否  | 空       | /                                            | 容器过滤选项。多个选项之间为“且”的关系，仅当EnableContainerDiscovery取值为true时有效。|\n|  ContainerFilters.K8sNamespaceRegex  |  string  |  否  | 空       | default                                      | 对于部署于K8s环境的容器，指定待采集容器所在Pod所属的命名空间条件。如果未添加该参数，则表示采集所有容器。支持正则匹配。                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |\n|  ContainerFilters.K8sPodRegex  |  string  |  否  | 空       | test-pod                                     | 对于部署于K8s环境的容器，指定待采集容器所在Pod的名称条件。如果未添加该参数，则表示采集所有容器。支持正则匹配。|\n|  ContainerFilters.IncludeK8sLabel  |  map  |  否  | 空       | /                                            | 对于部署于K8s环境的容器，指定待采集容器所在pod的标签条件。多个条件之间为“或”的关系，如果未添加该参数，则表示采集所有容器。支持正则匹配。 map中的key为Pod标签名，value为Pod标签的值，说明如下：<ul><li>如果map中的value为空，则pod标签中包含以key为键的pod都会被匹配；</li><li>如果map中的value不为空，则：<ul></li><li>若value以`^`开头并且以`$`结尾，则当pod标签中存在以key为标签名且对应标签值能正则匹配value的情况时，相应的pod会被匹配；</li><li>其他情况下，当pod标签中存在以key为标签名且以value为标签值的情况时，相应的pod会被匹配。</li></ul></ul>                                                                                                                                                                                                                                                                                                                                                                                       |\n|  ContainerFilters.ExcludeK8sLabel  |  map  |  否  | 空       | /                                            | 对于部署于K8s环境的容器，指定需要排除采集容器所在pod的标签条件。多个条件之间为“或”的关系，如果未添加该参数，则表示采集所有容器。支持正则匹配。 map中的key为pod标签名，value为pod标签的值，说明如下：<ul><li>如果map中的value为空，则pod标签中包含以key为键的pod都会被匹配；</li><li>如果map中的value不为空，则：<ul></li><li>若value以`^`开头并且以`$`结尾，则当pod标签中存在以key为标签名且对应标签值能正则匹配value的情况时，相应的pod会被匹配；</li><li>其他情况下，当pod标签中存在以key为标签名且以value为标签值的情况时，相应的pod会被匹配。</li></ul></ul>                                                                                                                                                                                                                                                                                                                                                                                    |\n|  ContainerFilters.K8sContainerRegex  |  string  |  否  | 空       | test-container                               | 对于部署于K8s环境的容器，指定待采集容器的名称条件。如果未添加该参数，则表示采集所有容器。支持正则匹配。|\n|  ContainerFilters.IncludeEnv  |  map  |  否  | 空       | /                                            | 指定待采集容器的环境变量条件。多个条件之间为“或”的关系，如果未添加该参数，则表示采集所有容器。支持正则匹配。 map中的key为环境变量名，value为环境变量的值，说明如下：<ul><li>如果map中的value为空，则容器环境变量中包含以key为键的容器都会被匹配；</li><li>如果map中的value不为空，则：<ul></li><li>若value以`^`开头并且以`$`结尾，则当容器环境变量中存在以key为环境变量名且对应环境变量值能正则匹配value的情况时，相应的容器会被匹配；</li><li>其他情况下，当容器环境变量中存在以key为环境变量名且以value为环境变量值的情况时，相应的容器会被匹配。</li></ul></ul>                                                                                                                                                                                                                                                                                                                                                                                                  |\n|  ContainerFilters.ExcludeEnv  |  map  |  否  | 空       | /                                            | 指定需要排除采集容器的环境变量条件。多个条件之间为“或”的关系，如果未添加该参数，则表示采集所有容器。支持正则匹配。 map中的key为环境变量名，value为环境变量的值，说明如下：<ul><li>如果map中的value为空，则容器环境变量中包含以key为键的容器都会被匹配；</li><li>如果map中的value不为空，则：<ul></li><li>若value以`^`开头并且以`$`结尾，则当容器环境变量中存在以key为环境变量名且对应环境变量值能正则匹配value的情况时，相应的容器会被匹配；</li><li>其他情况下，当容器环境变量中存在以key为环境变量名且以value为环境变量值的情况时，相应的容器会被匹配。</li></ul></ul>                                                                                                                                                                                                                                                                                                                                                                                               |\n|  ContainerFilters.IncludeContainerLabel  |  map  |  否  | 空       | /                                            | 指定待采集容器的标签条件。多个条件之间为“或”的关系，如果未添加该参数，则默认为空，表示采集所有容器。支持正则匹配。 map中的key为容器标签名，value为容器标签的值，说明如下：<ul><li>如果map中的value为空，则容器标签中包含以key为键的容器都会被匹配；</li><li>如果map中的value不为空，则：<ul></li><li>若value以`^`开头并且以`$`结尾，则当容器标签中存在以key为标签名且对应标签值能正则匹配value的情况时，相应的容器会被匹配；</li><li>其他情况下，当容器标签中存在以key为标签名且以value为标签值的情况时，相应的容器会被匹配。</li></ul></ul>                                                                                                                                                                                                                                                                                                                                                                                                             |\n|  ContainerFilters.ExcludeContainerLabel  |  map  |  否  | 空       | /                                            | 指定需要排除采集容器的标签条件。多个条件之间为“或”的关系，如果未添加该参数，则默认为空，表示采集所有容器。支持正则匹配。 map中的key为容器标签名，value为容器标签的值，说明如下：<ul><li>如果map中的value为空，则容器标签中包含以key为键的容器都会被匹配；</li><li>如果map中的value不为空，则：<ul></li><li>若value以`^`开头并且以`$`结尾，则当容器标签中存在以key为标签名且对应标签值能正则匹配value的情况时，相应的容器会被匹配；</li><li>其他情况下，当容器标签中存在以key为标签名且以value为标签值的情况时，相应的容器会被匹配。</li></ul></ul>                                                                                                                                                                                                                                                                                                                                                                                                          |\n|  ExternalK8sLabelTag  |  map  |  否  | 空       | /                                            | 对于部署于K8s环境的容器，需要在日志中额外添加的与Pod标签相关的tag。map中的key为Pod标签名，value为对应的tag名。 例如：在map中添加`app: k8s\\_label\\_app`，则若pod中包含`app=serviceA`的标签时，会将该信息以tag的形式添加到日志中，即添加字段`__tag__:k8s_label_app: serviceA`；若不包含`app`标签，则会添加空字段`__tag__:k8s_label_app: `。                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n|  ExternalEnvTag  |  map  |  否  | 空       | /                                            | 对于部署于K8s环境的容器，需要在日志中额外添加的与容器环境变量相关的tag。map中的key为环境变量名，value为对应的tag名。 例如：在map中添加`VERSION: env\\_version`，则当容器中包含环境变量`VERSION=v1.0.0`时，会将该信息以tag的形式添加到日志中，即添加字段`__tag__:env_version: v1.0.0`；若不包含`VERSION`环境变量，则会添加空字段`__tag__:env_version: ` 。                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n|  CollectingContainersMeta  |  bool  |  否  | false   | true                                         | 是否启用容器元信息预览。|\n|  AppendingLogPositionMeta  |  bool  |  否  | false   | false                                        | 是否在日志中添加该条日志所属文件的元信息，包括\\_\\_tag\\_\\_:\\_\\_inode\\_\\_字段和\\_\\_file\\_offset\\_\\_字段。                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n|  AllowingIncludedByMultiConfigs  |  bool  |  否  | false   | false                                        | 是否允许当前配置采集其它配置已匹配的文件。|\n|  Tags  |  object  |  否  | 空       | {\"FileInodeTagKey\":\"\\_\\_inode\\_\\_\"}          | <notice>仅 LoongCollector 3.0.10 之后支持。</notice>   控制文件采集相关Tag。key为Tag参数名，value为Tag在日志中的字段名。当 value 为__default__时，取默认值。当 value 为空字符串时，表示删除 Tag。 可配置 Tag 如下：<ul><li>FileInodeTagKey：文件 inode。 默认不添加，默认值为\"\\_\\_inode\\_\\_\"。</li><li>FilePathTagKey：文件路径。默认添加，默认值为\"\\_\\_path\\_\\_\"。</li></ul> 以下参数仅当EnableContainerDiscovery参数取值为true时有效。 <ul><li>K8sNamespaceTagKey：文件所在容器命名空间。默认添加，默认值为\"\\_namespace\\_\"。</li><li>K8sPodNameTagKey：文件所在Pod 名。默认添加，默认值为\"\\_pod_name\\_\"。</li><li>K8sPodUidTagKey：文件所在 Pod UID。默认添加，默认值为\"\\_pod_uid\\_\"。</li><li>ContainerNameTagKey：文件所在容器名。默认添加，默认值为\"\\_container_name\\_\"。</li><li>ContainerIpTagKey：文件所在容器IP。默认添加，默认值为\"\\_container_ip\\_\"。</li><li>ContainerImageNameTagKey：文件所在容器镜像。默认添加，默认值为\"\\_image_name\\_\"。</li></ul> |\n|  FileOffsetKey  |  string  |  否  | 空       | \\_\\_file_offset\\_\\_                          | <notice>仅 LoongCollector 3.0.10 之后支持。</notice> 日志在文件中的位置 Tag。默认不添加，默认值为\\_\\_file_offset\\_\\_。当 value 为\\_\\_default\\_\\_时，取默认值。当 value 为空字符串时，表示删除 Tag。当EnableLogPositionMeta参数与 Tags.FileInodeTagKey或FileOffsetKey参数同时存在时，EnableLogPositionMeta参数会被忽略。                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n\n### 容器标准输出（旧版）\n\n|  **参数**  | **类型** | **是否必填** | **默认值** | **示例**                        | **说明**                                                                             |\n| --- |--------|----------|---------|-------------------------------|------------------------------------------------------------------------------------|\n|  Type  | string | 是        | /       | service\\_docker\\_stdout                  | 插件类型。固定为service\\_docker\\_stdout。                                                   |\n|  Stdout  | Boolean  | 否        | true    | true | 是否采集标准输出stdout。                                                |\n|  Stderr  | Boolean     | 否            | true       | true                            | 是否采集标准出错信息stderr。                                                                     |\n|  StartLogMaxOffset   | Integer  | 否        | 128×1024     | 131072                           | 首次采集时回溯历史数据长度，单位：字节。建议取值在[131072,1048576]之间。                                                                       |\n|  IncludeLabel  | Map，其中LabelKey和LabelValue为String类型 | 否        | 空        |  | <p>容器Label白名单，用于指定待采集的容器。默认为空，表示采集所有容器的标准输出。如果您要设置容器Label白名单，那么LabelKey必填，LabelValue可选填。</p><ul><li>如果LabelValue为空，则容器Label中包含LabelKey的容器都匹配。</li><li><p>如果LabelValue不为空，则容器Label中包含LabelKey=LabelValue的容器才匹配。</p><p>LabelValue默认为字符串匹配，即只有LabelValue和容器Label的值完全相同才会匹配。如果该值以`^`开头并且以`$`结尾，则为正则匹配。例如设置LabelKey为`io.kubernetes.container.name`，设置LabelValue为`^(nginx\\|cube)$`，表示可匹配名为nginx、cube的容器。</p></li></ul><p>多个白名单之间为或关系，即只要容器Label满足任一白名单即可匹配。</p>                                                     |\n|  ExcludeLabel  | Map，其中LabelKey和LabelValue为String类型  | 否        | 空     |  | <p>容器Label黑名单，用于排除不采集的容器。默认为空，表示不排除任何容器。如果您要设置容器Label黑名单，那么LabelKey必填，LabelValue可选填。</p><ul><li>如果LabelValue为空，则容器Label中包含LabelKey的容器都将被排除。</li><li><p>如果LabelValue不为空，则容器Label中包含LabelKey=LabelValue的容器才会被排除。</p><p>LabelValue默认为字符串匹配，即只有LabelValue和容器Label的值完全相同才会匹配。如果该值以`^`开头并且以`$`结尾，则为正则匹配。例如设置LabelKey为`io.kubernetes.container.name`，设置LabelValue为`^(nginx\\|cube)$`，表示可匹配名为nginx、cube的容器。</p></li></ul><p>多个黑名单之间为或关系，即只要容器Label满足任一黑名单对即可被排除。</p>                                                |\n|  IncludeEnv  | Map，其中EnvKey和EnvValue为String类型     | 否            | 空     |  | <p>设环境变量白名单，用于指定待采集的容器。默认为空，表示采集所有容器的标准输出。如果您要设置环境变量白名单，那么EnvKey必填，EnvValue可选填。</p><ul><li>如果EnvValue为空，则容器环境变量中包含EnvKey的容器都匹配。</li><li><p>如果EnvValue不为空，则容器环境变量中包含EnvKey=EnvValue的容器才匹配。</p><p>EnvValue默认为字符串匹配，即只有EnvValue和环境变量的值完全相同才会匹配。如果该值以`^`开头并且以`$`结尾，则为正则匹配，例如设置EnvKey为`NGINX_SERVICE_PORT`，设置EnvValue为`^(80|6379)$`，表示可匹配服务端口为80、6379的容器。</p></li></ul><p>多个白名单之间为或关系，即只要容器的环境变量满足任一键值对即可匹配。</p>                                                                     |\n|  ExcludeEnv   | Map，其中EnvKey和EnvValue为String类型  | 否        | 空 |  | <p>环境变量黑名单，用于排除不采集的容器。默认为空，表示不排除任何容器。如果您要设置环境变量黑名单，那么EnvKey必填，EnvValue可选填。</p><ul><li>如果EnvValue为空，则容器环境变量中包含EnvKey的容器的日志都将被排除。</li><li><p>如果EnvValue不为空，则容器环境变量中包含EnvKey=EnvValue的容器才会被排除。</p><p>EnvValue默认为字符串匹配，即只有EnvValue和环境变量的值完全相同才会匹配。如果该值以`^`开头并且以`$`结尾，则为正则匹配，例如设置EnvKey为`NGINX_SERVICE_PORT`，设置EnvValue为`^(80\\|6379)$`，表示可匹配服务端口为80、6379的容器。</p></li></ul><p>多个黑名单之间为或关系，即只要容器的环境变量满足任一键值对即可被排除。</p>                                                                        |\n|  IncludeK8sLabel  | Map，其中LabelKey和LabelValue为String类型 | 否        | 空        |  | <p>通过Kubernetes Label（定义在template.metadata中）白名单指定待采集的容器。如果您要设置Kubernetes Label白名单，那么LabelKey必填，LabelValue可选填。</p><ul><li>如果LabelValue为空，则Kubernetes Label中包含LabelKey的容器都匹配。</li><li><p>如果LabelValue不为空，则Kubernetes Label中包含LabelKey=LabelValue的容器才匹配。</p><p>LabelValue默认为字符串匹配，即只有LabelValue和Kubernetes Label的值完全相同才会匹配。如果该值以`^`开头并且以`$`结尾，则为正则匹配。例如设置LabelKey为`app`，设置LabelValue为`^(test1\\|test2)$`，表示匹配Kubernetes Label中包含app:test1、app:test2的容器。</p></li></ul><p>多个白名单之间为或关系，即只要Kubernetes Label满足任一白名单即可匹配。</p>                                                     |\n|  ExcludeK8sLabel  | Map，其中LabelKey和LabelValue为String类型  | 否        | 空     |  | <p>通过Kubernetes Label（定义在template.metadata中）黑名单排除不采集的容器。如果您要设置Kubernetes Label黑名单，那么LabelKey必填，LabelValue可选填。</p><ul><li>如果LabelValue为空，则Kubernetes Label中包含LabelKey的容器都被排除。</li><li><p>如果LabelValue不为空，则Kubernetes Label中包含LabelKey=LabelValue的容器才会被排除。</p><p>LabelValue默认为字符串匹配，即只有LabelValue和Kubernetes Label的值完全相同才会匹配。如果该值以`^`开头并且以`$`结尾，则为正则匹配。例如设置LabelKey为`app`，设置LabelValue为`^(test1\\|test2)$`，表示匹配Kubernetes Label中包含app:test1、app:test2的容器。</p></li></ul><p>多个黑名单之间为或关系，即只要Kubernetes Label满足任一黑名单对即可被排除。</p>                                               |\n|  K8sNamespaceRegex  | String     | 否            | 空     | ^(default\\|nginx)$ | 通过Namespace名称指定采集的容器，支持正则匹配。例如设置为`^(default\\|nginx)$`，表示匹配nginx命名空间、default命名空间下的所有容器。                                                                     |\n|  K8sPodRegex   | String  | 否        | 空 | ^(nginx-log-demo.*)$ | 通过Pod名称指定待采集的容器，支持正则匹配。例如设置为`^(nginx-log-demo.*)$`，表示匹配以nginx-log-demo开头的Pod下的所有容器。                                                                        |\n|  K8sContainerRegex   | String  | 否        | 空 | ^(container-test)$ | 通过容器名称指定待采集的容器（Kubernetes容器名称是定义在spec.containers中），支持正则匹配。例如设置为`^(container-test)$`，表示匹配所有名为container-test的容器。                                                                        |\n\n#### 数据处理参数\n\n|  **参数**  | **类型** | **是否必填** | **默认值**  | **示例** | **说明**                                                                             |\n| --- |--------|----------|----------|--|------------------------------------------------------------------------------------|\n|  BeginLineRegex  | String | 否        | 空        |  | <p>行首匹配的正则表达式。</p><p>该配置项为空，表示单行模式。</p><p>如果该表达式匹配某行的开头，则将该行作为一条新的日志，否则将此行拼接到上一条日志。</p>                                                   |\n|  BeginLineCheckLength  | Integer  | 否        | 空     |  | <p>行首匹配的长度，单位：字节。</p><p>默认取值为10×1024字节。</p><p>如果行首匹配的正则表达式在前N个字节即可体现，推荐设置此参数，提升行首匹配效率。</p>                                              |\n|  BeginLineTimeoutMs  | Integer     | 否            | 空     |  | <p>行首匹配的超时时间，单位：毫秒。</p><p>默认取值为3000毫秒。</p><p>如果3000毫秒内没有出现新日志，则结束匹配，将最后一条日志上传到日志服务。</p>                                                                      |\n|  MaxLogSize   | Integer  | 否        | 空 |  | <p>日志最大长度<strong>，</strong>默认取值为0，单位：字节。</p><p>默认取值为512×1024字节。</p><p>如果日志长度超过该值，则不再继续查找行首，直接上传。</p>                                                                       |\n|  ExternalK8sLabelTag  | Map，其中LabelKey和LabelValue为String类型 | 否        | 空        |  | <p>设置Kubernetes Label（定义在template.metadata中）日志标签后，iLogtail将在日志中新增Kubernetes Label相关字段。</p><p>例如设置LabelKey为app，LabelValue为`k8s_label_app`，当Pod中包含Label `app=serviceA`时，会将该信息iLogtail添加到日志中，即添加字段k8s_label_app: serviceA；若不包含名为app的label时，添加空字段k8s_label_app: 。</p>                                                  |\n|  ExternalEnvTag  | Map，其中EnvKey和EnvValue为String类型  | 否        | 空     |  | <p>设置容器环境变量日志标签后，iLogtail将在日志中新增容器环境变量相关字段。</p><p>例如设置EnvKey为`VERSION`，EnvValue为`env_version`，当容器中包含环境变量`VERSION=v1.0.0`时，会将该信息以tag形式添加到日志中，即添加字段env_version: v1.0.0；若不包含名为VERSION的环境变量时，添加空字段env_version: 。</p>                                                |\n\n#### 数据处理环境变量\n\n|  **环境变量**  | **类型** | **是否必填** | **默认值**  | **示例** | **说明**                                                                             |\n| --- |--------|----------|----------|--|------------------------------------------------------------------------------------|\n|  ALIYUN\\_LOG\\_ENV\\_TAGS  | String | 否        | 空        |  | <p>设置全局环境变量日志标签后，iLogtail将在日志中新增iLogtail所在容器环境变量相关字段。多个环境变量名以`\\|`分隔。</p><p>例如设置为node_name\\|node_ip，当iLogtail容器中暴露相关环境变量时，会将该信息以tag形式添加到日志中，即添加字段node_ip:172.16.0.1和node_name:worknode。</p>                                                 |\n\n\n### MySQL输入插件\n\n|  **参数**  | **类型** | **是否必填** | **默认值**        | **示例**                        | **说明**                                                                                                                                                                                                                                                                                                                                                   |\n| --- |--------|----------|----------------|-------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string | 是        | /              | service\\_mysql                   | 插件类型。固定为service\\_mysql。                                                                                                                                                                                                                                                                                                                                  |\n|  Address  | string | 否        | 127.0.0.1:3306 | rm\\-\\*.mysql.rds.aliyuncs.com | MySQL地址。                                                                                                                                                                                                                                                                                                                                                 |\n|  User  | string | 否        | root           | root                          | 用于登录MySQL数据库的用户名称。                                                                                                                                                                                                                                                                                       |\n|  Password  | string | 否        | 空              |                               | 用于登录MySQL数据库的用户密码。如果安全需求较高，建议将用户名称和密码配置为xxx，待采集配置同步至本地机器后，在本地文件`/usr/local/ilogtail/user_log_config.json`中找到对应配置进行修改。具体操作，请参见[修改本地配置](~~64955~~)。><notice>如果您在控制台上修改了此参数，同步至本地后会覆盖本地的配置。></notice>                                                                                                                                                       |\n|  DataBase  | string | 否        | /              | project\\_database             | 数据库名称。                                                                                                                                                                                                                                                                                                                                                   |\n|  DialTimeOutMs  | int    | 否        | 5000           | 5000                          | 连接MySQL数据库超时时间，单位：ms。                                                                                                                                                                                                                                                                                                                                    |\n|  ReadTimeOutMs  | int    | 否        | 5000           | 5000                          | 读取MySQL查询结果的超时时间，单位：ms。                                                                                                                                                                                                                                                                                                                                  |\n|  StateMent  | string | 否        | /              |                               | SELECT语句。设置CheckPoint为true时，Statement中SELECT语句的where条件中必须包含CheckPoint列（CheckPointColumn）。支持使用半角问号（?）表示替换符，与CheckPoint列配合使用。 例如设置CheckPointColumn为id，设置CheckPointStart为0，设置StateMent为`SELECT * from ... where id > ?`。则每次采集后，系统会保存最后一条数据的ID作为Checkpoint，下次采集时查询语句中的半角问号（?）将被替换为该Checkpoint对应的ID。                                                          |\n|  Limit  | bool   | 否        | false          | true                          | 是否使用Limit分页。<ul><li>true：使用。</li><li>false（默认值）：不使用。</li></ul> 建议使用Limit进行分页。设置Limit为true后，进行SQL查询时，系统将自动在SELECT语句中追加LIMIT语句。                                                                                                                                                                                                                                         |\n|  PageSize  | int    | 否        | /              | 10                            | 分页大小，Limit为true时必须配置。                                                                                                                                                                                                                                                                                                                                                  |\n|  MaxSyncSize  | int    | 否        | 0              | 0                             | 每次同步最大记录数。默认值为0，表示无限制。                                                                                                                                                                                                                                                                                                                                 |\n|  CheckPoint  | bool   | 否    | false          | true                          | 是否使用CheckPoint。<ul><li>true：使用。</li><li>false（默认值）：不使用。</li></ul>  CheckPoint可作为下次采集数据的起点，实现数据增量采集。                                                                                                                                                                                                                                                                                                                                              |\n|  CheckPointColumn  | string | 否        | 空              | 1                             | CheckPoint列名称。设置CheckPoint为true时，需要配置。 **警告** 该列的值必须递增，否则可能会出现数据漏采集问题（每次查询结果中的最大值将作为下次查询的输入）。                                                                                                                                                                                                                                                                                                   |\n|  CheckPointColumnType  | string | 否        | 空              | int                           | CheckPoint列的数据类型，支持int和time。int类型的内部存储为int64，time类型支持MySQL的date、datetime、time类型。设置CheckPoint为true时，需要配置。                                                                                                                                                                                                                                                                                             |\n|  CheckPointStart  | string | 否        | 空              |                      | CheckPoint列的初始值。设置CheckPoint为true时，需要配置。                                                                                                                                                                                                                                                                                           |\n|  CheckPointSavePerPage  | bool   | 否        | true           | true                      | 是否每次分页时保存一次CheckPoint。<ul><li> true（默认值）：每次分页时保存一次CheckPoint。</li><li>false：每次同步完成后保存一次CheckPoint。</li></ul>                                                                                                                                                                                                                                                                                                 |\n|  IntervalMs  | int    | 否        | 60000              | 60000                             | 同步间隔，默认值为60000，单位：ms。    |\n\n### HTTP输入插件\n\n|  **参数**  | **类型** | **是否必填** | **默认值** | **示例**                        | **说明**                                                                                                                 |\n| --- |--------|----------|---------|-------------------------------|------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string | 是        | /       | metric\\_http                  | 插件类型。固定为metric\\_http。                                                                                                  |\n|  Address  | string | 是        | /       |  | URL列表。  **重要** 必须以`http`或`https`开头。                                                                                    |\n|  IntervalMs  | int    | 是        | /       | 10                            | 每次请求的间隔，单位：ms。                                                                                                         |\n|  Method  | string | 否        | GET     | GET                           | 请求的方法名，必须大写。                                                                                                           |\n|  Body  | string | 否        | 空       |                               | HTTP Body字段内容。                                                                                                         |\n|  Headers  | map    | 否        | 空       | {\"key\":\"value\"}               | HTTP Header的内容，例如`{\"key\":\"value\"}`，请根据实际值替换。  |\n|  PerAddressSleepMs  | int    | 否        | 100     | 100                           | Addresses列表中，每个URL请求的间隔时间，单位：ms。                                                                                                  |\n|  ResponseTimeoutMs  | int    | 否        | 5000    | 5000                             | 请求超时的时间，单位：ms。                                                                                                 |\n|  IncludeBody  | bool   | 否    | false   | true                          | 是否采集请求的Body，默认值：false。如果为true，则将请求Body内容存放在名为content的key中。                    |\n|  FollowRedirects  | bool | 否        | false   | false                             | 是否自动处理重定向。                          |\n|  InsecureSkipVerify  | bool | 否        | false   | false                           | 是否跳过HTTPS安全检查。               |\n|  ResponseStringMatch  | string | 否        | /       |                               | 对返回的Body内容进行正则表达式检查，检查结果被存放在名为_response_match_的key中，如果匹配，value为yes；如果不匹配，value为no。                                                                               |\n\n\n### Syslog输入插件\n\n|  **参数**  | **类型** | **是否必填** | **默认值**        | **示例**              | **说明**                                                                                                                                                                                                                                                                                           |\n| --- |--------|----------|----------------|---------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string | 是        | /              | service\\_syslog | 插件类型，固定为service\\_syslog。                                                                                                                                                                                                                                                                        |\n|  Address  | string | 否        | tcp://127.0.0.1:9999 |                     | 指定Logtail监听的协议、地址和端口，Logtail会根据Logtail配置进行监听并获取日志数据。格式为`[tcp/udp]://[` *ip* `]:[` *port* `]`。不配置时，默认为`tcp://127.0.0.1:9999`，即表示（只能接收本地转发的日志。  **说明** <ul><li>Logtail配置中设置的监听协议、地址和端口号必须与rsyslog配置文件设置的转发规则相同。</li>   <li>如果安装Logtail的服务器有多个IP地址可接收日志，可以将地址配置为`0.0.0.0`，表示监听服务器的所有IP地址。</li></ul> |\n|  ParseProtocol  | string   | 否        | 空          | rfc3164                | 指定解析日志所使用的协议，默认为空，表示不解析。其中： <ul><li> 空：不解析。</li> <li>rfc3164：指定使用RFC3164协议解析日志。</li></li>rfc5424：指定使用RFC5424协议解析日志。</li><li>auto：指定Logtail根据日志内容自动选择合适的解析协议。</li></ul>                                                                                                                           |\n|  IgnoreParseFailure  | bool | 否        | true           | true                | 指定解析失败后的操作，不配置时，默认为`true`，表示放弃解析，直接填充所返回的content字段。配置为`false` ，表示解析失败时丢弃日志。                                                                                                                                                                                                                                   |\n\n### Systemd Journal输入插件\n\n|  **参数**  | **类型** | **是否必填** | **默认值** | **示例**              | **说明**                                                                                       |\n| --- |--------|----------|---------|---------------------|----------------------------------------------------------------------------------------------|\n|  Type  | string | 是        | /       | service\\_journal | 插件类型，固定为service\\_journal。                                                                   |\n|  JournalPaths  |  \\[string\\] | 是        | 空       |          /var/log/journal           | Journal日志路径，建议配置为Journal日志所在目录。 |\n|  SeekPosition  | string   | 否        | tail   | tail                | 首次采集方式，可以配置为head或tail。 <ul><li> head表示采集所有数据。 </li> <li> tail表示只采集Logtail采集配置被应用后的新数据。</li></ul>                               |\n|  Kernel  | bool | 否        | true    | true                | 是否采集内核日志。                               |\n|  Units  | \\[string\\] | 否        | 空       |       \"\"              | 指定采集的Unit列表，默认为空，表示全部采集。                                       |\n|  ParseSyslogFacility  | bool    | 否        | false       |    false    | 是否解析syslog日志的facility字段。不配置时，表示不解析。                                                                                       |\n|  ParsePriority  | bool    | 否        | false       |    false               | 是否解析Priority字段。不配置时，表示不解析。 设置为true时，Priority字段的映射关系如下所示。 ```plaintext \"0\": \"emergency\" \"1\": \"alert\" \"2\": \"critical\" \"3\": \"error\" \"4\": \"warning\" \"5\": \"notice\" \"6\": \"informational\" \"7\": \"debug\" ```                                                                                   |\n|  UseJournalEventTime  | bool    | 否        | false   | false               | 是否使用Journal日志中的字段作为日志时间。不配置时，表示使用采集时间作为日志时间。实时日志采集一般相差3秒以内。                                                                    |\n\n### SQL Server输入插件\n\n|  **参数**  | **类型** | **是否必填** | **默认值**        | **示例**                        | **说明**                                                                                                                                                                                                                                                                                          |\n| --- |--------|----------|----------------|-------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string | 是        | /              | service\\_mssql                   | 插件类型。固定为service\\_mssql。                                                                                                                                                                                                                                                                         |\n|  Address  | string | 否        | 127.0.0.1:1433 | rm\\-\\*.sqlserver.rds.aliyuncs.com | SQL Server地址。                                                                                                                                                                                                                                                                                   |\n|  User  | string | 否        | root           | root                          | 用于登录SQL Server数据库的账号名称。                                                                                                                                                                                                                                                                         |\n|  Password  | string | 否        | 空              |                               | 用于登录SQL Server数据库的账号密码。如果安全需求较高，建议将用户名称和密码配置为xxx，待采集配置同步至本地机器后，在本地文件`/usr/local/ilogtail/user_log_config.json`中找到对应配置进行修改。具体操作，请参见[修改本地配置](~~64955~~)。><notice>如果您在控制台上修改了此参数，同步至本地后会覆盖本地的配置。></notice>                                                                                              |\n|  DataBase  | string | 否        | /              | project\\_database             | 数据库名称。                                                                                                                                                                                                                                                                                          |\n|  DialTimeOutMs  | int    | 否        | 5000           | 5000                          |连接SQL Server数据库的超时时间，单位：ms。                                                                                                                                                                                                                                                                           |\n|  ReadTimeOutMs  | int    | 否        | 5000           | 5000                          | 读取SQL Server查询结果的超时时间，单位：ms。                                                                                                                                                                                                                                                                         |\n|  StateMent  | string | 否        | /              |                               | SELECT语句。设置CheckPoint为true时，Statement中SELECT语句的where条件中必须包含CheckPoint列（CheckPointColumn）。支持使用半角问号（?）表示替换符，与CheckPoint列配合使用。 例如设置CheckPointColumn为id，设置CheckPointStart为0，设置StateMent为`SELECT * from ... where id > ?`。则每次采集后，系统会保存最后一条数据的ID作为Checkpoint，下次采集时查询语句中的半角问号（?）将被替换为该Checkpoint对应的ID。 |\n|  Limit  | bool   | 否        | false          | true                          | 是否使用Limit分页。<ul><li>true：使用。</li><li>false（默认值）：不使用。</li></ul> 建议使用Limit进行分页。设置Limit为true后，进行SQL查询时，系统将自动在SELECT语句中追加LIMIT语句。                                                                                                                                                                   |\n|  PageSize  | int    | 否        | /              | 10                            | 分页大小，Limit为true时必须配置。                                                                                                                                                                                                                                                                           |\n|  MaxSyncSize  | int    | 否        | 0              | 0                             | 每次同步最大记录数。默认值为0，表示无限制。                                                                                                                                                                                                                                                                          |\n|  CheckPoint  | bool   | 否    | false          | true                          | 是否使用CheckPoint。<ul><li>true：使用。</li><li>false（默认值）：不使用。</li></ul>  CheckPoint可作为下次采集数据的起点，实现数据增量采集。                                                                                                                                                                                             |\n|  CheckPointColumn  | string | 否        | 空              | 1                             | CheckPoint列名称。CheckPoint为true时必须配置。 **警告** 该列的值必须递增，否则可能会出现数据漏采集问题（每次查询结果中的最大值将作为下次查询的输入）。                                                                                                                                                                                                   |\n|  CheckPointColumnType  | string | 否        | 空              | int                           | CheckPoint列的数据类型，支持int和time。int类型的内部存储为int64，time类型支持SQL Server的date、datetime、time类型。设置CheckPoint为true时，需要配置。                                                                                                                                                                                        |\n|  CheckPointStart  | string | 否        | 空              |                      | CheckPoint列的初始值。设置CheckPoint为true时，需要配置。                                                                                                                                                                                                                                                        |\n|  CheckPointSavePerPage  | bool   | 否        | true           | true                      | 是否每次分页时保存一次CheckPoint。<ul><li> true（默认值）：每次分页时保存一次CheckPoint。</li><li>false：每次同步完成后保存一次CheckPoint。</li></ul>                                                                                                                                                                                    |\n|  IntervalMs  | int    | 否        | 60000              | 60000                             | 同步间隔，默认值为60000，单位：ms。                                                                                                                                                                                                                                                                           |\n\n### PostgreSQL输入插件\n\n|  **参数**  | **类型** | **是否必填** | **默认值**        | **示例**                        | **说明**                                                                                                                                                                                                                                                                                          |\n| --- |--------|----------|----------------|-------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string | 是        | /              | service\\_pgsql                   | 插件类型。固定为service\\_pgsql。                                                                                                                                                                                                                                                                         |\n|  Address  | string | 否        | 127.0.0.1:5432 | rm\\-\\*.pg.rds.aliyuncs.com | PostgreSQL地址。                                                                                                                                                                                                                                                                                   |\n|  User  | string | 否        | root           | root                          | 用于登录PostgreSQL地址数据库的账号名称。                                                                                                                                                                                                                                                                         |\n|  Password  | string | 否        | 空              |                               | 用于登录PostgreSQL数据库的账号密码。如果安全需求较高，建议将用户名称和密码配置为xxx，待采集配置同步至本地机器后，在本地文件`/usr/local/ilogtail/user_log_config.json`中找到对应配置进行修改。具体操作，请参见[修改本地配置](~~64955~~)。><notice>如果您在控制台上修改了此参数，同步至本地后会覆盖本地的配置。></notice>                                                                                         |\n|  DataBase  | string | 否        | /              | project\\_database             | PostgreSQL数据库名称。                                                                                                                                                                                                                                                                                          |\n|  DialTimeOutMs  | int    | 否        | 5000           | 5000                          | 连接PostgreSQL数据库的超时时间，单位：ms。                                                                                                                                                                                                                                                                     |\n|  ReadTimeOutMs  | int    | 否        | 5000           | 5000                          | 读取PostgreSQL查询结果的超时时间，单位：ms。                                                                                                                                                                                                                                                                    |\n|  StateMent  | string | 否        | /              |                               | SELECT语句。 设置CheckPoint为true时，StateMent中SELECT语句的where条件中必须包含CheckPoint列（CheckPointColumn参数），并将该列的值设置为$1。例如：设置CheckPointColumn为id，设置StateMent为`SELECT * from ... where id > $1` |\n|  Limit  | bool   | 否        | false          | true                          | 是否使用Limit分页。<ul><li>true：使用。</li><li>false（默认值）：不使用。</li></ul> 建议使用Limit进行分页。设置Limit为true后，进行SQL查询时，系统将自动在SELECT语句中追加LIMIT语句。                                                                                                                                                                   |\n|  PageSize  | int    | 否        | /              | 10                            | 分页大小，Limit为true时必须配置。                                                                                                                                                                                                                                                                           |\n|  MaxSyncSize  | int    | 否        | 0              | 0                             | 每次同步最大记录数。默认值为0，表示无限制。                                                                                                                                                                                                                                                                          |\n|  CheckPoint  | bool   | 否    | false          | true                          | 是否使用CheckPoint。<ul><li>true：使用。</li><li>false（默认值）：不使用。</li></ul>  CheckPoint可作为下次采集数据的起点，实现数据增量采集。                                                                                                                                                                                             |\n|  CheckPointColumn  | string | 否        | 空              | 1                             | CheckPoint列名称。CheckPoint为true时必须配置。 **警告** 该列的值必须递增，否则可能会出现数据漏采集问题（每次查询结果中的最大值将作为下次查询的输入）。                                                                                                                                                                                                      |\n|  CheckPointColumnType  | string | 否        | 空              | int                           | CheckPoint列的数据类型，支持int和time。int类型的内部存储为int64，time类型支持PostgreSQL的时间类型。设置CheckPoint为true时，需要配置。                                                                                                                                                                                        |\n|  CheckPointStart  | string | 否        | 空              |                      | CheckPoint列的初始值。设置CheckPoint为true时，需要配置。                                                                                                                                                                                                                                                        |\n|  CheckPointSavePerPage  | bool   | 否        | true           | true                      | 是否每次分页时保存一次CheckPoint。<ul><li> true（默认值）：每次分页时保存一次CheckPoint。</li><li>false：每次同步完成后保存一次CheckPoint。</li></ul>                                                                                                                                                                                    |\n|  IntervalMs  | int    | 否        | 60000              | 60000                             | 同步间隔，默认值为60000，单位：ms。                                                                                                                                                                                                                                                                           |\n\n### SNMP协议输入插件\n\n|  **参数**  | **类型** | **是否必填** | **默认值** | **示例**    | **说明**                                                                                                       |\n| --- |--------|----------|---------|-----------|--------------------------------------------------------------------------------------------------------------|\n|  Targets  | \\[string\\] | 是        | /       | 127.0.0.1 | 目标机器组的IP地址。                                                                                                  |\n|  Port  | string | 否        | 161     | 161       | SNMP协议使用的端口。                                                                                                 |\n|  Community  | string | 否        | public  | public    | 团体名称，SNMPv1和SNMPv2使用团体名进行认证。                                                                                 |\n|  UserName  | string | 否        | 空       | root      | 用户名，SNMPv3支持使用用户名进行认证。                                                                                       |\n|  AuthenticationProtocol  | string | 否        | NoAuth  | NoAuth    | 验证协议，SNMPv3支持使用验证协议进行认证。                                                                                     |\n|  AuthenticationPassphrase  | string    | 否        | 空       |           | 验证密码，默认值为空。设置`AuthenticationProtocol`为`MD5`或`SHA`时，需要设置`AuthenticationPassphrase`。                           |\n|  PrivacyProtocol  | string    | 否        | NoPriv  | NoPriv    | 隐私协议，SNMPv3支持使用隐私协议进行认证。                                                                                     |\n|  PrivacyPassphrase  | string | 否        | 空       |           | 隐私协议密码，默认与验证密码一致。 当设置`PrivacyProtocol`为`DES`或`AES`时，必须设置`PrivacyPassphrase`。                                 |\n|  Timeout  | int   | 否        | 5       | 5         | 一次查询操作的超时时间，单位为秒。                                                                                            |\n|  Version  | int    | 否        | 2       | 2         | SNMP协议版本。 可选值为`1`、`2`、`3`。                                                                                   |\n|  Transport  | string    | 否        | udp     | udp       | SNMP通讯方法，可选值为`udp`、`tcp`。                                                                                    |\n|  MaxRepetitions  | int   | 否    | 0       | 0         | 查询超时后的重试次数。                                                                                                  |\n|  Oids  | \\[string\\] | 否        | 空       | 1         | 在目标机器中查询的对象标识符。                                                                                              |\n|  Fields  | \\[string\\] | 否        | 空       | int       | 在目标机器中查询的字段，本插件会先对字段进行翻译，即查找本地管理信息库，将其翻译为对象标识符并一起查询。                |\n|  Tables  | \\[string\\] | 否        | 空       |           | 在目标机器中查询的表，本插件会先查询表内所有的字段，然后查找本地管理信息库，将其翻译为对象标识符并一起查询。                                                                     |\n\n### 脚本输出采集插件\n\n|  **参数**  | **类型**     | **是否必填** | **默认值** | **示例**    | **说明**                                                                                                                                                                |\n| --- |------------|----------|---------|-----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是        | /       | input\\_command | 插件类型，固定为input\\_command。                                                                                                                                              |\n|  ScriptType  | string     | 是        | 空       | shell       | 指定脚本内容的类型，目前支持bash、shell、python2、python3。                                                                                                                             |\n|  User  | string     | 是        | /       | public    | 运行命令使用的用户名，只支持非Root用户。 **说明** * 请确保指定的用户名在机器中存在。  建议配置最小权限，只授予需要关注的目录或文件rwx权限 。                                                                                       |\n|  ScriptContent  | string     | 是        | 空       |       | 脚本内容，支持PlainText和Base64加密的内容，长度在512\\*1024字节内。                                                                                                                         |\n|  ContentEncoding  | string     | 否        | PlainText  | PlainText    | 脚本内容的文本格式，可选值。<ul><li>PlainText（默认值）：纯文本，不编码。</li><li>Base64：Base64编码。</li></ul>                                                                                      |\n|  LineSplitSep  | string     | 否        | 空       |           | 脚本输出内容的分隔符，为空时不进行分割，全部作为一条数据返回。                                                                                                                                       |\n|  CmdPath  | string     | 否        | 空  | /usr/bin/bash    | 执行脚本命令的路径，如果为空，则使用默认路径。默认路径如下：<ul><li> bash：/usr/bin/bash </li><li> shell：/usr/bin/sh </li><li> python2：/usr/bin/python2 </li><li> python3：/usr/bin/python3</li></ul> |\n|  TimeoutMilliSeconds  | int        | 否        | 3000       |   3000        | 执行脚本的超时时间，单位为毫秒。                                                                                                                                                      |\n|  IgnoreError  | bool       | 否        | false     | false        | 插件执行出错时是否忽略Error日志。默认值为false，表示不忽略。                                                                                                                                        |\n|  Environments  | \\[string\\]        | 否        |        |          | 环境变量，默认为os.Environ()的值，如果设置了Environments，则在os.Environ()的基础上追加设置的环境变量。                                                                                                 |\n|  IntervalMs  | int     | 否        | 5000     | 5000       | 采集触发频率或脚本执行频率。单位为毫秒。                                                                                                                                                  |\n\n\n## 原生处理插件\n\n### 正则解析原生处理插件\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **默认值**  |  **示例**  |  **说明**  |\n| --- | --- | --- | --- | --- | --- |\n|  Type  |  string  |  是  |  /  |  processor\\_parse\\_regex\\_native  |  插件类型。固定为processor\\_parse\\_regex\\_native。  |\n|  SourceKey  |  string  |  是  |  /  |  content  |  源字段名。  |\n|  Regex  |  string  |  是  |  /  |  (\\d+-\\d+-\\d+)\\s+(.\\*)  |  正则表达式。  |\n|  Keys  |  \\[string\\]  |  是  |  /  |  \\[\"time\", \"msg\"\\]  |  提取的字段列表。  |\n|  KeepingSourceWhenParseFail  |  bool  |  否  |  false  |  false  |  当解析失败时，是否保留源字段。  |\n|  KeepingSourceWhenParseSucceed  |  bool  |  否  |  false  |  false  |  当解析成功时，是否保留源字段。  |\n|  RenamedSourceKey  |  string  |  否  |  空  |  key  |  当源字段被保留时，用于存储源字段的字段名。若不填，默认不改名。  |\n\n### JSON解析原生处理插件\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **默认值**  |  **示例**  |  **说明**  |\n| --- | --- | --- | --- | --- | --- |\n|  Type  |  string  |  是  |  /  |  processor\\_parse\\_json\\_native  |  插件类型。固定为processor\\_parse\\_json\\_native。  |\n|  SourceKey  |  string  |  是  |  /  |  content  |  源字段名。  |\n|  KeepingSourceWhenParseFail  |  bool  |  否  |  false  |  false  |  当解析失败时，是否保留源字段。  |\n|  KeepingSourceWhenParseSucceed  |  bool  |  否  |  false  |  false  |  当解析成功时，是否保留源字段。  |\n|  RenamedSourceKey  |  string  |  否  |  空  |  key  |  当源字段被保留时，用于存储源字段的字段名。若不填，默认不改名。  |\n\n### 分隔符解析原生处理插件\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **默认值**  |  **示例**  |  **说明**  |\n| --- | --- | --- | --- | --- | --- |\n|  Type  |  string  |  是  |  /  |  processor\\_parse\\_delimiter\\_native  |  插件类型。固定为processor\\_parse\\_delimiter\\_native。  |\n|  SourceKey  |  string  |  是  |  /  |  content  |  源字段名。  |\n|  Separator  |  string  |  是  |  /  |  ,  |  分隔符。  |\n|  Quote  |  string  |  否  |  \"  |  \"  |  引用符。  |\n|  Keys  |  \\[string\\]  |  是  |  /  |  \\[\"time\", \"msg\"\\]  |  提取的字段列表。  |\n|  AllowingShortenedFields  |  bool  |  否  |  true  |  true  |  是否允许提取的字段数量小于Keys的数量。若不允许，则此情景会被视为解析失败。  |\n|  OverflowedFieldsTreatment  |  string  |  否  |  extend  |  extend  |  当提取的字段数量大于Keys的数量时的行为。可选值包括：<ul><li>extend：保留多余的字段，且每个多余的字段都作为单独的一个字段加入日志，多余字段的字段名为\\_\\_column$i\\_\\_，其中$i代表额外字段序号，从0开始计数。</li><li>keep：保留多余的字段，但将多余内容作为一个整体字段加入日志，字段名为\\_\\_column0\\_\\_.</li><li>discard：丢弃多余的字段。</li></ul>       |\n|  KeepingSourceWhenParseFail  |  bool  |  否  |  false  |  false  |  当解析失败时，是否保留源字段。  |\n|  KeepingSourceWhenParseSucceed  |  bool  |  否  |  false  |  false  |  当解析成功时，是否保留源字段。  |\n|  RenamedSourceKey  |  string  |  否  |  空  |  key  |  当源字段被保留时，用于存储源字段的字段名。若不填，默认不改名。  |\n\n### 飞天解析原生处理插件\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **默认值**  |  **示例**  |  **说明**  |\n| --- | --- | --- | --- | --- | --- |\n|  Type  |  string  |  是  |  /  |  processor\\_parse\\_apsara\\_native  |  插件类型。固定为processor\\_parse\\_apsara\\_native。  |\n|  SourceKey  |  string  |  是  |  /  |  content  |  源字段名。  |\n|  Timezone  |  string  |  否  |  空  |  GMT+08:00  |  日志时间所属时区。格式为GMT+HH:MM（东区）或GMT-HH:MM（西区）。  |\n|  KeepingSourceWhenParseFail  |  bool  |  否  |  false  |  false  |  当解析失败时，是否保留源字段。  |\n|  KeepingSourceWhenParseSucceed  |  bool  |  否  |  false  |  false  |  当解析成功时，是否保留源字段。  |\n|  RenamedSourceKey  |  string  |  否  |  空  |  key  |  当源字段被保留时，用于存储源字段的字段名。若不填，默认不改名。  |\n\n### 时间解析原生处理插件\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **默认值**  |  **示例**  |  **说明**  |\n| --- | --- | --- | --- | --- | --- |\n|  Type  |  string  |  是  |  /  |  processor\\_parse\\_timestamp\\_native  |  插件类型。固定为processor\\_parse\\_timestamp\\_native。  |\n|  SourceKey  |  string  |  是  |  /  |  content  |  源字段名。  |\n|  SourceFormat  |  string  |  是  |  /  |  %Y/%m/%d %H:%M:%S  |  日志时间格式。更多信息，请参见[时间格式](~~28980~~)。  |\n|  SourceTimezone  |  string  |  否  |  空  |  GMT+08:00  |  日志时间所属时区。格式为GMT+HH:MM（东区）或GMT-HH:MM（西区）。  |\n\n### 过滤原生处理插件\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **示例**  |  **默认值**  |  **说明**  |\n| --- | --- | --- | --- | --- | --- |\n|  Type  |  string  |  是  |  processor\\_filter\\_regex\\_native  |  /  |  插件类型。固定为processor\\_filter\\_regex\\_native。  |\n|  Include  |  map  |  是  |  /  |  /  |  日志字段白名单，其中key为字段名，value为正则表达式，表示如果当前事件要被采集，则key指定的字段内容所需要满足的条件。多个条件之间为“且”的关系，仅当所有条件均满足时，该条日志才会被采集。  |\n\n### 脱敏原生处理插件\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **默认值**  |  **示例**  |  **说明**  |\n| --- | --- | --- | --- | --- | --- |\n|  Type  |  string  |  是  |  /  |  processor\\_desensitize\\_native  |  插件类型。固定为processor\\_desensitize\\_native。  |\n|  SourceKey  |  string  |  是  |  /  |  content  |  源字段名。  |\n|  Method  |  string  |  是  |  /  |  const  |  脱敏方式。可选值包括：  const：用常量替换敏感内容。        md5：用敏感内容的MD5值替换相应内容。       |\n|  ReplacingString  |  string  |  否，当Method取值为const时必选  |  /  |  \\*\\*\\*\\*\\*\\*  |  用于替换敏感内容的常量字符串。  |\n|  ContentPatternBeforeReplacedString  |  string  |  是  |  /  |  'password:'  |  敏感内容的前缀正则表达式。  |\n|  ReplacedContentPattern  |  string  |  是  |  /  |  \\[^'\\]\\*  |  敏感内容的正则表达式。  |\n|  ReplacingAll  |  bool  |  否  |  true  |  true  |  是否替换所有的匹配的敏感内容。  |\n\n## 扩展处理插件\n\n### 提取字段\n\n#### 正则模式\n\n|  **参数**  | **类型**     |  **是否必填**  |  **默认值**  |  **示例**  | **说明**                                                                          |\n| --- |------------| --- | --- | --- |---------------------------------------------------------------------------------|\n|  Type  | string     |  是  |  /  |  processor\\_regex  | 插件类型。固定为processor\\_regex。                                                       |\n|  SourceKey  | string     |  是  |  /  |  content  | 源字段名。                                                                           |\n|  Regex  | string     |  是  |  /  |  (\\d+-\\d+-\\d+)\\s+(.\\*)  | 正则表达式。您需要使用半角圆括号`()`标注待提取的字段。                                                   |\n|  Keys  | \\[string\\] |  是  |  /  |  \\[\"ip\", \"time\", \"method\"\\]  | 为提取的内容指定字段名，例如\\[\"ip\", \"time\", \"method\"\\]。                                       |\n|  NoKeyError  | boolean    |  否  |  false  |  false  | 原始日志中无您所指定的原始字段时，系统是否报错。 <ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul> |\n|  NoMatchError  | boolean       |  否  |  false  |  false  |   您所指定的正则表达式与原始字段的值不匹配时，系统是否报错。<ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul>        |\n|  KeepSource  | boolean     |  否  |  false  |  false  | 解析后的日志中是否保留原始字段。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul>                                                 |\n|  FullMatch  | boolean       |  否  |  true  |  true  |  是否完全匹配才被提取。<ul><li> true（默认值）：您在Keys参数中设置的所有字段通过Regex参数中的正则表达式都能与原始字段的值匹配，字段值才会被提取。</li>  <li> false：部分字段匹配也会进行提取。</li></ul>        |\n|  KeepSourceIfParseError  | boolean     |  true  |  true  |  false  | 解析日志失败时，解析后的日志中是否将保留原始字段。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul>                                                 |\n\n#### 标定模式\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**            | **说明**                                                                                                                       |\n| --- |------------|-----------|---------|-------------------|------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_anchor | 插件类型。固定为processor\\_anchor。                                                                                                   |\n|  SourceKey  | Anchor数组     | 是         | /       | content           | 源字段名。                                                                                                                        |\n|  Anchors  | string     | 是         | /       |                   | 标定项列表。                                                                                                |\n|  Start  | String | 是         | 空       | time              | 起始关键字。如果为空，表示匹配字符串开头。                                                                                      |\n|  Stop  | String    | 是         | 空       | \\t                | 结束关键字。如果为空，表示匹配字符串结尾。                                              |\n|  FieldName  | String       | 是         | 空       | time              | 为提取的内容指定字段名。                                          |\n|  FieldType  | String     | 是         | 空       | string            | 字段的类型，取值为string或json。                                                       |\n|  ExpondJson  | boolean       | 否         | false   | false             | 是否进行JSON展开。<ul><li>true：展开。</li>  <li> false（默认值）：不展开。</li></ul> |\n|  ExpondConnecter  | String     | 否         | _       | _                 | JSON展开的连接符。默认值为下划线（_）。                                             |\n| MaxExpondDepth  | Int      | 否        | 0       | 0                 | JSON展开最大深度。默认值为0，表示无限制。                                                                                                                                               |\n| NoAnchorError   | Boolean  | 否     | false   | false             | 查找不到标定项时，系统是否报错。{#3f246206721du} <ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul>        |\n| NoKeyError      | Boolean  | 否    | false   | false             | 原始日志中无您所指定的原始字段时，系统是否报错。<ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul> |\n| KeepSource      | Boolean  | 否    | false| false                  | 解析后的日志中是否保留原始字段。<ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul> |\n\n#### CSV模式\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值**            | **示例**                      | **说明**                                                                                                                                                                                                                                                                    |\n| --- |------------|-----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /                                                                                                                                                                                                                                                                                                               | processor\\_csv              | 插件类型。固定为processor\\_csv。                                                                                                                                                                                                                                                   |\n| SourceKey        | String   | 是      | /                                                                                                                                                                                                                                                                                                               | csv                         | 原始字段名。                                                                                                                                                                                                                                                                    |\n| SplitKeys        | String数组 | 是    | /                                                                                                                                                                                                                                                                                                               | \\[\"date\", \"ip\", \"content\"\\] | 为提取的内容指定字段名，例如\\[\"date\", \"ip\", \"content\"\\]。 **重要** 待分割的字段数量小于SplitKeys参数中的字段数量时，SplitKeys参数中多余的字段将被忽略。                                                                                                                                                                     |\n| PreserveOthers   | Boolean  | 否        | false| false                       | 待分割的字段数量大于SplitKeys参数中的字段数量时，是否保留超出部分。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul>                                                                                                                                                                              |\n| ExpandOthers     | Boolean  | 否        | false| false                       | 是否解析超出部分。<ul><li> true：解析。您可以通过ExpandOthers参数解析超出部分，然后通过ExpandKeyPrefix参数指定超过部分字段的命名前缀。   *</li>  <li> false（默认值）：不解析。 如果您设置PreserveOthers为true且设置ExpandOthers为false，则超出部分的内容将被存储到_decode_preserve_字段中。</li></ul> **说明** 如果多余的字段内容中存在不规范内容时，您需要根据CSV格式对其进行规范化处理后，再进行存储操作。 |\n| ExpandKeyPrefix  | String   | 否        | |                             | 超出部分的字段命名前缀。例如配置为<kbd data-tag=\"userinput\" id=\"userinput-y8h-hmx-qir\" class=\"userinput\">expand_</kbd>，则字段名为expand_1、expand_2。                                                                                                                                             |\n| TrimLeadingSpace | Boolean  | 否        |  false| false                       | 是否忽略字段值中的前置空格。<ul><li>true：忽略。</li>  <li>false（默认值）：不忽略。</li></ul>                                                                                                                                                                                                        |\n| SplitSep         | String   | 否        | ,| ,                           | 分隔符。默认值为半角逗号（,）。                                                                                                                                                                                                                                                          |\n| KeepSource       | Boolean  | 否        | false| false                       |解析后的日志中是否保留原始字段。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul>                                                                                                                                                                                                                |\n| NoKeyError       | Boolean  | 否        |  false| false                       |原始日志中无您指定的原始字段时，系统是否报错。 <ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul>                                                                                                                                                                                                    |\n\n#### 单字符分隔符模式\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**                                    | **说明**                                    |\n| --- |------------|-----------|---------|-------------------------------------------|-------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_split\\_char                    | 插件类型。固定为processor\\_split\\_char。           |\n| SourceKey      | String   | 是     |         |                                           | 原始字段名。                                    |\n| SplitSep       | String   | 是        |         |                                           | 分隔符。必须为单字符，可设置为不可见字符，例如\\\\u0001。           |\n| SplitKeys      | String数组 | 是        |         |\\[\"ip\", \"time\", \"method\"\\] | 为提取的内容指定字段名，例如\\[\"ip\", \"time\", \"method\"\\]。 |\n| PreserveOthers | Boolean  | 否        | false   | false                       |待分割的字段数量大于SplitKeys参数中的字段数量时，是否保留超出部分。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul> |\n| QuoteFlag      | Boolean  | 否        | false   | false                       |是否使用引用符。<ul><li> true：使用。 </li>  <li>  false（默认值）：不使用。 </li></ul>                              |\n| Quote          | String   | 否        | /       | \\\\u0001                       |引用符。必须为单字符，可以为不可见字符，例如\\\\u0001。仅当QuoteFlag配置为true时有效。                                                  |\n| NoKeyError     | Boolean  | 否        | false   | false                       |原始日志中无您指定的原始字段时，系统是否报错。<ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul>               |\n| NoMatchError   | Boolean  | 否        | false   | false                       |您所指定的分隔符与日志中的分隔符不匹配时，系统是否报错。<ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul>           |\n| KeepSource     | Boolean  | 否        | false   | false                       |被解析后的日志中是否保留原始字段。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul>                      |\n\n#### 多字符分隔符模式\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**                                    | **说明**                                    |\n| --- |------------|-----------|---------|-------------------------------------------|-------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_split\\_string                    | 插件类型。固定为processor\\_split\\_string。           |\n| SourceKey      | String   | 是     |         |                                           | 原始字段名。                                    |\n| SplitSep       | String   | 是        |         |                                           | 分隔符。必须为单字符，可设置为不可见字符，例如\\\\u0001\\\\u0002。           |\n| SplitKeys      | String数组 | 是        |         |\\[\"key1\",\"key2\"\\] | 为提取的内容指定字段名，例如\\[\"key1\",\"key2\"\\]。**说明** 待分割的字段数量小于SplitKeys参数中的字段数量时，SplitKeys参数中多余的字段将被忽略。 |\n| PreserveOthers | Boolean  | 否        | false   | false                       |待分割的字段数量大于SplitKeys参数中的字段数量时，是否保留超出部分。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul> |\n| ExpandOthers      | Boolean  | 否        | false   | false                       |是否使用引用符。<ul><li> true：使用。 </li>  <li>  false（默认值）：不使用。 </li></ul>                            |\n| ExpandKeyPrefix          | String   | 否        | /       | expand_                       |超出部分的命名前缀。例如配置为expand_，则字段名为expand_1、expand_2。                                               |\n| NoKeyError     | Boolean  | 否        | false   | false                       |原始日志中无您指定的原始字段时，系统是否报错。<ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul>             |\n| NoMatchError   | Boolean  | 否        | false   | false                       |您所指定的分隔符与日志中的分隔符不匹配时，系统是否报错。<ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul>         |\n| KeepSource     | Boolean  | 否        | false   | false                       |被解析后的日志中是否保留原始字段。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul>                    |\n\n#### 键值对模式\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值**                                                                                                                          | **示例**                       | **说明**                                |\n| --- |------------|-----------|----------------------------------------------------------------------------------------------------------------------------------|------------------------------|---------------------------------------|\n|  Type  | string     | 是         | /                                                                                                                                | processor\\_split\\_key\\_value | 插件类型。固定为processor\\_split\\_key\\_value。 |\n| SourceKey                    | string  | 是       |                                                                                                                                  |                              | 原始字段名。                                |\n| Delimiter                    | string  | 否        | \\t                                                                                                                               | \\t                           | 键值对之间的分隔符，默认值为制表符`\\t`。                |\n| Separator                    | string  | 否        | :                                                                                                                                | :                            | 单个键值对中键与值之间的分隔符，默认值为半角冒号（:）。          |\n| KeepSource                   | Boolean | 否        | false                                                                                                                            | false                       |解析后的日志中是否保留原始字段。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul>                                                                                   |\n| ErrIfSourceKeyNotFound       | Boolean | 否        | true                                                                                                                             | false                       |原始日志中无您所指定的原始字段时，系统是否报错。<ul><li> true（默认值）：报错。</li>  <li> false：不报错。</li></ul>                                                                          |\n| DiscardWhenSeparatorNotFound | Boolean | 否        | false   | false                       |无匹配的分隔符时是否丢弃该键值对。<ul><li> true：丢弃。 </li>  <li>  false（默认值）：不丢弃。 </li></ul>                                                       |\n| ErrIfSeparatorNotFound       | Boolean | 否        | true   | false                       |当指定的分隔符不存在时，系统是否报错。<ul><li> true（默认值）：报错。</li>  <li> false：不报错。</li></ul>                                                        |\n| ErrIfKeyIsEmpty              | Boolean | 否        | true   | false                       |当分隔后的键为空时，系统是否报错。<ul><li> true（默认值）：报错。</li>  <li> false：不报错。</li></ul>                                                          |\n| Quote                        | String  | 否        |    |                        |引用符，当设定后若值被引用符包含，就提取引用符内的值，支持多字符。默认不开启引用符功能。 **重要** * 如果引用符为双引号（\"\"），需要添加转义符，即添加反斜线（\\\\）。当引用符内包含反斜线（\\\\）与引用符连用时，该反斜线（\\\\）将作为值的一部分输出。 |\n\n#### Grok模式\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**          | **说明**                                                                                                                                                                                                                                |\n| --- |------------|-----------|---------|-----------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_grok | 插件类型。固定为processor\\_grok。                                                                                                                                                                                                              |\n| CustomPatternDir    | String数组 | 否        |         |                 | 自定义的Grok模式文件所在的目录。processor_grok插件会读取目录内的所有文件。 未添加该参数时，表示不导入自定义的Grok模式文件。 **重要** 更新自定义的Grok模式文件后，需重启Logtail才能生效。                                                                                                                      |\n| CustomPatterns      | Map      | 否        |         |                 | 自定义的GROK模式，key为规则名，value为Grok表达式。 默认支持的表达式，请参见[processor_grok](https://github.com/alibaba/ilogtail/blob/main/plugins/processor/grok/processor_grok_default_patterns.go)。如果链接中无您需要的表达式，请在Match中输入自定义的Grok表达式。 未添加该参数时，表示不使用自定义的GROK模式。 |\n| SourceKey           | String   | 否        | content | content         | 原始字段名。默认值为content字段。                                                                                                                                                                                                                  |\n| Match               | String数组 | 是        |         |                 | Grok表达式数组。processor_grok插件会根据此处配置的表达式列表从上至下依次对日志进行匹配，并返回第一条匹配成功的提取结果。 **说明** 配置多条Grok表达式，可能影响性能。建议不超过5条。                                                                                                                              |\n| TimeoutMilliSeconds | Long     | 否        |         | 0               | 通过Grok表达式提取字段的最大尝试时间，单位：毫秒。 未添加该参数或设置为0时，表示不会超时。                                                                                                                                                                                      |\n| IgnoreParseFailure  | Boolean  | 否        | true    | true            | 是否忽略解析失败的日志。<ul><li> true（默认值）：忽略。 </li>  <li>false：删除。</li></ul>                                                                                                                                                                     |\n| KeepSource          | Boolean  | 否        | true    | true            | 是否在解析成功后保留原始字段。<ul><li> true（默认值）：保留。</li>  <li> false：丢弃。</li></ul>                                                                                                                                                                  |\n| NoKeyError          | Boolean  | 否        | false   | true            | 原始日志中无您所指定的原始字段时，系统是否报错。<ul><li> true：报错。 </li>  <li> false（默认值）：不报错。 </li></ul>                                                                                                                                                      |\n| NoMatchError        | Boolean  | 否        | true    | true            | Match参数中设置的表达式全部与日志不匹配时，系统是否报错。<ul><li> true（默认值）：报错。 </li>  <li> false：不报错。 </li></ul>                                                                                                                                               |\n| TimeoutError        | Boolean  | 否        | true    | true            | 匹配超时，系统是否报错。<ul><li> true（默认值）：报错。 </li>  <li> false：不报错。 </li></ul>                                                                                                                                                                  |\n\n### 添加字段\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**                                                                                               | **说明**                                                                                               |\n| --- |------------|-----------|---------|------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_add\\_fields                                                                               | 插件类型。固定为processor\\_add\\_fields。                                                                      |\n| Fields        | Map     | 是        | |                                                                                                      | 待添加的字段名和字段值。键值对格式，支持添加多个。                                                                            |\n| IgnoreIfExist | Boolean | 否        |false |false | 存在相同的字段名时，是否忽略重复的字段。<ul><li> true：忽略。</li>  <li>  false（默认值）：不忽略。 </li></ul> |\n\n### 丢弃字段\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**           | **说明**                   |\n| --- |------------|-----------|---------|------------------|--------------------------|\n|  Type  | string     | 是         | /       | processor\\_drop  | 插件类型。固定为processor\\_drop。 |\n| DropKeys | String数组 | 是        | | | 指定待丢弃的字段，支持配置多个。         |\n\n### 重命名字段\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**            | **说明**                                                                                                 |\n| --- |------------|-----------|---------|-------------------|--------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_rename | 插件类型。固定为processor\\_rename。                                                                             |\n| NoKeyError | Boolean  | 否        |false | false             | 日志中无您所指定的原始字段时，系统是否报错。<ul><li>true：报错。 </li>  <li>false（默认值）：不报错。  </li></ul> |\n| SourceKeys | String数组 | 是        | |                   | 待重命名的原始字段。                                                                                             |\n| DestKeys | String数组 | 是        | | | 重命名后的字段。                                                                                               |\n\n### 打包字段\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**                                                                                                   | **说明**                                                                                                   |\n| --- |------------|-----------|---------|----------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_packjson                                                                                      | 插件类型。固定为processor\\_packjson。                                                                             |\n| SourceKeys        | String数组 | 是        | |                                                                                                          | 待打包的原始字段。                                                                                                |\n| DestKey           | String   | 否        | |                                                                                                          | 打包后的字段。                                                                                                  |\n| KeepSource        | Boolean  | 否        |true | true               | 解析后的日志中是否保留原始字段。<ul><li> true（默认值）：保留。</li>  <li> false：丢弃。</li></ul>         |\n| AlarmIfIncomplete | Boolean  | 否        |true |true | 原始日志中无您所指定的原始字段时，系统是否报错。<ul><li> true（默认值）：保留。</li>  <li> false：丢弃。</li></ul> |\n\n### 展开JSON字段\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**          | **说明**                                                                                                                                    |\n| --- |------------|-----------|---------|-----------------|-------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_json | 插件类型。固定为processor\\_json。                                                                                                                  |\n| SourceKey              | String  | 是        |         |                 | 待展开的原始字段名。                                                                                                                                |\n| NoKeyError             | Boolean | 否        | true    | true            | 原始日志中无您所指定的原始字段时，系统是否报错。<ul><li>true（默认值）：报错。 </li>  <li>false：不报错。  </li></ul>                                                           |\n| ExpandDepth            | Int     | 否        | 0       | 1               | JSON展开的深度。默认值为0，表示不限制。1表示当前层级，以此类推。                                                                                                       |\n| ExpandConnector        | String  | 否        | _       | _               | JSON展开时的连接符，默认值为下划线（_）。                                                                                                                   |\n| Prefix                 | String  | 否        |         |                 | JSON展开时，对字段名附加的前缀。                                                                                                                        |\n| KeepSource             | Boolean | 否        | true    | true            | 被解析后的日志中是否保留原始字段。<ul><li> true（默认值）：保留。</li>  <li> false：丢弃。</li></ul>                                                                    |\n| UseSourceKeyAsPrefix   | Boolean | 否        |         |                 | 是否将原始字段名作为所有JSON展开字段名的前缀。                                                                                                                 |\n| KeepSourceIfParseError | Boolean | 否        | true    | true            | 解析日志失败时，是否保留原始日志。<ul><li> true（默认值）：保留。</li>  <li> false：丢弃。</li></ul>                                                                    |\n| ExpandArray            | Boolean | 否        | false   | false           | 是否展开数组类型。Logtail 1.8.0及以上版本支持该参数。<ul><li> false（默认值）：不展开。 </li>  <li>  true：展开。例如`{\"k\":[\"1\",\"2\"]}`展开为`{\"k[0]\":\"1\",\"k[1]\":\"2\"}`。</li></ul> |\n\n### 过滤日志\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**                                                                | **说明**                                                                |\n| --- |------------|-----------|---------|-----------------------------------------------------------------------|-----------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_filter\\_regex                                              | 插件类型。固定为processor\\_filter\\_regex。                                     |\n| Include | JSON Object | 否        | |                                                                       | Key为日志字段，Value为该字段值匹配的正则表达式。键值对之间为与关系。如果日志字段的值符合对应的正则表达式，则采集该日志。      |\n| Exclude | JSON Object | 否        | | | Key为日志字段，Value为该字段值匹配的正则表达式。键值对之间为或关系。如果日志中任意一个字段的值符合对应的正则表达式，则丢弃该日志。 |\n\n### 提取日志时间\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值**                                                                                                | **示例**            | **说明**                                                                                         |\n| --- |------------|-----------|--------------------------------------------------------------------------------------------------------|-------------------|------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /                                                                                                      | processor\\_gotime | 插件类型。固定为processor\\_gotime。                                                                     |\n| SourceKey      | String  | 是        |                                                                                                        |                   | 原始字段名。                                                                                         |\n| SourceFormat   | String  | 是        |                                                                                                        |                   | 原始时间的格式。                                                                                       |\n| SourceLocation | Int     | 是        |                                                                                                        |                   | 原始时间的时区。参数值为空时，表示Logtail所在主机或容器的时区。                                                            |\n| DestKey        | String  | 是        |                                                                                                        |                   | 解析后的目标字段。                                                                                      |\n| DestFormat     | String  | 是        |                                                                                                        |                   | 解析后的时间格式。                                                                                      |\n| DestLocation   | Int     | 否        |                                                                                                        |                   | 解析后的时区。参数值为空时，表示本机时区。                                                                          |\n| SetTime        | Boolean | 否        | true                                                                                                   | true              | 是否将解析后的时间设置为日志时间。<ul><li>true（默认值）：是。 </li>  <li> false：否。</li></ul>                           |\n| KeepSource     | Boolean | 否        | true                                                                                                   | true              | 被解析后的日志中是否保留原始字段。<ul><li> true（默认值）：保留。</li>  <li> false：不保留。</li></ul>                        |\n| NoKeyError     | Boolean | 否        | true                                                                                                   | true              | 原始日志中无您所指定的原始字段时，系统是否报错。<ul><li> true（默认值）：报错。 </li>  <li>  false：不报错。</li></ul>               |\n| AlarmIfFail    | Boolean | 否        | true                                                                                                   | true              | 提取日志时间失败，系统是否报错。<ul><li> true（默认值）：报错。 </li>  <li>  false：不报错。</li></ul> |\n\n### 转换IP地址\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**                                               | **说明**                                                                                            |\n| --- |------------|-----------|---------|------------------------------------------------------|---------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_geoip                                     | 插件类型。固定为processor\\_geoip。                                                                         |\n| SourceKey    | String  | 是        |         |                                                      | 待进行IP地址转换的原始字段名。                                                                                  |\n| DBPath       | String  | 是        |         | /user/data/GeoLite2-City_20180102/GeoLite2-City.mmdb | GeoIP数据库的全路径。例如/user/data/GeoLite2-City_20180102/GeoLite2-City.mmdb。                              |\n| NoKeyError   | Boolean | 否        | false   | false                                                | 原始日志中无您所指定的原始字段名时，系统是否报错。<ul><li> true：报错。 </li>  <li>  false（默认值）：不报错。</li></ul>                 |\n| NoMatchError | Boolean | 否        | true    | true                                                 | IP地址无效或在数据库中未匹配到该IP地址时，系统是否报错。<ul><li> true（默认值）：报错。 </li>  <li>  false：不报错。</li></ul>            |\n| KeepSource   | Boolean | 否        | true    | true                                                 | 解析后的日志中，是否保留原始字段。<ul><li> true（默认值）：保留。  </li>  <li> false：不保留。 </li></ul> |\n| Language     | String  | 否        | zh-CN        | zh-CN                                                     | 语言属性。默认值为zh-CN。  **重要** 请确保您的GeoIP数据库中包含对应的语言。                                                    |\n\n### 数据脱敏\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值**                                                        | **示例**                                                       | **说明**                                                                                                                        |\n| --- |------------|-----------|----------------------------------------------------------------|--------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /                                                              | processor\\_desensitize                                       | 插件类型。固定为processor\\_desensitize。                                                                                               |\n| **SourceKey**     | String | 是        |                                                                |                                                              | 日志字段名称。                                                                                                                       |\n| **Method**        | String | 是        |                                                                | const                                                        | 脱敏方式。可选值：<ul><li>  **const** ：将敏感内容替换为字符串。您可以通过 **ReplaceString** 参数指定目标字符串。 </li>  <li> **md5** ：将敏感内容替换为对应的MD5值。 </li></ul> |\n| **Match**         | String | 否        | full                                                               | full                                                         | 指定提取敏感内容的方式。可选值：<ul><li> **full（默认值）** ：全部提取，即替换目标字段值中的所有内容。 </li>  <li> **regex** ：使用正则表达式提取敏感内容。 </li></ul>                 |\n| **ReplaceString** | String | 否        | |                                                              | 用于替换敏感内容的字符串。 设置 **Method** 为 **const** 时，必填。                                                                                 |\n| **RegexBegin**    | String | 否        | |                                                              | 匹配敏感内容前缀的正则表达式。 设置 **Match** 为 **regex** 时，必填。                                                                                |\n| **RegexContent**  | String | 否        | | | 匹配敏感内容的正则表达式。设置 **Match** 为 **regex** 时，必填。                                                                  |\n\n### 字段值映射处理\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**               | **说明**                                                                                                            |\n| --- |------------|-----------|---------|----------------------|-------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_dict\\_map | 插件类型。固定为processor\\_dict\\_map。                                                                                     |\n| SourceKey     | String  | 是        |         |                      | 原始字段名。                                                                                                            |\n| MapDict       | Map     | 否        |         |                      | 映射字典。映射字典较小时，可直接通过此参数完成设置。不需要提供本地的CSV字典文件。 **重要** 当您设置了DictFilePath参数后，MapDict参数中的配置不生效。                          |\n| DictFilePath  | String  | 否        |         |                      | CSV格式的字典文件。该CSV文件的分隔符为半角逗号（,），字段引用表示为半角引号（\"）。                                                                     |\n| DestKey       | String  | 否        |         |                      | 映射后的字段名。                                                                                                          |\n| HandleMissing | Boolean | 否        | false   | false                | 当原始日志中缺失目标字段时，系统是否处理。<ul><li> true：处理。 系统将按照Missing参数中的值进行填充。 </li>  <li> false（默认值）：不处理。  </li></ul>             |\n| Missing       | String  | 否        | Unknown | Unknown              | 处理原始日志中缺失的目标字段时，设置对应的填充值。默认值为`Unknown`。 当配置HandleMissing为true时，该参数配置生效。                                           |\n| MaxDictSize   | Int     | 否        | 1000    | 1000                 | 映射字典的最大大小。默认值为1000，即最多可存储1000条映射规则。 如果要限制插件对服务器内存的占用，可调小该值。                                                       |\n| Mode          | String  | 否        | overwrite        | overwrite                     | 当映射后的字段在原始日志中已存在时的处理方式。<ul><li> overwrite（默认值）：覆写原字段。 </li>  <li>  fill：不覆写原字段。</li></ul>  |\n\n### 字段加密\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值**                          | **示例**             | **说明**                                                                                                                           |\n| --- |------------|-----------|----------------------------------|--------------------|----------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /                                | processor\\_encrypt | 插件类型。固定为processor\\_encrypt。                                                                                                      |\n| SourceKey              | String数组 | 是        |                                  |                    | 原始字段名。                                                                                                                           |\n| EncryptionParameters   | Object   | 是        |                                  |                    | 密钥相关配置。                                                                                                                          |\n| Key                    | String   | 是        |                                  |                    | 设置密钥，需为64个十六进制字符。                                                                                                                |\n| IV                     | String   | 否        | 00000000000000000000000000000000 |                    | 设置加密的初始向量，需为32个十六进制字符，默认值为`00000000000000000000000000000000`。                                                                    |\n| KeyFilePath            | Boolean  | 否        |                                  |                    | 读取加密参数的文件路径。未配置时按照 **Logtail配置-输入配置-文件路径** 读取。                                                                                   |\n| KeepSourceValueIfError | String   | 否        | false                            | false                   | 加密失败，系统是否保留原始字段的值。<ul><li> true：保留。  </li>  <li>false（默认值）：不保留。</li></ul>加密失败后，字段值将被替换为`ENCRYPT_ERROR`。 |\n\n### 字符串替换\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值**                          | **示例**                     | **说明**                                                                                                                                                                                                                                                                                                                                             |\n| --- |------------|-----------|----------------------------------|----------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /                                | processor\\_string\\_replace | 插件类型。固定为processor\\_string\\_replace。                                                                                                                                                                                                                                                                                                                |\n| SourceKey     | String | 是        | |                            | 原始字段名。                                                                                                                                                                                                                                                                                                                                             |\n| Method       | String | 是        | |                            | 指定匹配方式。可选值：<ul><li>  `const`：使用字符串替换。 </li>  <li> `regex`：使用正则表达式替换。</li>  <li> `unquote`：去除转义符。</li></ul>                                                                                                                                      |\n| Match        | String | 否        | |                            | 输入匹配内容。<ul><li> 设置`Method`为`const`时，输入与待替换内容匹配的字符串。 当多个字符串都匹配时，全部替换。  </li>  <li> 设置`Method`为`regex`时，输入与待替换内容匹配的正则表达式。 当多个字符串都匹配时，全部替换。您也可以用正则分组方式匹配指定的分组。  </li>  <li> 设置`Method`为`unquote`时，无需配置此参数。 </li></ul> |\n| ReplaceString | String | 否        | |                            | 用于替换的字符串，默认值为\"\"。<ul><li> 设置`Method`为`const`时，输入用于替换原内容的字符串。 </li>  <li> 设置`Method`为`regex`时，输入用于替换原内容的字符串，支持根据正则分组进行替换。 </li>  <li>设置`Method`为`unquote`时，无需配置此参数。</li></ul>                                                                    |\n| DestKey      | String | 否        | | | 为替换后的内容指定新字段，默认不新增字段。                                                                                                                                                                                                                                                                                                                              |\n\n### 数据编码与解码\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**                      | **说明**                                                                              |\n| --- |------------|-----------|---------|-----------------------------|-------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_base64\\_encoding | 插件类型。固定为processor\\_base64\\_encoding。                                                |\n| SourceKey  | String  | 是        |         |                             | 原始字段名。                                                                              |\n| NewKey     | String  | 是        |         |                             | 编码后的结果字段名。                                                                          |\n| NoKeyError | Boolean | 否        | false   | false                       | 原始日志中无您所指定的原始字段时，系统是否报错。<ul><li> true：报错。  </li>  <li> false（默认值）：不报错。 </li>  </ul> |\n\n### Log转为Metric\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值**                                                                                                                                                                                                                                                                              | **示例**                               | **说明**                                                                                                                                                                                                              |\n| --- |------------|-----------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /                                                                                                                                                                                                                                                                                    | processor\\_log\\_to\\_sls\\_metric      | 插件类型。固定为processor\\_log\\_to\\_sls\\_metric。                                                                                                                                                                            |\n| MetricTimeKey      | String     | 否        |                                                                                                                                                                                                                                                                                      |                                      | 指定日志中的时间字段，该字段将与时序数据中的`__time_nano__` 字段映射。默认提取日志中`__time__`字段的值。 确保指定的字段是合法的、符合格式的时间戳。目前支持以second（10位长度）、millisecond（13位长度）、microsecond（16位长度）、nanosecond（19位长度）为单位的Unix时间戳。                                       |\n| MetricLabelKeys    | \\[\\]String | 是        | |                                      | 指定`__labels__`字段的Key列表，Key需遵循正则表达式` ^[a-zA-Z_][a-zA-Z0-9_]*$`。Value不能包含竖线（\\|）和 `#$#`。更多信息，请参见[时序数据（Metric）](~~171773~~)。 不支持在MetricLabelKeys参数中添加`__labels__`字段。如果原始字段中存在 `__labels__ `字段，该值将被追加到新的`__labels__`字段中。 |\n| MetricValues       | Map        | 是        | |                                      | 用于指定Metric名称和Metric值。 Metric名称对应`__name__`字段，需遵循正则表达式`^[a-zA-Z_:][a-zA-Z0-9_:]*$`。 Metric值对应`__value__`字段，需为Double类型。  更多信息，请参见[时序数据（Metric）](~~171773~~) 。                                                         |\n| CustomMetricLabels | Map        | 否        | |                                      | 自定义的`__labels__`字段， Key需遵循正则表达式 `^[a-zA-Z_][a-zA-Z0-9_]*$`，Value不能包含竖线（\\|）和 `#$#`。更多信息，请参见[时序数据（Metric）](~~171773~~)。                                                                              |\n| IgnoreError        | Boolean    | 否        | | | 当没有匹配日志时是否输出Error日志。默认值为false，表示不输出。                                                                                                                                                                                |\n\n### Log转为Trace\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值**                                                                                                                                         | **示例**                                                                                                                                          | **说明**                                                                                                                                          |\n| --- |------------|-----------|-------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /                                                                                                                                               | processor\\_otel\\_trace                                                                                                                          | 插件类型。固定为processor\\_otel\\_trace。                                                                                                                 |\n| SourceKey              | String  | 是        |                                                                                                                                                 |                                                                                                                                                 | 原始字段名。                                                                                                                                          |\n| Format                 | String  | 是        |                                                                                                                                                 | json                                                                                                                                            | 转换后的格式，可选值：protobuf、json、protojson。                                                                                                             |\n| NoKeyError             | Boolean | 否        | false                                                                                                                                           | true                                                                                                                                            | 当日志中没有对应的原始字段时，是否报错。默认值为false。                                                                                                                  |\n| TraceIDNeedDecode      | Boolean | 否        | |                                                                                                                                                 | 是否对TraceID进行Base64解码，默认值为false。 设置Format为protojson时，如果TraceID已进行过Base64编码，则需要设置TraceIDNeedDecode为true，否则将导致转换失败。                |\n| SpanIDNeedDecode       | Boolean | 否        | |                                                                                                                                                 | 是否对SpanID进行Base64解码。默认值为false。设置Format为protojson时，如果SpanID已进行过Base64编码，则需要设置SpanIDNeedDecode为true，否则将导致转换失败。                   |\n| ParentSpanIDNeedDecode | Boolean | 否        | | | 是否对ParentSpanID进行Base64解码。默认值为false。 设置Format为protojson时，如果ParentSpanID已进行过Base64编码，则需要设置ParentSpanIDNeedDecode为true，否则将导致转换失败。 |\n\n\n\n## 输出插件\n\n### SLS输出插件\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **默认值**  |  **示例**  |  **说明**  |\n| --- | --- | --- | --- | --- | --- |\n|  Type  |  string  |  是  |  /  |  flusher\\_sls  |  插件类型。固定为flusher\\_sls。  |\n|  Logstore  |  stirng  |  是  |  /  |  test-logstore  |  LogStrore名称。  |"},"DeleteConfig":{"summary":"删除指定的Logtail配置。","path":"/configs/{configName}","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete","abilityTreeCode":"9090","abilityTreeNodes":["FEATUREslsYP6SBU"]},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"configName","in":"path","schema":{"description":"Logtail配置名称。","type":"string","required":true,"example":"logtail-config-sample"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"eventInfo":{"enable":false,"eventNames":[]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除Logtail配置","description":"### 接口说明\n\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 如果Logtail配置已经被应用到机器组，删除该配置，将无法采集到机器组数据。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。\n\n- 已获取Logtail采集配置名称。更多信息，请参见[ListConfig](~~29043~~)。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | ConfigNotExist| Config configname does not exist. | Logtail配置不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"DeleteLogtailPipelineConfig":{"summary":"删除Logtail流水线配置。","path":"/pipelineconfigs/{configName}","methods":["delete"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete","riskType":"none","chargeType":"free"},"parameters":[{"name":"project","in":"host","schema":{"title":"Project名称","description":"Project名称","type":"string","required":true,"example":"test-project"}},{"name":"configName","in":"path","schema":{"title":"Logtail流水线配置名称","description":"Logtail流水线配置名称","type":"string","required":true,"example":"test-config","pattern":"^[0-9a-zA-Z][0-9a-zA-Z-_]{0,126}[0-9a-zA-Z]$"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除Logtail流水线配置"},"UpdateConfig":{"summary":"修改指定的 Logtail 采集配置。","path":"/configs/{configName}","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","riskType":"high","chargeType":"free","abilityTreeCode":"9091","abilityTreeNodes":["FEATUREslsYP6SBU"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"configName","in":"path","schema":{"description":"Logtail配置的名称。","type":"string","required":true,"example":"test-sample"}},{"name":"body","in":"body","schema":{"description":"请求消息体。","required":false,"$ref":"#/components/schemas/LogtailConfig"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"eventInfo":{"enable":false,"eventNames":[]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新Logtail采集配置","description":"### 接口说明\n\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 更新已经被应用到机器组的Logtail配置，则对应机器组的Logtail配置会立即生效。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。\n- 已规划好Logtail采集配置。更多信息，请参见[Logtail配置](~~29058~~)。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ConfigNotExist| Config configName does not exist. | Logtail配置不存在。  |\n| 400  | InvalidParameter| invalid config resource json.  | 无效Logtail配置参数。  |\n|  400 |  BadRequest|  Config resource configname does not match with request.| Logtail配置名称不符合要求。 |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"UpdateLogtailPipelineConfig":{"summary":"更新Logtail流水线配置。","path":"/pipelineconfigs/{configName}","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","riskType":"none","chargeType":"free"},"parameters":[{"name":"project","in":"host","schema":{"title":"Project名称","description":"Project名称。","type":"string","required":true,"example":"test-project"}},{"name":"configName","in":"path","schema":{"title":"Logtail流水线配置名称","description":"Logtail流水线配置名称。","type":"string","required":true,"example":"test-config","pattern":"^[0-9a-zA-Z][0-9a-zA-Z-_]{0,126}[0-9a-zA-Z]$"}},{"name":"body","in":"body","style":"json","schema":{"title":"Logtail流水线配置内容","description":"Logtail流水线配置内容。","type":"object","properties":{"configName":{"title":"配置名称","description":"配置名称。\n\n><notice>需要与外层的configName参数保持一致。></notice>","type":"string","required":true,"example":"test-config","pattern":"^[0-9a-zA-Z][0-9a-zA-Z-_]{0,126}[0-9a-zA-Z]$"},"logSample":{"title":"日志样例","description":"日志样例。支持多条日志。","type":"string","required":false,"example":"2022-06-14 11:13:29.796 | DEBUG    | __main__:<module>:1 - hello world"},"global":{"title":"全局配置","description":"全局配置。","type":"object","required":false},"inputs":{"title":"输入插件列表","description":"输入插件列表。\n\n><notice>目前，只允许配置1个输入插件。></notice>","type":"array","items":{"title":"输入插件","description":"输入插件。\n\n> 文件输入插件参数请参见[文件插件](~~65064~~)，其余输入插件参数请参见[处理插件](~~64957~~)。","type":"object","required":false,"example":"{\n    \"Type\": \"input_file\",\n    \"FilePaths\": [\"/var/log/*.log\"]\n}"},"required":true,"minItems":1},"processors":{"title":"输入插件列表","description":"处理插件列表。\n\n> 可分为原生处理插件和扩展处理插件，详情请参见[处理插件](~~64957~~)。\n\n><notice>\n\n> - 原生插件仅可用于采集文本日志。\n> - 不支持同时添加原生插件和扩展插件。\n> - 使用原生插件时，须符合如下要求：\n>   - 第一个处理插件必须为正则解析插件、分隔符模式解析插件、JSON解析插件、NGINX模式解析插件、Apache模式解析插件或IIS模式解析插件。\n>   - 第一个处理插件之后仅允许存在1个时间解析处理插件，1个过滤插件和多个脱敏插件。></notice>","type":"array","items":{"title":"输入插件","description":"处理插件。\n\n>详情请参见[处理插件](~~64957~~)。","type":"object","required":false,"example":"{\n    \"Type\": \"processor_parse_json_native\",\n    \"SourceKey\": \"content\"\n}"},"required":false,"minItems":1},"aggregators":{"title":"聚合插件列表","description":"聚合插件列表。\n\n><notice>仅当使用了扩展处理插件时有效，且最多允许使用1个聚合插件。></notice>","type":"array","items":{"title":"聚合插件","description":"聚合插件。","type":"object","required":false},"required":false,"minItems":1},"flushers":{"title":"输出插件列表","description":"输出插件列表。\n\n><notice>目前，只允许存在1个SLS输出插件。></notice>","type":"array","items":{"title":"输出插件","description":"输出插件。","type":"object","required":false,"example":"{\n    \"Type\": \"flusher_sls\",\n    \"Logstore\": \"test\"\n}"},"required":true,"minItems":1}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新Logtail流水线配置","requestParamsDescription":"## 全局配置\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **默认值**  | **示例**                           | **说明**                                                                                                                                                                                                                                                                                                                                                                                                          |\n| --- | --- | --- | --- |----------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  TopicType  |  string  |  否  |  空  | filepath                         | Topic类型。可选值包括：<ul><li>filepath：从日志文件路径中提取信息作为Topic。仅当输入插件为input\\_file时有效。</li><li>machine\\_group\\_topic：将应用该配置的机器组Topic作为Topic。</li><li>custom：自定义Topic      更多信息，请参见[日志主题](~~60069~~)。</li></ul>                                                                                                                                                                                                               |\n|  TopicFormat  |  string  |  否，当TopicType取值为filepath或custom时必填  |  /  | /var/log/(.\\*).log               | Topic格式。                                                                                                                                                                                                                                                                                                                                                                                                        |\n|  EnableTimestampNanosecond  |  bool  |  否  |  false  | false                            | 是否启用时间纳秒精度。                                                                                                                                                                                                                                                                                                                                                                                                     |\n|  PipelineMetaTagKey  |  object  |  否  |  空  | {\"HOST_NAME\":\"\\_\\_hostname\\_\\_\"} | <notice>仅 LoongCollector 3.0.10 之后支持。</notice>   控制LoongCollector自身信息相关Tag。key为Tag参数名，value为Tag在日志中的字段名。当 value 为__default__时，取默认值。当 value 为空字符串时，表示删除 Tag。 可配置 Tag 如下：<ul><li>HOST_NAME：主机名。默认添加，默认值为\"\\_\\_hostname\\_\\_\"。</li><li>AGENT_TAG：用户自定义标识。默认添加，默认值为\"\\_\\_user_defined_id\\_\\_\"。</li><li>HOST_ID：主机 ID。默认不添加，默认值为\"\\_\\_host_id\\_\\_\"。</li><li>CLOUD_PROVIDER：默认不添加，默认值为\"\\_\\_cloud_provider\\_\\_\"。</li></ul> |\n\n\n## 输入插件\n\n### 文件输入插件\n\n|  **参数**  |  **类型**  |  **是否必填**  | **默认值** | **示例**                                       | **说明|\n| --- | --- | --- |---------|----------------------------------------------||\n|  Type  |  string  |  是  | /       | input\\_file                                  | 插件类型。固定为input\\_file。|\n|  FilePaths  |  \\[string\\]  |  是  | /       | \\[\"/var/log/\\*.log\"\\]                        | 待采集的日志文件路径列表（目前仅限1个路径）。路径中支持使用\\*和\\*\\*通配符，其中\\*\\*通配符仅能出现一次且仅限用于文件名前。                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n|  MaxDirSearchDepth  |  uint  |  否  | 0       | 0                                            | 文件路径中\\*\\*通配符匹配的最大目录深度。仅当日志路径中存在\\*\\*通配符时有效，取值范围为0～1000。|\n|  ExcludeFilePaths  |  \\[string\\]  |  否  | 空       | \\[\"/home/admin/\\*.log\"\\]                     | 文件路径黑名单。路径必须为绝对路径，支持使用\\*通配符|\n|  ExcludeFiles  |  \\[string\\]  |  否  | 空       | \\[\"app\\*.log\", \"password\"\\]                  | 文件名黑名单。支持使用\\*通配符|\n|  ExcludeDirs  |  \\[string\\]  |  否  | 空       | \\[\"/home/admin/dir1\", \"/home/admin/dir2\\*\"\\] | 目录黑名单。路径必须为绝对路径，支持使用\\*通配符|\n|  FileEncoding  |  string  |  否  | utf8    | utf8                                         | 文件编码格式。可选值包括utf8和gbk。|\n|  TailSizeKB  |  uint  |  否  | 1024    | 1024                                         | 配置首次生效时，匹配文件的起始采集位置距离文件结尾的大小。如果文件大小小于该值，则从头开始采集，取值范围为0～10485760KB。|\n|  Multiline  |  object  |  否  | 空       | /                                            | 多行聚合选项。|\n|  Multiline.Mode  |  string  |  否  | custom  | custom                                       | 多行聚合模式。可选值包括custom和JSON。|\n|  Multiline.StartPattern  |  string  |  当Multiline.Mode取值为custom时必填  | 空       | \\d+-\\d+-\\d+.\\*                               | 行首正则表达式。                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n|  EnableContainerDiscovery  |  bool  |  否  | false   | true                                         | 是否启用容器发现功能。仅当Logtail以Daemonset模式运行，且采集文件路径为容器内路径时有效。|\n|  ContainerFilters  |  object  |  否  | 空       | /                                            | 容器过滤选项。多个选项之间为“且”的关系，仅当EnableContainerDiscovery取值为true时有效。|\n|  ContainerFilters.K8sNamespaceRegex  |  string  |  否  | 空       | default                                      | 对于部署于K8s环境的容器，指定待采集容器所在Pod所属的命名空间条件。如果未添加该参数，则表示采集所有容器。支持正则匹配。|\n|  ContainerFilters.K8sPodRegex  |  string  |  否  | 空       | test-pod                                     | 对于部署于K8s环境的容器，指定待采集容器所在Pod的名称条件。如果未添加该参数，则表示采集所有容器。支持正则匹配。|\n|  ContainerFilters.IncludeK8sLabel  |  map  |  否  | 空       | /                                            | 对于部署于K8s环境的容器，指定待采集容器所在pod的标签条件。多个条件之间为“或”的关系，如果未添加该参数，则表示采集所有容器。支持正则匹配。 map中的key为Pod标签名，value为Pod标签的值，说明如下：<ul><li>如果map中的value为空，则pod标签中包含以key为键的pod都会被匹配；</li><li>如果map中的value不为空，则：<ul></li><li>若value以`^`开头并且以`$`结尾，则当pod标签中存在以key为标签名且对应标签值能正则匹配value的情况时，相应的pod会被匹配；</li><li>其他情况下，当pod标签中存在以key为标签名且以value为标签值的情况时，相应的pod会被匹配。</li></ul></ul>                                                                                                                                                                                                                                                                                                                                                                                       |\n|  ContainerFilters.ExcludeK8sLabel  |  map  |  否  | 空       | /                                            | 对于部署于K8s环境的容器，指定需要排除采集容器所在pod的标签条件。多个条件之间为“或”的关系，如果未添加该参数，则表示采集所有容器。支持正则匹配。 map中的key为pod标签名，value为pod标签的值，说明如下：<ul><li>如果map中的value为空，则pod标签中包含以key为键的pod都会被匹配；</li><li>如果map中的value不为空，则：<ul></li><li>若value以`^`开头并且以`$`结尾，则当pod标签中存在以key为标签名且对应标签值能正则匹配value的情况时，相应的pod会被匹配；</li><li>其他情况下，当pod标签中存在以key为标签名且以value为标签值的情况时，相应的pod会被匹配。</li></ul></ul>                                                                                                                                                                                                                                                                                                                                                                                    |\n|  ContainerFilters.K8sContainerRegex  |  string  |  否  | 空       | test-container                               | 对于部署于K8s环境的容器，指定待采集容器的名称条件。如果未添加该参数，则表示采集所有容器。支持正则匹配。|\n|  ContainerFilters.IncludeEnv  |  map  |  否  | 空       | /                                            | 指定待采集容器的环境变量条件。多个条件之间为“或”的关系，如果未添加该参数，则表示采集所有容器。支持正则匹配。 map中的key为环境变量名，value为环境变量的值，说明如下：<ul><li>如果map中的value为空，则容器环境变量中包含以key为键的容器都会被匹配；</li><li>如果map中的value不为空，则：<ul></li><li>若value以`^`开头并且以`$`结尾，则当容器环境变量中存在以key为环境变量名且对应环境变量值能正则匹配value的情况时，相应的容器会被匹配；</li><li>其他情况下，当容器环境变量中存在以key为环境变量名且以value为环境变量值的情况时，相应的容器会被匹配。</li></ul></ul>                                                                                                                                                                                                                                                                                                                                                                                                  |\n|  ContainerFilters.ExcludeEnv  |  map  |  否  | 空       | /                                            | 指定需要排除采集容器的环境变量条件。多个条件之间为“或”的关系，如果未添加该参数，则表示采集所有容器。支持正则匹配。 map中的key为环境变量名，value为环境变量的值，说明如下：<ul><li>如果map中的value为空，则容器环境变量中包含以key为键的容器都会被匹配；</li><li>如果map中的value不为空，则：<ul></li><li>若value以`^`开头并且以`$`结尾，则当容器环境变量中存在以key为环境变量名且对应环境变量值能正则匹配value的情况时，相应的容器会被匹配；</li><li>其他情况下，当容器环境变量中存在以key为环境变量名且以value为环境变量值的情况时，相应的容器会被匹配。</li></ul></ul>                                                                                                                                                                                                                                                                                                                                                                                               |\n|  ContainerFilters.IncludeContainerLabel  |  map  |  否  | 空       | /                                            | 指定待采集容器的标签条件。多个条件之间为“或”的关系，如果未添加该参数，则默认为空，表示采集所有容器。支持正则匹配。 map中的key为容器标签名，value为容器标签的值，说明如下：<ul><li>如果map中的value为空，则容器标签中包含以key为键的容器都会被匹配；</li><li>如果map中的value不为空，则：<ul></li><li>若value以`^`开头并且以`$`结尾，则当容器标签中存在以key为标签名且对应标签值能正则匹配value的情况时，相应的容器会被匹配；</li><li>其他情况下，当容器标签中存在以key为标签名且以value为标签值的情况时，相应的容器会被匹配。</li></ul></ul>                                                                                                                                                                                                                                                                                                                                                                                                             |\n|  ContainerFilters.ExcludeContainerLabel  |  map  |  否  | 空       | /                                            | 指定需要排除采集容器的标签条件。多个条件之间为“或”的关系，如果未添加该参数，则默认为空，表示采集所有容器。支持正则匹配。 map中的key为容器标签名，value为容器标签的值，说明如下：<ul><li>如果map中的value为空，则容器标签中包含以key为键的容器都会被匹配；</li><li>如果map中的value不为空，则：<ul></li><li>若value以`^`开头并且以`$`结尾，则当容器标签中存在以key为标签名且对应标签值能正则匹配value的情况时，相应的容器会被匹配；</li><li>其他情况下，当容器标签中存在以key为标签名且以value为标签值的情况时，相应的容器会被匹配。</li></ul></ul>                                                                                                                                                                                                                                                                                                                                                                                                          |\n|  ExternalK8sLabelTag  |  map  |  否  | 空       | /                                            | 对于部署于K8s环境的容器，需要在日志中额外添加的与Pod标签相关的tag。map中的key为Pod标签名，value为对应的tag名。 例如：在map中添加`app: k8s\\_label\\_app`，则若pod中包含`app=serviceA`的标签时，会将该信息以tag的形式添加到日志中，即添加字段`__tag__:k8s_label_app: serviceA`；若不包含`app`标签，则会添加空字段`__tag__:k8s_label_app: `。                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    |\n|  ExternalEnvTag  |  map  |  否  | 空       | /                                            | 对于部署于K8s环境的容器，需要在日志中额外添加的与容器环境变量相关的tag。map中的key为环境变量名，value为对应的tag名。 例如：在map中添加`VERSION: env\\_version`，则当容器中包含环境变量`VERSION=v1.0.0`时，会将该信息以tag的形式添加到日志中，即添加字段`__tag__:env_version: v1.0.0`；若不包含`VERSION`环境变量，则会添加空字段`__tag__:env_version: ` 。                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\n|  CollectingContainersMeta  |  bool  |  否  | false   | true                                         | 是否启用容器元信息预览。|\n|  AppendingLogPositionMeta  |  bool  |  否  | false   | false                                        | 是否在日志中添加该条日志所属文件的元信息，包括\\_\\_tag\\_\\_:\\_\\_inode\\_\\_字段和\\_\\_file\\_offset\\_\\_字段。|\n|  AllowingIncludedByMultiConfigs  |  bool  |  否  | false   | false                                        | 是否允许当前配置采集其它配置已匹配的文件。|\n|  Tags  |  object  |  否  | 空       | {\"FileInodeTagKey\":\"\\_\\_inode\\_\\_\"}          | <notice>仅 LoongCollector 3.0.10 之后支持。</notice>   控制文件采集相关Tag。key为Tag参数名，value为Tag在日志中的字段名。当 value 为__default__时，取默认值。当 value 为空字符串时，表示删除 Tag。 可配置 Tag 如下：<ul><li>FileInodeTagKey：文件 inode。 默认不添加，默认值为\"\\_\\_inode\\_\\_\"。</li><li>FilePathTagKey：文件路径。默认添加，默认值为\"\\_\\_path\\_\\_\"。</li></ul> 以下参数仅当EnableContainerDiscovery参数取值为true时有效。 <ul><li>K8sNamespaceTagKey：文件所在容器命名空间。默认添加，默认值为\"\\_namespace\\_\"。</li><li>K8sPodNameTagKey：文件所在Pod 名。默认添加，默认值为\"\\_pod_name\\_\"。</li><li>K8sPodUidTagKey：文件所在 Pod UID。默认添加，默认值为\"\\_pod_uid\\_\"。</li><li>ContainerNameTagKey：文件所在容器名。默认添加，默认值为\"\\_container_name\\_\"。</li><li>ContainerIpTagKey：文件所在容器IP。默认添加，默认值为\"\\_container_ip\\_\"。</li><li>ContainerImageNameTagKey：文件所在容器镜像。默认添加，默认值为\"\\_image_name\\_\"。</li></ul> |\n|  FileOffsetKey  |  string  |  否  | 空       | \\_\\_file_offset\\_\\_                          | <notice>仅 LoongCollector 3.0.10 之后支持。</notice> 日志在文件中的位置 Tag。默认不添加，默认值为\\_\\_file_offset\\_\\_。当 value 为\\_\\_default\\_\\_时，取默认值。当 value 为空字符串时，表示删除 Tag。当EnableLogPositionMeta参数与 Tags.FileInodeTagKey或FileOffsetKey参数同时存在时，EnableLogPositionMeta参数会被忽略。                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |\n\n### 容器标准输出（旧版）\n\n|  **参数**  | **类型** | **是否必填** | **默认值** | **示例**                        | **说明**                                                                             |\n| --- |--------|----------|---------|-------------------------------|------------------------------------------------------------------------------------|\n|  Type  | string | 是        | /       | service\\_docker\\_stdout                  | 插件类型。固定为service\\_docker\\_stdout。                                                   |\n|  Stdout  | Boolean  | 否        | true    | true | 是否采集标准输出stdout。                                                |\n|  Stderr  | Boolean     | 否            | true       | true                            | 是否采集标准出错信息stderr。                                                                     |\n|  StartLogMaxOffset   | Integer  | 否        | 128×1024     | 131072                           | 首次采集时回溯历史数据长度，单位：字节。建议取值在[131072,1048576]之间。                                                                       |\n|  IncludeLabel  | Map，其中LabelKey和LabelValue为String类型 | 否        | 空        |  | <p>容器Label白名单，用于指定待采集的容器。默认为空，表示采集所有容器的标准输出。如果您要设置容器Label白名单，那么LabelKey必填，LabelValue可选填。</p><ul><li>如果LabelValue为空，则容器Label中包含LabelKey的容器都匹配。</li><li><p>如果LabelValue不为空，则容器Label中包含LabelKey=LabelValue的容器才匹配。</p><p>LabelValue默认为字符串匹配，即只有LabelValue和容器Label的值完全相同才会匹配。如果该值以`^`开头并且以`$`结尾，则为正则匹配。例如设置LabelKey为`io.kubernetes.container.name`，设置LabelValue为`^(nginx\\|cube)$`，表示可匹配名为nginx、cube的容器。</p></li></ul><p>多个白名单之间为或关系，即只要容器Label满足任一白名单即可匹配。</p>                                                     |\n|  ExcludeLabel  | Map，其中LabelKey和LabelValue为String类型  | 否        | 空     |  | <p>容器Label黑名单，用于排除不采集的容器。默认为空，表示不排除任何容器。如果您要设置容器Label黑名单，那么LabelKey必填，LabelValue可选填。</p><ul><li>如果LabelValue为空，则容器Label中包含LabelKey的容器都将被排除。</li><li><p>如果LabelValue不为空，则容器Label中包含LabelKey=LabelValue的容器才会被排除。</p><p>LabelValue默认为字符串匹配，即只有LabelValue和容器Label的值完全相同才会匹配。如果该值以`^`开头并且以`$`结尾，则为正则匹配。例如设置LabelKey为`io.kubernetes.container.name`，设置LabelValue为`^(nginx\\|cube)$`，表示可匹配名为nginx、cube的容器。</p></li></ul><p>多个黑名单之间为或关系，即只要容器Label满足任一黑名单对即可被排除。</p>                                                |\n|  IncludeEnv  | Map，其中EnvKey和EnvValue为String类型     | 否            | 空     |  | <p>设环境变量白名单，用于指定待采集的容器。默认为空，表示采集所有容器的标准输出。如果您要设置环境变量白名单，那么EnvKey必填，EnvValue可选填。</p><ul><li>如果EnvValue为空，则容器环境变量中包含EnvKey的容器都匹配。</li><li><p>如果EnvValue不为空，则容器环境变量中包含EnvKey=EnvValue的容器才匹配。</p><p>EnvValue默认为字符串匹配，即只有EnvValue和环境变量的值完全相同才会匹配。如果该值以`^`开头并且以`$`结尾，则为正则匹配，例如设置EnvKey为`NGINX_SERVICE_PORT`，设置EnvValue为`^(80|6379)$`，表示可匹配服务端口为80、6379的容器。</p></li></ul><p>多个白名单之间为或关系，即只要容器的环境变量满足任一键值对即可匹配。</p>                                                                     |\n|  ExcludeEnv   | Map，其中EnvKey和EnvValue为String类型  | 否        | 空 |  | <p>环境变量黑名单，用于排除不采集的容器。默认为空，表示不排除任何容器。如果您要设置环境变量黑名单，那么EnvKey必填，EnvValue可选填。</p><ul><li>如果EnvValue为空，则容器环境变量中包含EnvKey的容器的日志都将被排除。</li><li><p>如果EnvValue不为空，则容器环境变量中包含EnvKey=EnvValue的容器才会被排除。</p><p>EnvValue默认为字符串匹配，即只有EnvValue和环境变量的值完全相同才会匹配。如果该值以`^`开头并且以`$`结尾，则为正则匹配，例如设置EnvKey为`NGINX_SERVICE_PORT`，设置EnvValue为`^(80\\|6379)$`，表示可匹配服务端口为80、6379的容器。</p></li></ul><p>多个黑名单之间为或关系，即只要容器的环境变量满足任一键值对即可被排除。</p>                                                                        |\n|  IncludeK8sLabel  | Map，其中LabelKey和LabelValue为String类型 | 否        | 空        |  | <p>通过Kubernetes Label（定义在template.metadata中）白名单指定待采集的容器。如果您要设置Kubernetes Label白名单，那么LabelKey必填，LabelValue可选填。</p><ul><li>如果LabelValue为空，则Kubernetes Label中包含LabelKey的容器都匹配。</li><li><p>如果LabelValue不为空，则Kubernetes Label中包含LabelKey=LabelValue的容器才匹配。</p><p>LabelValue默认为字符串匹配，即只有LabelValue和Kubernetes Label的值完全相同才会匹配。如果该值以`^`开头并且以`$`结尾，则为正则匹配。例如设置LabelKey为`app`，设置LabelValue为`^(test1\\|test2)$`，表示匹配Kubernetes Label中包含app:test1、app:test2的容器。</p></li></ul><p>多个白名单之间为或关系，即只要Kubernetes Label满足任一白名单即可匹配。</p>                                                     |\n|  ExcludeK8sLabel  | Map，其中LabelKey和LabelValue为String类型  | 否        | 空     |  | <p>通过Kubernetes Label（定义在template.metadata中）黑名单排除不采集的容器。如果您要设置Kubernetes Label黑名单，那么LabelKey必填，LabelValue可选填。</p><ul><li>如果LabelValue为空，则Kubernetes Label中包含LabelKey的容器都被排除。</li><li><p>如果LabelValue不为空，则Kubernetes Label中包含LabelKey=LabelValue的容器才会被排除。</p><p>LabelValue默认为字符串匹配，即只有LabelValue和Kubernetes Label的值完全相同才会匹配。如果该值以`^`开头并且以`$`结尾，则为正则匹配。例如设置LabelKey为`app`，设置LabelValue为`^(test1\\|test2)$`，表示匹配Kubernetes Label中包含app:test1、app:test2的容器。</p></li></ul><p>多个黑名单之间为或关系，即只要Kubernetes Label满足任一黑名单对即可被排除。</p>                                               |\n|  K8sNamespaceRegex  | String     | 否            | 空     | ^(default\\|nginx)$ | 通过Namespace名称指定采集的容器，支持正则匹配。例如设置为`^(default\\|nginx)$`，表示匹配nginx命名空间、default命名空间下的所有容器。                                                                     |\n|  K8sPodRegex   | String  | 否        | 空 | ^(nginx-log-demo.*)$ | 通过Pod名称指定待采集的容器，支持正则匹配。例如设置为`^(nginx-log-demo.*)$`，表示匹配以nginx-log-demo开头的Pod下的所有容器。                                                                        |\n|  K8sContainerRegex   | String  | 否        | 空 | ^(container-test)$ | 通过容器名称指定待采集的容器（Kubernetes容器名称是定义在spec.containers中），支持正则匹配。例如设置为`^(container-test)$`，表示匹配所有名为container-test的容器。                                                                        |\n\n#### 数据处理参数\n\n|  **参数**  | **类型** | **是否必填** | **默认值**  | **示例** | **说明**                                                                             |\n| --- |--------|----------|----------|--|------------------------------------------------------------------------------------|\n|  BeginLineRegex  | String | 否        | 空        |  | <p>行首匹配的正则表达式。</p><p>该配置项为空，表示单行模式。</p><p>如果该表达式匹配某行的开头，则将该行作为一条新的日志，否则将此行拼接到上一条日志。</p>                                                   |\n|  BeginLineCheckLength  | Integer  | 否        | 空     |  | <p>行首匹配的长度，单位：字节。</p><p>默认取值为10×1024字节。</p><p>如果行首匹配的正则表达式在前N个字节即可体现，推荐设置此参数，提升行首匹配效率。</p>                                              |\n|  BeginLineTimeoutMs  | Integer     | 否            | 空     |  | <p>行首匹配的超时时间，单位：毫秒。</p><p>默认取值为3000毫秒。</p><p>如果3000毫秒内没有出现新日志，则结束匹配，将最后一条日志上传到日志服务。</p>                                                                      |\n|  MaxLogSize   | Integer  | 否        | 空 |  | <p>日志最大长度<strong>，</strong>默认取值为0，单位：字节。</p><p>默认取值为512×1024字节。</p><p>如果日志长度超过该值，则不再继续查找行首，直接上传。</p>                                                                       |\n|  ExternalK8sLabelTag  | Map，其中LabelKey和LabelValue为String类型 | 否        | 空        |  | <p>设置Kubernetes Label（定义在template.metadata中）日志标签后，iLogtail将在日志中新增Kubernetes Label相关字段。</p><p>例如设置LabelKey为app，LabelValue为`k8s_label_app`，当Pod中包含Label `app=serviceA`时，会将该信息iLogtail添加到日志中，即添加字段k8s_label_app: serviceA；若不包含名为app的label时，添加空字段k8s_label_app: 。</p>                                                  |\n|  ExternalEnvTag  | Map，其中EnvKey和EnvValue为String类型  | 否        | 空     |  | <p>设置容器环境变量日志标签后，iLogtail将在日志中新增容器环境变量相关字段。</p><p>例如设置EnvKey为`VERSION`，EnvValue为`env_version`，当容器中包含环境变量`VERSION=v1.0.0`时，会将该信息以tag形式添加到日志中，即添加字段env_version: v1.0.0；若不包含名为VERSION的环境变量时，添加空字段env_version: 。</p>                                                |\n\n#### 数据处理环境变量\n\n|  **环境变量**  | **类型** | **是否必填** | **默认值**  | **示例** | **说明**                                                                             |\n| --- |--------|----------|----------|--|------------------------------------------------------------------------------------|\n|  ALIYUN\\_LOG\\_ENV\\_TAGS  | String | 否        | 空        |  | <p>设置全局环境变量日志标签后，iLogtail将在日志中新增iLogtail所在容器环境变量相关字段。多个环境变量名以`\\|`分隔。</p><p>例如设置为node_name\\|node_ip，当iLogtail容器中暴露相关环境变量时，会将该信息以tag形式添加到日志中，即添加字段node_ip:172.16.0.1和node_name:worknode。</p>                                                 |\n\n\n### MySQL输入插件\n\n|  **参数**  | **类型** | **是否必填** | **默认值**        | **示例**                        | **说明**                                                                                                                                                                                                                                                                                                                                                   |\n| --- |--------|----------|----------------|-------------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string | 是        | /              | service\\_mysql                   | 插件类型。固定为service\\_mysql。                                                                                                                                                                                                                                                                                                                                  |\n|  Address  | string | 否        | 127.0.0.1:3306 | rm\\-\\*.mysql.rds.aliyuncs.com | MySQL地址。                                                                                                                                                                                                                                                                                                                                                 |\n|  User  | string | 否        | root           | root                          | 用于登录MySQL数据库的用户名称。                                                                                                                                                                                                                                                                                       |\n|  Password  | string | 否        | 空              |                               | 用于登录MySQL数据库的用户密码。如果安全需求较高，建议将用户名称和密码配置为xxx，待采集配置同步至本地机器后，在本地文件`/usr/local/ilogtail/user_log_config.json`中找到对应配置进行修改。具体操作，请参见[修改本地配置](~~64955~~)。><notice>如果您在控制台上修改了此参数，同步至本地后会覆盖本地的配置。></notice>                                                                                                                                                       |\n|  DataBase  | string | 否        | /              | project\\_database             | 数据库名称。                                                                                                                                                                                                                                                                                                                                                   |\n|  DialTimeOutMs  | int    | 否        | 5000           | 5000                          | 连接MySQL数据库超时时间，单位：ms。                                                                                                                                                                                                                                                                                                                                    |\n|  ReadTimeOutMs  | int    | 否        | 5000           | 5000                          | 读取MySQL查询结果的超时时间，单位：ms。                                                                                                                                                                                                                                                                                                                                  |\n|  StateMent  | string | 否        | /              |                               | SELECT语句。设置CheckPoint为true时，Statement中SELECT语句的where条件中必须包含CheckPoint列（CheckPointColumn）。支持使用半角问号（?）表示替换符，与CheckPoint列配合使用。 例如设置CheckPointColumn为id，设置CheckPointStart为0，设置StateMent为`SELECT * from ... where id > ?`。则每次采集后，系统会保存最后一条数据的ID作为Checkpoint，下次采集时查询语句中的半角问号（?）将被替换为该Checkpoint对应的ID。                                                          |\n|  Limit  | bool   | 否        | false          | true                          | 是否使用Limit分页。<ul><li>true：使用。</li><li>false（默认值）：不使用。</li></ul> 建议使用Limit进行分页。设置Limit为true后，进行SQL查询时，系统将自动在SELECT语句中追加LIMIT语句。                                                                                                                                                                                                                                         |\n|  PageSize  | int    | 否        | /              | 10                            | 分页大小，Limit为true时必须配置。                                                                                                                                                                                                                                                                                                                                                  |\n|  MaxSyncSize  | int    | 否        | 0              | 0                             | 每次同步最大记录数。默认值为0，表示无限制。                                                                                                                                                                                                                                                                                                                                 |\n|  CheckPoint  | bool   | 否    | false          | true                          | 是否使用CheckPoint。<ul><li>true：使用。</li><li>false（默认值）：不使用。</li></ul>  CheckPoint可作为下次采集数据的起点，实现数据增量采集。                                                                                                                                                                                                                                                                                                                                              |\n|  CheckPointColumn  | string | 否        | 空              | 1                             | CheckPoint列名称。设置CheckPoint为true时，需要配置。 **警告** 该列的值必须递增，否则可能会出现数据漏采集问题（每次查询结果中的最大值将作为下次查询的输入）。                                                                                                                                                                                                                                                                                                   |\n|  CheckPointColumnType  | string | 否        | 空              | int                           | CheckPoint列的数据类型，支持int和time。int类型的内部存储为int64，time类型支持MySQL的date、datetime、time类型。设置CheckPoint为true时，需要配置。                                                                                                                                                                                                                                                                                             |\n|  CheckPointStart  | string | 否        | 空              |                      | CheckPoint列的初始值。设置CheckPoint为true时，需要配置。                                                                                                                                                                                                                                                                                           |\n|  CheckPointSavePerPage  | bool   | 否        | true           | true                      | 是否每次分页时保存一次CheckPoint。<ul><li> true（默认值）：每次分页时保存一次CheckPoint。</li><li>false：每次同步完成后保存一次CheckPoint。</li></ul>                                                                                                                                                                                                                                                                                                 |\n|  IntervalMs  | int    | 否        | 60000              | 60000                             | 同步间隔，默认值为60000，单位：ms。    |\n\n### HTTP输入插件\n\n|  **参数**  | **类型** | **是否必填** | **默认值** | **示例**                        | **说明**                                                                                                                 |\n| --- |--------|----------|---------|-------------------------------|------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string | 是        | /       | metric\\_http                  | 插件类型。固定为metric\\_http。                                                                                                  |\n|  Address  | string | 是        | /       |  | URL列表。  **重要** 必须以`http`或`https`开头。                                                                                    |\n|  IntervalMs  | int    | 是        | /       | 10                            | 每次请求的间隔，单位：ms。                                                                                                         |\n|  Method  | string | 否        | GET     | GET                           | 请求的方法名，必须大写。                                                                                                           |\n|  Body  | string | 否        | 空       |                               | HTTP Body字段内容。                                                                                                         |\n|  Headers  | map    | 否        | 空       | {\"key\":\"value\"}               | HTTP Header的内容，例如`{\"key\":\"value\"}`，请根据实际值替换。  |\n|  PerAddressSleepMs  | int    | 否        | 100     | 100                           | Addresses列表中，每个URL请求的间隔时间，单位：ms。                                                                                                  |\n|  ResponseTimeoutMs  | int    | 否        | 5000    | 5000                             | 请求超时的时间，单位：ms。                                                                                                 |\n|  IncludeBody  | bool   | 否    | false   | true                          | 是否采集请求的Body，默认值：false。如果为true，则将请求Body内容存放在名为content的key中。                    |\n|  FollowRedirects  | bool | 否        | false   | false                             | 是否自动处理重定向。                          |\n|  InsecureSkipVerify  | bool | 否        | false   | false                           | 是否跳过HTTPS安全检查。               |\n|  ResponseStringMatch  | string | 否        | /       |                               | 对返回的Body内容进行正则表达式检查，检查结果被存放在名为_response_match_的key中，如果匹配，value为yes；如果不匹配，value为no。                                                                               |\n\n\n### Syslog输入插件\n\n|  **参数**  | **类型** | **是否必填** | **默认值**        | **示例**              | **说明**                                                                                                                                                                                                                                                                                           |\n| --- |--------|----------|----------------|---------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string | 是        | /              | service\\_syslog | 插件类型，固定为service\\_syslog。                                                                                                                                                                                                                                                                        |\n|  Address  | string | 否        | tcp://127.0.0.1:9999 |                     | 指定Logtail监听的协议、地址和端口，Logtail会根据Logtail配置进行监听并获取日志数据。格式为`[tcp/udp]://[` *ip* `]:[` *port* `]`。不配置时，默认为`tcp://127.0.0.1:9999`，即表示（只能接收本地转发的日志。  **说明** <ul><li>Logtail配置中设置的监听协议、地址和端口号必须与rsyslog配置文件设置的转发规则相同。</li>   <li>如果安装Logtail的服务器有多个IP地址可接收日志，可以将地址配置为`0.0.0.0`，表示监听服务器的所有IP地址。</li></ul> |\n|  ParseProtocol  | string   | 否        | 空          | rfc3164                | 指定解析日志所使用的协议，默认为空，表示不解析。其中： <ul><li> 空：不解析。</li> <li>rfc3164：指定使用RFC3164协议解析日志。</li></li>rfc5424：指定使用RFC5424协议解析日志。</li><li>auto：指定Logtail根据日志内容自动选择合适的解析协议。</li></ul>                                                                                                                           |\n|  IgnoreParseFailure  | bool | 否        | true           | true                | 指定解析失败后的操作，不配置时，默认为`true`，表示放弃解析，直接填充所返回的content字段。配置为`false` ，表示解析失败时丢弃日志。                                                                                                                                                                                                                                   |\n\n### Systemd Journal输入插件\n\n|  **参数**  | **类型** | **是否必填** | **默认值** | **示例**              | **说明**                                                                                       |\n| --- |--------|----------|---------|---------------------|----------------------------------------------------------------------------------------------|\n|  Type  | string | 是        | /       | service\\_journal | 插件类型，固定为service\\_journal。                                                                   |\n|  JournalPaths  |  \\[string\\] | 是        | 空       |          /var/log/journal           | Journal日志路径，建议配置为Journal日志所在目录。 |\n|  SeekPosition  | string   | 否        | tail   | tail                | 首次采集方式，可以配置为head或tail。 <ul><li> head表示采集所有数据。 </li> <li> tail表示只采集Logtail采集配置被应用后的新数据。</li></ul>                               |\n|  Kernel  | bool | 否        | true    | true                | 是否采集内核日志。                               |\n|  Units  | \\[string\\] | 否        | 空       |       \"\"              | 指定采集的Unit列表，默认为空，表示全部采集。                                       |\n|  ParseSyslogFacility  | bool    | 否        | false       |    false    | 是否解析syslog日志的facility字段。不配置时，表示不解析。                                                                                       |\n|  ParsePriority  | bool    | 否        | false       |    false               | 是否解析Priority字段。不配置时，表示不解析。 设置为true时，Priority字段的映射关系如下所示。 ```plaintext \"0\": \"emergency\" \"1\": \"alert\" \"2\": \"critical\" \"3\": \"error\" \"4\": \"warning\" \"5\": \"notice\" \"6\": \"informational\" \"7\": \"debug\" ```                                                                                   |\n|  UseJournalEventTime  | bool    | 否        | false   | false               | 是否使用Journal日志中的字段作为日志时间。不配置时，表示使用采集时间作为日志时间。实时日志采集一般相差3秒以内。                                                                    |\n\n### SQL Server输入插件\n\n|  **参数**  | **类型** | **是否必填** | **默认值**        | **示例**                        | **说明**                                                                                                                                                                                                                                                                                          |\n| --- |--------|----------|----------------|-------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string | 是        | /              | service\\_mssql                   | 插件类型。固定为service\\_mssql。                                                                                                                                                                                                                                                                         |\n|  Address  | string | 否        | 127.0.0.1:1433 | rm\\-\\*.sqlserver.rds.aliyuncs.com | SQL Server地址。                                                                                                                                                                                                                                                                                   |\n|  User  | string | 否        | root           | root                          | 用于登录SQL Server数据库的账号名称。                                                                                                                                                                                                                                                                         |\n|  Password  | string | 否        | 空              |                               | 用于登录SQL Server数据库的账号密码。如果安全需求较高，建议将用户名称和密码配置为xxx，待采集配置同步至本地机器后，在本地文件`/usr/local/ilogtail/user_log_config.json`中找到对应配置进行修改。具体操作，请参见[修改本地配置](~~64955~~)。><notice>如果您在控制台上修改了此参数，同步至本地后会覆盖本地的配置。></notice>                                                                                              |\n|  DataBase  | string | 否        | /              | project\\_database             | 数据库名称。                                                                                                                                                                                                                                                                                          |\n|  DialTimeOutMs  | int    | 否        | 5000           | 5000                          |连接SQL Server数据库的超时时间，单位：ms。                                                                                                                                                                                                                                                                           |\n|  ReadTimeOutMs  | int    | 否        | 5000           | 5000                          | 读取SQL Server查询结果的超时时间，单位：ms。                                                                                                                                                                                                                                                                         |\n|  StateMent  | string | 否        | /              |                               | SELECT语句。设置CheckPoint为true时，Statement中SELECT语句的where条件中必须包含CheckPoint列（CheckPointColumn）。支持使用半角问号（?）表示替换符，与CheckPoint列配合使用。 例如设置CheckPointColumn为id，设置CheckPointStart为0，设置StateMent为`SELECT * from ... where id > ?`。则每次采集后，系统会保存最后一条数据的ID作为Checkpoint，下次采集时查询语句中的半角问号（?）将被替换为该Checkpoint对应的ID。 |\n|  Limit  | bool   | 否        | false          | true                          | 是否使用Limit分页。<ul><li>true：使用。</li><li>false（默认值）：不使用。</li></ul> 建议使用Limit进行分页。设置Limit为true后，进行SQL查询时，系统将自动在SELECT语句中追加LIMIT语句。                                                                                                                                                                   |\n|  PageSize  | int    | 否        | /              | 10                            | 分页大小，Limit为true时必须配置。                                                                                                                                                                                                                                                                           |\n|  MaxSyncSize  | int    | 否        | 0              | 0                             | 每次同步最大记录数。默认值为0，表示无限制。                                                                                                                                                                                                                                                                          |\n|  CheckPoint  | bool   | 否    | false          | true                          | 是否使用CheckPoint。<ul><li>true：使用。</li><li>false（默认值）：不使用。</li></ul>  CheckPoint可作为下次采集数据的起点，实现数据增量采集。                                                                                                                                                                                             |\n|  CheckPointColumn  | string | 否        | 空              | 1                             | CheckPoint列名称。CheckPoint为true时必须配置。 **警告** 该列的值必须递增，否则可能会出现数据漏采集问题（每次查询结果中的最大值将作为下次查询的输入）。                                                                                                                                                                                                   |\n|  CheckPointColumnType  | string | 否        | 空              | int                           | CheckPoint列的数据类型，支持int和time。int类型的内部存储为int64，time类型支持SQL Server的date、datetime、time类型。设置CheckPoint为true时，需要配置。                                                                                                                                                                                        |\n|  CheckPointStart  | string | 否        | 空              |                      | CheckPoint列的初始值。设置CheckPoint为true时，需要配置。                                                                                                                                                                                                                                                        |\n|  CheckPointSavePerPage  | bool   | 否        | true           | true                      | 是否每次分页时保存一次CheckPoint。<ul><li> true（默认值）：每次分页时保存一次CheckPoint。</li><li>false：每次同步完成后保存一次CheckPoint。</li></ul>                                                                                                                                                                                    |\n|  IntervalMs  | int    | 否        | 60000              | 60000                             | 同步间隔，默认值为60000，单位：ms。                                                                                                                                                                                                                                                                           |\n\n### PostgreSQL输入插件\n\n|  **参数**  | **类型** | **是否必填** | **默认值**        | **示例**                        | **说明**                                                                                                                                                                                                                                                                                          |\n| --- |--------|----------|----------------|-------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string | 是        | /              | service\\_pgsql                   | 插件类型。固定为service\\_pgsql。                                                                                                                                                                                                                                                                         |\n|  Address  | string | 否        | 127.0.0.1:5432 | rm\\-\\*.pg.rds.aliyuncs.com | PostgreSQL地址。                                                                                                                                                                                                                                                                                   |\n|  User  | string | 否        | root           | root                          | 用于登录PostgreSQL地址数据库的账号名称。                                                                                                                                                                                                                                                                         |\n|  Password  | string | 否        | 空              |                               | 用于登录PostgreSQL数据库的账号密码。如果安全需求较高，建议将用户名称和密码配置为xxx，待采集配置同步至本地机器后，在本地文件`/usr/local/ilogtail/user_log_config.json`中找到对应配置进行修改。具体操作，请参见[修改本地配置](~~64955~~)。><notice>如果您在控制台上修改了此参数，同步至本地后会覆盖本地的配置。></notice>                                                                                         |\n|  DataBase  | string | 否        | /              | project\\_database             | PostgreSQL数据库名称。                                                                                                                                                                                                                                                                                          |\n|  DialTimeOutMs  | int    | 否        | 5000           | 5000                          | 连接PostgreSQL数据库的超时时间，单位：ms。                                                                                                                                                                                                                                                                     |\n|  ReadTimeOutMs  | int    | 否        | 5000           | 5000                          | 读取PostgreSQL查询结果的超时时间，单位：ms。                                                                                                                                                                                                                                                                    |\n|  StateMent  | string | 否        | /              |                               | SELECT语句。 设置CheckPoint为true时，StateMent中SELECT语句的where条件中必须包含CheckPoint列（CheckPointColumn参数），并将该列的值设置为$1。例如：设置CheckPointColumn为id，设置StateMent为`SELECT * from ... where id > $1` |\n|  Limit  | bool   | 否        | false          | true                          | 是否使用Limit分页。<ul><li>true：使用。</li><li>false（默认值）：不使用。</li></ul> 建议使用Limit进行分页。设置Limit为true后，进行SQL查询时，系统将自动在SELECT语句中追加LIMIT语句。                                                                                                                                                                   |\n|  PageSize  | int    | 否        | /              | 10                            | 分页大小，Limit为true时必须配置。                                                                                                                                                                                                                                                                           |\n|  MaxSyncSize  | int    | 否        | 0              | 0                             | 每次同步最大记录数。默认值为0，表示无限制。                                                                                                                                                                                                                                                                          |\n|  CheckPoint  | bool   | 否    | false          | true                          | 是否使用CheckPoint。<ul><li>true：使用。</li><li>false（默认值）：不使用。</li></ul>  CheckPoint可作为下次采集数据的起点，实现数据增量采集。                                                                                                                                                                                             |\n|  CheckPointColumn  | string | 否        | 空              | 1                             | CheckPoint列名称。CheckPoint为true时必须配置。 **警告** 该列的值必须递增，否则可能会出现数据漏采集问题（每次查询结果中的最大值将作为下次查询的输入）。                                                                                                                                                                                                      |\n|  CheckPointColumnType  | string | 否        | 空              | int                           | CheckPoint列的数据类型，支持int和time。int类型的内部存储为int64，time类型支持PostgreSQL的时间类型。设置CheckPoint为true时，需要配置。                                                                                                                                                                                        |\n|  CheckPointStart  | string | 否        | 空              |                      | CheckPoint列的初始值。设置CheckPoint为true时，需要配置。                                                                                                                                                                                                                                                        |\n|  CheckPointSavePerPage  | bool   | 否        | true           | true                      | 是否每次分页时保存一次CheckPoint。<ul><li> true（默认值）：每次分页时保存一次CheckPoint。</li><li>false：每次同步完成后保存一次CheckPoint。</li></ul>                                                                                                                                                                                    |\n|  IntervalMs  | int    | 否        | 60000              | 60000                             | 同步间隔，默认值为60000，单位：ms。                                                                                                                                                                                                                                                                           |\n\n### SNMP协议输入插件\n\n|  **参数**  | **类型** | **是否必填** | **默认值** | **示例**    | **说明**                                                                                                       |\n| --- |--------|----------|---------|-----------|--------------------------------------------------------------------------------------------------------------|\n|  Targets  | \\[string\\] | 是        | /       | 127.0.0.1 | 目标机器组的IP地址。                                                                                                  |\n|  Port  | string | 否        | 161     | 161       | SNMP协议使用的端口。                                                                                                 |\n|  Community  | string | 否        | public  | public    | 团体名称，SNMPv1和SNMPv2使用团体名进行认证。                                                                                 |\n|  UserName  | string | 否        | 空       | root      | 用户名，SNMPv3支持使用用户名进行认证。                                                                                       |\n|  AuthenticationProtocol  | string | 否        | NoAuth  | NoAuth    | 验证协议，SNMPv3支持使用验证协议进行认证。                                                                                     |\n|  AuthenticationPassphrase  | string    | 否        | 空       |           | 验证密码，默认值为空。设置`AuthenticationProtocol`为`MD5`或`SHA`时，需要设置`AuthenticationPassphrase`。                           |\n|  PrivacyProtocol  | string    | 否        | NoPriv  | NoPriv    | 隐私协议，SNMPv3支持使用隐私协议进行认证。                                                                                     |\n|  PrivacyPassphrase  | string | 否        | 空       |           | 隐私协议密码，默认与验证密码一致。 当设置`PrivacyProtocol`为`DES`或`AES`时，必须设置`PrivacyPassphrase`。                                 |\n|  Timeout  | int   | 否        | 5       | 5         | 一次查询操作的超时时间，单位为秒。                                                                                            |\n|  Version  | int    | 否        | 2       | 2         | SNMP协议版本。 可选值为`1`、`2`、`3`。                                                                                   |\n|  Transport  | string    | 否        | udp     | udp       | SNMP通讯方法，可选值为`udp`、`tcp`。                                                                                    |\n|  MaxRepetitions  | int   | 否    | 0       | 0         | 查询超时后的重试次数。                                                                                                  |\n|  Oids  | \\[string\\] | 否        | 空       | 1         | 在目标机器中查询的对象标识符。                                                                                              |\n|  Fields  | \\[string\\] | 否        | 空       | int       | 在目标机器中查询的字段，本插件会先对字段进行翻译，即查找本地管理信息库，将其翻译为对象标识符并一起查询。                |\n|  Tables  | \\[string\\] | 否        | 空       |           | 在目标机器中查询的表，本插件会先查询表内所有的字段，然后查找本地管理信息库，将其翻译为对象标识符并一起查询。                                                                     |\n\n### 脚本输出采集插件\n\n|  **参数**  | **类型**     | **是否必填** | **默认值** | **示例**    | **说明**                                                                                                                                                                |\n| --- |------------|----------|---------|-----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是        | /       | input\\_command | 插件类型，固定为input\\_command。                                                                                                                                              |\n|  ScriptType  | string     | 是        | 空       | shell       | 指定脚本内容的类型，目前支持bash、shell、python2、python3。                                                                                                                             |\n|  User  | string     | 是        | /       | public    | 运行命令使用的用户名，只支持非Root用户。 **说明** * 请确保指定的用户名在机器中存在。  建议配置最小权限，只授予需要关注的目录或文件rwx权限 。                                                                                       |\n|  ScriptContent  | string     | 是        | 空       |       | 脚本内容，支持PlainText和Base64加密的内容，长度在512\\*1024字节内。                                                                                                                         |\n|  ContentEncoding  | string     | 否        | PlainText  | PlainText    | 脚本内容的文本格式，可选值。<ul><li>PlainText（默认值）：纯文本，不编码。</li><li>Base64：Base64编码。</li></ul>                                                                                      |\n|  LineSplitSep  | string     | 否        | 空       |           | 脚本输出内容的分隔符，为空时不进行分割，全部作为一条数据返回。                                                                                                                                       |\n|  CmdPath  | string     | 否        | 空  | /usr/bin/bash    | 执行脚本命令的路径，如果为空，则使用默认路径。默认路径如下：<ul><li> bash：/usr/bin/bash </li><li> shell：/usr/bin/sh </li><li> python2：/usr/bin/python2 </li><li> python3：/usr/bin/python3</li></ul> |\n|  TimeoutMilliSeconds  | int        | 否        | 3000       |   3000        | 执行脚本的超时时间，单位为毫秒。                                                                                                                                                      |\n|  IgnoreError  | bool       | 否        | false     | false        | 插件执行出错时是否忽略Error日志。默认值为false，表示不忽略。                                                                                                                                        |\n|  Environments  | \\[string\\]        | 否        |        |          | 环境变量，默认为os.Environ()的值，如果设置了Environments，则在os.Environ()的基础上追加设置的环境变量。                                                                                                 |\n|  IntervalMs  | int     | 否        | 5000     | 5000       | 采集触发频率或脚本执行频率。单位为毫秒。                                                                                                                                                  |\n\n\n## 原生处理插件\n\n### 正则解析原生处理插件\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **默认值**  |  **示例**  |  **说明**  |\n| --- | --- | --- | --- | --- | --- |\n|  Type  |  string  |  是  |  /  |  processor\\_parse\\_regex\\_native  |  插件类型。固定为processor\\_parse\\_regex\\_native。  |\n|  SourceKey  |  string  |  是  |  /  |  content  |  源字段名。  |\n|  Regex  |  string  |  是  |  /  |  (\\d+-\\d+-\\d+)\\s+(.\\*)  |  正则表达式。  |\n|  Keys  |  \\[string\\]  |  是  |  /  |  \\[\"time\", \"msg\"\\]  |  提取的字段列表。  |\n|  KeepingSourceWhenParseFail  |  bool  |  否  |  false  |  false  |  当解析失败时，是否保留源字段。  |\n|  KeepingSourceWhenParseSucceed  |  bool  |  否  |  false  |  false  |  当解析成功时，是否保留源字段。  |\n|  RenamedSourceKey  |  string  |  否  |  空  |  key  |  当源字段被保留时，用于存储源字段的字段名。若不填，默认不改名。  |\n\n### JSON解析原生处理插件\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **默认值**  |  **示例**  |  **说明**  |\n| --- | --- | --- | --- | --- | --- |\n|  Type  |  string  |  是  |  /  |  processor\\_parse\\_json\\_native  |  插件类型。固定为processor\\_parse\\_json\\_native。  |\n|  SourceKey  |  string  |  是  |  /  |  content  |  源字段名。  |\n|  KeepingSourceWhenParseFail  |  bool  |  否  |  false  |  false  |  当解析失败时，是否保留源字段。  |\n|  KeepingSourceWhenParseSucceed  |  bool  |  否  |  false  |  false  |  当解析成功时，是否保留源字段。  |\n|  RenamedSourceKey  |  string  |  否  |  空  |  key  |  当源字段被保留时，用于存储源字段的字段名。若不填，默认不改名。  |\n\n### 分隔符解析原生处理插件\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **默认值**  |  **示例**  |  **说明**  |\n| --- | --- | --- | --- | --- | --- |\n|  Type  |  string  |  是  |  /  |  processor\\_parse\\_delimiter\\_native  |  插件类型。固定为processor\\_parse\\_delimiter\\_native。  |\n|  SourceKey  |  string  |  是  |  /  |  content  |  源字段名。  |\n|  Separator  |  string  |  是  |  /  |  ,  |  分隔符。  |\n|  Quote  |  string  |  否  |  \"  |  \"  |  引用符。  |\n|  Keys  |  \\[string\\]  |  是  |  /  |  \\[\"time\", \"msg\"\\]  |  提取的字段列表。  |\n|  AllowingShortenedFields  |  bool  |  否  |  true  |  true  |  是否允许提取的字段数量小于Keys的数量。若不允许，则此情景会被视为解析失败。  |\n|  OverflowedFieldsTreatment  |  string  |  否  |  extend  |  extend  |  当提取的字段数量大于Keys的数量时的行为。可选值包括：<ul><li>extend：保留多余的字段，且每个多余的字段都作为单独的一个字段加入日志，多余字段的字段名为\\_\\_column$i\\_\\_，其中$i代表额外字段序号，从0开始计数。</li><li>keep：保留多余的字段，但将多余内容作为一个整体字段加入日志，字段名为\\_\\_column0\\_\\_.</li><li>discard：丢弃多余的字段。</li></ul>       |\n|  KeepingSourceWhenParseFail  |  bool  |  否  |  false  |  false  |  当解析失败时，是否保留源字段。  |\n|  KeepingSourceWhenParseSucceed  |  bool  |  否  |  false  |  false  |  当解析成功时，是否保留源字段。  |\n|  RenamedSourceKey  |  string  |  否  |  空  |  key  |  当源字段被保留时，用于存储源字段的字段名。若不填，默认不改名。  |\n\n### 飞天解析原生处理插件\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **默认值**  |  **示例**  |  **说明**  |\n| --- | --- | --- | --- | --- | --- |\n|  Type  |  string  |  是  |  /  |  processor\\_parse\\_apsara\\_native  |  插件类型。固定为processor\\_parse\\_apsara\\_native。  |\n|  SourceKey  |  string  |  是  |  /  |  content  |  源字段名。  |\n|  Timezone  |  string  |  否  |  空  |  GMT+08:00  |  日志时间所属时区。格式为GMT+HH:MM（东区）或GMT-HH:MM（西区）。  |\n|  KeepingSourceWhenParseFail  |  bool  |  否  |  false  |  false  |  当解析失败时，是否保留源字段。  |\n|  KeepingSourceWhenParseSucceed  |  bool  |  否  |  false  |  false  |  当解析成功时，是否保留源字段。  |\n|  RenamedSourceKey  |  string  |  否  |  空  |  key  |  当源字段被保留时，用于存储源字段的字段名。若不填，默认不改名。  |\n\n### 时间解析原生处理插件\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **默认值**  |  **示例**  |  **说明**  |\n| --- | --- | --- | --- | --- | --- |\n|  Type  |  string  |  是  |  /  |  processor\\_parse\\_timestamp\\_native  |  插件类型。固定为processor\\_parse\\_timestamp\\_native。  |\n|  SourceKey  |  string  |  是  |  /  |  content  |  源字段名。  |\n|  SourceFormat  |  string  |  是  |  /  |  %Y/%m/%d %H:%M:%S  |  日志时间格式。更多信息，请参见[时间格式](~~28980~~)。  |\n|  SourceTimezone  |  string  |  否  |  空  |  GMT+08:00  |  日志时间所属时区。格式为GMT+HH:MM（东区）或GMT-HH:MM（西区）。  |\n\n### 过滤原生处理插件\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **示例**  |  **默认值**  |  **说明**  |\n| --- | --- | --- | --- | --- | --- |\n|  Type  |  string  |  是  |  processor\\_filter\\_regex\\_native  |  /  |  插件类型。固定为processor\\_filter\\_regex\\_native。  |\n|  Include  |  map  |  是  |  /  |  /  |  日志字段白名单，其中key为字段名，value为正则表达式，表示如果当前事件要被采集，则key指定的字段内容所需要满足的条件。多个条件之间为“且”的关系，仅当所有条件均满足时，该条日志才会被采集。  |\n\n### 脱敏原生处理插件\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **默认值**  |  **示例**  |  **说明**  |\n| --- | --- | --- | --- | --- | --- |\n|  Type  |  string  |  是  |  /  |  processor\\_desensitize\\_native  |  插件类型。固定为processor\\_desensitize\\_native。  |\n|  SourceKey  |  string  |  是  |  /  |  content  |  源字段名。  |\n|  Method  |  string  |  是  |  /  |  const  |  脱敏方式。可选值包括：  const：用常量替换敏感内容。        md5：用敏感内容的MD5值替换相应内容。       |\n|  ReplacingString  |  string  |  否，当Method取值为const时必选  |  /  |  \\*\\*\\*\\*\\*\\*  |  用于替换敏感内容的常量字符串。  |\n|  ContentPatternBeforeReplacedString  |  string  |  是  |  /  |  'password:'  |  敏感内容的前缀正则表达式。  |\n|  ReplacedContentPattern  |  string  |  是  |  /  |  \\[^'\\]\\*  |  敏感内容的正则表达式。  |\n|  ReplacingAll  |  bool  |  否  |  true  |  true  |  是否替换所有的匹配的敏感内容。  |\n\n## 扩展处理插件\n\n### 提取字段\n\n#### 正则模式\n\n|  **参数**  | **类型**     |  **是否必填**  |  **默认值**  |  **示例**  | **说明**                                                                          |\n| --- |------------| --- | --- | --- |---------------------------------------------------------------------------------|\n|  Type  | string     |  是  |  /  |  processor\\_regex  | 插件类型。固定为processor\\_regex。                                                       |\n|  SourceKey  | string     |  是  |  /  |  content  | 源字段名。                                                                           |\n|  Regex  | string     |  是  |  /  |  (\\d+-\\d+-\\d+)\\s+(.\\*)  | 正则表达式。您需要使用半角圆括号`()`标注待提取的字段。                                                   |\n|  Keys  | \\[string\\] |  是  |  /  |  \\[\"ip\", \"time\", \"method\"\\]  | 为提取的内容指定字段名，例如\\[\"ip\", \"time\", \"method\"\\]。                                       |\n|  NoKeyError  | boolean    |  否  |  false  |  false  | 原始日志中无您所指定的原始字段时，系统是否报错。 <ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul> |\n|  NoMatchError  | boolean       |  否  |  false  |  false  |   您所指定的正则表达式与原始字段的值不匹配时，系统是否报错。<ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul>        |\n|  KeepSource  | boolean     |  否  |  false  |  false  | 解析后的日志中是否保留原始字段。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul>                                                 |\n|  FullMatch  | boolean       |  否  |  true  |  true  |  是否完全匹配才被提取。<ul><li> true（默认值）：您在Keys参数中设置的所有字段通过Regex参数中的正则表达式都能与原始字段的值匹配，字段值才会被提取。</li>  <li> false：部分字段匹配也会进行提取。</li></ul>        |\n|  KeepSourceIfParseError  | boolean     |  true  |  true  |  false  | 解析日志失败时，解析后的日志中是否将保留原始字段。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul>                                                 |\n\n#### 标定模式\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**            | **说明**                                                                                                                       |\n| --- |------------|-----------|---------|-------------------|------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_anchor | 插件类型。固定为processor\\_anchor。                                                                                                   |\n|  SourceKey  | Anchor数组     | 是         | /       | content           | 源字段名。                                                                                                                        |\n|  Anchors  | string     | 是         | /       |                   | 标定项列表。                                                                                                |\n|  Start  | String | 是         | 空       | time              | 起始关键字。如果为空，表示匹配字符串开头。                                                                                      |\n|  Stop  | String    | 是         | 空       | \\t                | 结束关键字。如果为空，表示匹配字符串结尾。                                              |\n|  FieldName  | String       | 是         | 空       | time              | 为提取的内容指定字段名。                                          |\n|  FieldType  | String     | 是         | 空       | string            | 字段的类型，取值为string或json。                                                       |\n|  ExpondJson  | boolean       | 否         | false   | false             | 是否进行JSON展开。<ul><li>true：展开。</li>  <li> false（默认值）：不展开。</li></ul> |\n|  ExpondConnecter  | String     | 否         | _       | _                 | JSON展开的连接符。默认值为下划线（_）。                                             |\n| MaxExpondDepth  | Int      | 否        | 0       | 0                 | JSON展开最大深度。默认值为0，表示无限制。                                                                                                                                               |\n| NoAnchorError   | Boolean  | 否     | false   | false             | 查找不到标定项时，系统是否报错。{#3f246206721du} <ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul>        |\n| NoKeyError      | Boolean  | 否    | false   | false             | 原始日志中无您所指定的原始字段时，系统是否报错。<ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul> |\n| KeepSource      | Boolean  | 否    | false| false                  | 解析后的日志中是否保留原始字段。<ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul> |\n\n#### CSV模式\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值**            | **示例**                      | **说明**                                                                                                                                                                                                                                                                    |\n| --- |------------|-----------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /                                                                                                                                                                                                                                                                                                               | processor\\_csv              | 插件类型。固定为processor\\_csv。                                                                                                                                                                                                                                                   |\n| SourceKey        | String   | 是      | /                                                                                                                                                                                                                                                                                                               | csv                         | 原始字段名。                                                                                                                                                                                                                                                                    |\n| SplitKeys        | String数组 | 是    | /                                                                                                                                                                                                                                                                                                               | \\[\"date\", \"ip\", \"content\"\\] | 为提取的内容指定字段名，例如\\[\"date\", \"ip\", \"content\"\\]。 **重要** 待分割的字段数量小于SplitKeys参数中的字段数量时，SplitKeys参数中多余的字段将被忽略。                                                                                                                                                                     |\n| PreserveOthers   | Boolean  | 否        | false| false                       | 待分割的字段数量大于SplitKeys参数中的字段数量时，是否保留超出部分。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul>                                                                                                                                                                              |\n| ExpandOthers     | Boolean  | 否        | false| false                       | 是否解析超出部分。<ul><li> true：解析。您可以通过ExpandOthers参数解析超出部分，然后通过ExpandKeyPrefix参数指定超过部分字段的命名前缀。   *</li>  <li> false（默认值）：不解析。 如果您设置PreserveOthers为true且设置ExpandOthers为false，则超出部分的内容将被存储到_decode_preserve_字段中。</li></ul> **说明** 如果多余的字段内容中存在不规范内容时，您需要根据CSV格式对其进行规范化处理后，再进行存储操作。 |\n| ExpandKeyPrefix  | String   | 否        | |                             | 超出部分的字段命名前缀。例如配置为<kbd data-tag=\"userinput\" id=\"userinput-y8h-hmx-qir\" class=\"userinput\">expand_</kbd>，则字段名为expand_1、expand_2。                                                                                                                                             |\n| TrimLeadingSpace | Boolean  | 否        |  false| false                       | 是否忽略字段值中的前置空格。<ul><li>true：忽略。</li>  <li>false（默认值）：不忽略。</li></ul>                                                                                                                                                                                                        |\n| SplitSep         | String   | 否        | ,| ,                           | 分隔符。默认值为半角逗号（,）。                                                                                                                                                                                                                                                          |\n| KeepSource       | Boolean  | 否        | false| false                       |解析后的日志中是否保留原始字段。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul>                                                                                                                                                                                                                |\n| NoKeyError       | Boolean  | 否        |  false| false                       |原始日志中无您指定的原始字段时，系统是否报错。 <ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul>                                                                                                                                                                                                    |\n\n#### 单字符分隔符模式\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**                                    | **说明**                                    |\n| --- |------------|-----------|---------|-------------------------------------------|-------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_split\\_char                    | 插件类型。固定为processor\\_split\\_char。           |\n| SourceKey      | String   | 是     |         |                                           | 原始字段名。                                    |\n| SplitSep       | String   | 是        |         |                                           | 分隔符。必须为单字符，可设置为不可见字符，例如\\\\u0001。           |\n| SplitKeys      | String数组 | 是        |         |\\[\"ip\", \"time\", \"method\"\\] | 为提取的内容指定字段名，例如\\[\"ip\", \"time\", \"method\"\\]。 |\n| PreserveOthers | Boolean  | 否        | false   | false                       |待分割的字段数量大于SplitKeys参数中的字段数量时，是否保留超出部分。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul> |\n| QuoteFlag      | Boolean  | 否        | false   | false                       |是否使用引用符。<ul><li> true：使用。 </li>  <li>  false（默认值）：不使用。 </li></ul>                              |\n| Quote          | String   | 否        | /       | \\\\u0001                       |引用符。必须为单字符，可以为不可见字符，例如\\\\u0001。仅当QuoteFlag配置为true时有效。                                                  |\n| NoKeyError     | Boolean  | 否        | false   | false                       |原始日志中无您指定的原始字段时，系统是否报错。<ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul>               |\n| NoMatchError   | Boolean  | 否        | false   | false                       |您所指定的分隔符与日志中的分隔符不匹配时，系统是否报错。<ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul>           |\n| KeepSource     | Boolean  | 否        | false   | false                       |被解析后的日志中是否保留原始字段。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul>                      |\n\n#### 多字符分隔符模式\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**                                    | **说明**                                    |\n| --- |------------|-----------|---------|-------------------------------------------|-------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_split\\_string                    | 插件类型。固定为processor\\_split\\_string。           |\n| SourceKey      | String   | 是     |         |                                           | 原始字段名。                                    |\n| SplitSep       | String   | 是        |         |                                           | 分隔符。必须为单字符，可设置为不可见字符，例如\\\\u0001\\\\u0002。           |\n| SplitKeys      | String数组 | 是        |         |\\[\"key1\",\"key2\"\\] | 为提取的内容指定字段名，例如\\[\"key1\",\"key2\"\\]。**说明** 待分割的字段数量小于SplitKeys参数中的字段数量时，SplitKeys参数中多余的字段将被忽略。 |\n| PreserveOthers | Boolean  | 否        | false   | false                       |待分割的字段数量大于SplitKeys参数中的字段数量时，是否保留超出部分。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul> |\n| ExpandOthers      | Boolean  | 否        | false   | false                       |是否使用引用符。<ul><li> true：使用。 </li>  <li>  false（默认值）：不使用。 </li></ul>                            |\n| ExpandKeyPrefix          | String   | 否        | /       | expand_                       |超出部分的命名前缀。例如配置为expand_，则字段名为expand_1、expand_2。                                               |\n| NoKeyError     | Boolean  | 否        | false   | false                       |原始日志中无您指定的原始字段时，系统是否报错。<ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul>             |\n| NoMatchError   | Boolean  | 否        | false   | false                       |您所指定的分隔符与日志中的分隔符不匹配时，系统是否报错。<ul><li> true：报错。</li>  <li> false（默认值）：不报错。</li></ul>         |\n| KeepSource     | Boolean  | 否        | false   | false                       |被解析后的日志中是否保留原始字段。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul>                    |\n\n#### 键值对模式\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值**                                                                                                                          | **示例**                       | **说明**                                |\n| --- |------------|-----------|----------------------------------------------------------------------------------------------------------------------------------|------------------------------|---------------------------------------|\n|  Type  | string     | 是         | /                                                                                                                                | processor\\_split\\_key\\_value | 插件类型。固定为processor\\_split\\_key\\_value。 |\n| SourceKey                    | string  | 是       |                                                                                                                                  |                              | 原始字段名。                                |\n| Delimiter                    | string  | 否        | \\t                                                                                                                               | \\t                           | 键值对之间的分隔符，默认值为制表符`\\t`。                |\n| Separator                    | string  | 否        | :                                                                                                                                | :                            | 单个键值对中键与值之间的分隔符，默认值为半角冒号（:）。          |\n| KeepSource                   | Boolean | 否        | false                                                                                                                            | false                       |解析后的日志中是否保留原始字段。<ul><li> true：保留。</li>  <li> false（默认值）：不保留。</li></ul>                                                                                   |\n| ErrIfSourceKeyNotFound       | Boolean | 否        | true                                                                                                                             | false                       |原始日志中无您所指定的原始字段时，系统是否报错。<ul><li> true（默认值）：报错。</li>  <li> false：不报错。</li></ul>                                                                          |\n| DiscardWhenSeparatorNotFound | Boolean | 否        | false   | false                       |无匹配的分隔符时是否丢弃该键值对。<ul><li> true：丢弃。 </li>  <li>  false（默认值）：不丢弃。 </li></ul>                                                       |\n| ErrIfSeparatorNotFound       | Boolean | 否        | true   | false                       |当指定的分隔符不存在时，系统是否报错。<ul><li> true（默认值）：报错。</li>  <li> false：不报错。</li></ul>                                                        |\n| ErrIfKeyIsEmpty              | Boolean | 否        | true   | false                       |当分隔后的键为空时，系统是否报错。<ul><li> true（默认值）：报错。</li>  <li> false：不报错。</li></ul>                                                          |\n| Quote                        | String  | 否        |    |                        |引用符，当设定后若值被引用符包含，就提取引用符内的值，支持多字符。默认不开启引用符功能。 **重要** * 如果引用符为双引号（\"\"），需要添加转义符，即添加反斜线（\\\\）。当引用符内包含反斜线（\\\\）与引用符连用时，该反斜线（\\\\）将作为值的一部分输出。 |\n\n#### Grok模式\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**          | **说明**                                                                                                                                                                                                                                |\n| --- |------------|-----------|---------|-----------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_grok | 插件类型。固定为processor\\_grok。                                                                                                                                                                                                              |\n| CustomPatternDir    | String数组 | 否        |         |                 | 自定义的Grok模式文件所在的目录。processor_grok插件会读取目录内的所有文件。 未添加该参数时，表示不导入自定义的Grok模式文件。 **重要** 更新自定义的Grok模式文件后，需重启Logtail才能生效。                                                                                                                      |\n| CustomPatterns      | Map      | 否        |         |                 | 自定义的GROK模式，key为规则名，value为Grok表达式。 默认支持的表达式，请参见[processor_grok](https://github.com/alibaba/ilogtail/blob/main/plugins/processor/grok/processor_grok_default_patterns.go)。如果链接中无您需要的表达式，请在Match中输入自定义的Grok表达式。 未添加该参数时，表示不使用自定义的GROK模式。 |\n| SourceKey           | String   | 否        | content | content         | 原始字段名。默认值为content字段。                                                                                                                                                                                                                  |\n| Match               | String数组 | 是        |         |                 | Grok表达式数组。processor_grok插件会根据此处配置的表达式列表从上至下依次对日志进行匹配，并返回第一条匹配成功的提取结果。 **说明** 配置多条Grok表达式，可能影响性能。建议不超过5条。                                                                                                                              |\n| TimeoutMilliSeconds | Long     | 否        |         | 0               | 通过Grok表达式提取字段的最大尝试时间，单位：毫秒。 未添加该参数或设置为0时，表示不会超时。                                                                                                                                                                                      |\n| IgnoreParseFailure  | Boolean  | 否        | true    | true            | 是否忽略解析失败的日志。<ul><li> true（默认值）：忽略。 </li>  <li>false：删除。</li></ul>                                                                                                                                                                     |\n| KeepSource          | Boolean  | 否        | true    | true            | 是否在解析成功后保留原始字段。<ul><li> true（默认值）：保留。</li>  <li> false：丢弃。</li></ul>                                                                                                                                                                  |\n| NoKeyError          | Boolean  | 否        | false   | true            | 原始日志中无您所指定的原始字段时，系统是否报错。<ul><li> true：报错。 </li>  <li> false（默认值）：不报错。 </li></ul>                                                                                                                                                      |\n| NoMatchError        | Boolean  | 否        | true    | true            | Match参数中设置的表达式全部与日志不匹配时，系统是否报错。<ul><li> true（默认值）：报错。 </li>  <li> false：不报错。 </li></ul>                                                                                                                                               |\n| TimeoutError        | Boolean  | 否        | true    | true            | 匹配超时，系统是否报错。<ul><li> true（默认值）：报错。 </li>  <li> false：不报错。 </li></ul>                                                                                                                                                                  |\n\n### 添加字段\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**                                                                                               | **说明**                                                                                               |\n| --- |------------|-----------|---------|------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_add\\_fields                                                                               | 插件类型。固定为processor\\_add\\_fields。                                                                      |\n| Fields        | Map     | 是        | |                                                                                                      | 待添加的字段名和字段值。键值对格式，支持添加多个。                                                                            |\n| IgnoreIfExist | Boolean | 否        |false |false | 存在相同的字段名时，是否忽略重复的字段。<ul><li> true：忽略。</li>  <li>  false（默认值）：不忽略。 </li></ul> |\n\n### 丢弃字段\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**           | **说明**                   |\n| --- |------------|-----------|---------|------------------|--------------------------|\n|  Type  | string     | 是         | /       | processor\\_drop  | 插件类型。固定为processor\\_drop。 |\n| DropKeys | String数组 | 是        | | | 指定待丢弃的字段，支持配置多个。         |\n\n### 重命名字段\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**            | **说明**                                                                                                 |\n| --- |------------|-----------|---------|-------------------|--------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_rename | 插件类型。固定为processor\\_rename。                                                                             |\n| NoKeyError | Boolean  | 否        |false | false             | 日志中无您所指定的原始字段时，系统是否报错。<ul><li>true：报错。 </li>  <li>false（默认值）：不报错。  </li></ul> |\n| SourceKeys | String数组 | 是        | |                   | 待重命名的原始字段。                                                                                             |\n| DestKeys | String数组 | 是        | | | 重命名后的字段。                                                                                               |\n\n### 打包字段\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**                                                                                                   | **说明**                                                                                                   |\n| --- |------------|-----------|---------|----------------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_packjson                                                                                      | 插件类型。固定为processor\\_packjson。                                                                             |\n| SourceKeys        | String数组 | 是        | |                                                                                                          | 待打包的原始字段。                                                                                                |\n| DestKey           | String   | 否        | |                                                                                                          | 打包后的字段。                                                                                                  |\n| KeepSource        | Boolean  | 否        |true | true               | 解析后的日志中是否保留原始字段。<ul><li> true（默认值）：保留。</li>  <li> false：丢弃。</li></ul>         |\n| AlarmIfIncomplete | Boolean  | 否        |true |true | 原始日志中无您所指定的原始字段时，系统是否报错。<ul><li> true（默认值）：保留。</li>  <li> false：丢弃。</li></ul> |\n\n### 展开JSON字段\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**          | **说明**                                                                                                                                    |\n| --- |------------|-----------|---------|-----------------|-------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_json | 插件类型。固定为processor\\_json。                                                                                                                  |\n| SourceKey              | String  | 是        |         |                 | 待展开的原始字段名。                                                                                                                                |\n| NoKeyError             | Boolean | 否        | true    | true            | 原始日志中无您所指定的原始字段时，系统是否报错。<ul><li>true（默认值）：报错。 </li>  <li>false：不报错。  </li></ul>                                                           |\n| ExpandDepth            | Int     | 否        | 0       | 1               | JSON展开的深度。默认值为0，表示不限制。1表示当前层级，以此类推。                                                                                                       |\n| ExpandConnector        | String  | 否        | _       | _               | JSON展开时的连接符，默认值为下划线（_）。                                                                                                                   |\n| Prefix                 | String  | 否        |         |                 | JSON展开时，对字段名附加的前缀。                                                                                                                        |\n| KeepSource             | Boolean | 否        | true    | true            | 被解析后的日志中是否保留原始字段。<ul><li> true（默认值）：保留。</li>  <li> false：丢弃。</li></ul>                                                                    |\n| UseSourceKeyAsPrefix   | Boolean | 否        |         |                 | 是否将原始字段名作为所有JSON展开字段名的前缀。                                                                                                                 |\n| KeepSourceIfParseError | Boolean | 否        | true    | true            | 解析日志失败时，是否保留原始日志。<ul><li> true（默认值）：保留。</li>  <li> false：丢弃。</li></ul>                                                                    |\n| ExpandArray            | Boolean | 否        | false   | false           | 是否展开数组类型。Logtail 1.8.0及以上版本支持该参数。<ul><li> false（默认值）：不展开。 </li>  <li>  true：展开。例如`{\"k\":[\"1\",\"2\"]}`展开为`{\"k[0]\":\"1\",\"k[1]\":\"2\"}`。</li></ul> |\n\n### 过滤日志\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**                                                                | **说明**                                                                |\n| --- |------------|-----------|---------|-----------------------------------------------------------------------|-----------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_filter\\_regex                                              | 插件类型。固定为processor\\_filter\\_regex。                                     |\n| Include | JSON Object | 否        | |                                                                       | Key为日志字段，Value为该字段值匹配的正则表达式。键值对之间为与关系。如果日志字段的值符合对应的正则表达式，则采集该日志。      |\n| Exclude | JSON Object | 否        | | | Key为日志字段，Value为该字段值匹配的正则表达式。键值对之间为或关系。如果日志中任意一个字段的值符合对应的正则表达式，则丢弃该日志。 |\n\n### 提取日志时间\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值**                                                                                                | **示例**            | **说明**                                                                                         |\n| --- |------------|-----------|--------------------------------------------------------------------------------------------------------|-------------------|------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /                                                                                                      | processor\\_gotime | 插件类型。固定为processor\\_gotime。                                                                     |\n| SourceKey      | String  | 是        |                                                                                                        |                   | 原始字段名。                                                                                         |\n| SourceFormat   | String  | 是        |                                                                                                        |                   | 原始时间的格式。                                                                                       |\n| SourceLocation | Int     | 是        |                                                                                                        |                   | 原始时间的时区。参数值为空时，表示Logtail所在主机或容器的时区。                                                            |\n| DestKey        | String  | 是        |                                                                                                        |                   | 解析后的目标字段。                                                                                      |\n| DestFormat     | String  | 是        |                                                                                                        |                   | 解析后的时间格式。                                                                                      |\n| DestLocation   | Int     | 否        |                                                                                                        |                   | 解析后的时区。参数值为空时，表示本机时区。                                                                          |\n| SetTime        | Boolean | 否        | true                                                                                                   | true              | 是否将解析后的时间设置为日志时间。<ul><li>true（默认值）：是。 </li>  <li> false：否。</li></ul>                           |\n| KeepSource     | Boolean | 否        | true                                                                                                   | true              | 被解析后的日志中是否保留原始字段。<ul><li> true（默认值）：保留。</li>  <li> false：不保留。</li></ul>                        |\n| NoKeyError     | Boolean | 否        | true                                                                                                   | true              | 原始日志中无您所指定的原始字段时，系统是否报错。<ul><li> true（默认值）：报错。 </li>  <li>  false：不报错。</li></ul>               |\n| AlarmIfFail    | Boolean | 否        | true                                                                                                   | true              | 提取日志时间失败，系统是否报错。<ul><li> true（默认值）：报错。 </li>  <li>  false：不报错。</li></ul> |\n\n### 转换IP地址\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**                                               | **说明**                                                                                            |\n| --- |------------|-----------|---------|------------------------------------------------------|---------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_geoip                                     | 插件类型。固定为processor\\_geoip。                                                                         |\n| SourceKey    | String  | 是        |         |                                                      | 待进行IP地址转换的原始字段名。                                                                                  |\n| DBPath       | String  | 是        |         | /user/data/GeoLite2-City_20180102/GeoLite2-City.mmdb | GeoIP数据库的全路径。例如/user/data/GeoLite2-City_20180102/GeoLite2-City.mmdb。                              |\n| NoKeyError   | Boolean | 否        | false   | false                                                | 原始日志中无您所指定的原始字段名时，系统是否报错。<ul><li> true：报错。 </li>  <li>  false（默认值）：不报错。</li></ul>                 |\n| NoMatchError | Boolean | 否        | true    | true                                                 | IP地址无效或在数据库中未匹配到该IP地址时，系统是否报错。<ul><li> true（默认值）：报错。 </li>  <li>  false：不报错。</li></ul>            |\n| KeepSource   | Boolean | 否        | true    | true                                                 | 解析后的日志中，是否保留原始字段。<ul><li> true（默认值）：保留。  </li>  <li> false：不保留。 </li></ul> |\n| Language     | String  | 否        | zh-CN        | zh-CN                                                     | 语言属性。默认值为zh-CN。  **重要** 请确保您的GeoIP数据库中包含对应的语言。                                                    |\n\n### 数据脱敏\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值**                                                        | **示例**                                                       | **说明**                                                                                                                        |\n| --- |------------|-----------|----------------------------------------------------------------|--------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /                                                              | processor\\_desensitize                                       | 插件类型。固定为processor\\_desensitize。                                                                                               |\n| **SourceKey**     | String | 是        |                                                                |                                                              | 日志字段名称。                                                                                                                       |\n| **Method**        | String | 是        |                                                                | const                                                        | 脱敏方式。可选值：<ul><li>  **const** ：将敏感内容替换为字符串。您可以通过 **ReplaceString** 参数指定目标字符串。 </li>  <li> **md5** ：将敏感内容替换为对应的MD5值。 </li></ul> |\n| **Match**         | String | 否        | full                                                               | full                                                         | 指定提取敏感内容的方式。可选值：<ul><li> **full（默认值）** ：全部提取，即替换目标字段值中的所有内容。 </li>  <li> **regex** ：使用正则表达式提取敏感内容。 </li></ul>                 |\n| **ReplaceString** | String | 否        | |                                                              | 用于替换敏感内容的字符串。 设置 **Method** 为 **const** 时，必填。                                                                                 |\n| **RegexBegin**    | String | 否        | |                                                              | 匹配敏感内容前缀的正则表达式。 设置 **Match** 为 **regex** 时，必填。                                                                                |\n| **RegexContent**  | String | 否        | | | 匹配敏感内容的正则表达式。设置 **Match** 为 **regex** 时，必填。                                                                  |\n\n### 字段值映射处理\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**               | **说明**                                                                                                            |\n| --- |------------|-----------|---------|----------------------|-------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_dict\\_map | 插件类型。固定为processor\\_dict\\_map。                                                                                     |\n| SourceKey     | String  | 是        |         |                      | 原始字段名。                                                                                                            |\n| MapDict       | Map     | 否        |         |                      | 映射字典。映射字典较小时，可直接通过此参数完成设置。不需要提供本地的CSV字典文件。 **重要** 当您设置了DictFilePath参数后，MapDict参数中的配置不生效。                          |\n| DictFilePath  | String  | 否        |         |                      | CSV格式的字典文件。该CSV文件的分隔符为半角逗号（,），字段引用表示为半角引号（\"）。                                                                     |\n| DestKey       | String  | 否        |         |                      | 映射后的字段名。                                                                                                          |\n| HandleMissing | Boolean | 否        | false   | false                | 当原始日志中缺失目标字段时，系统是否处理。<ul><li> true：处理。 系统将按照Missing参数中的值进行填充。 </li>  <li> false（默认值）：不处理。  </li></ul>             |\n| Missing       | String  | 否        | Unknown | Unknown              | 处理原始日志中缺失的目标字段时，设置对应的填充值。默认值为`Unknown`。 当配置HandleMissing为true时，该参数配置生效。                                           |\n| MaxDictSize   | Int     | 否        | 1000    | 1000                 | 映射字典的最大大小。默认值为1000，即最多可存储1000条映射规则。 如果要限制插件对服务器内存的占用，可调小该值。                                                       |\n| Mode          | String  | 否        | overwrite        | overwrite                     | 当映射后的字段在原始日志中已存在时的处理方式。<ul><li> overwrite（默认值）：覆写原字段。 </li>  <li>  fill：不覆写原字段。</li></ul>  |\n\n### 字段加密\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值**                          | **示例**             | **说明**                                                                                                                           |\n| --- |------------|-----------|----------------------------------|--------------------|----------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /                                | processor\\_encrypt | 插件类型。固定为processor\\_encrypt。                                                                                                      |\n| SourceKey              | String数组 | 是        |                                  |                    | 原始字段名。                                                                                                                           |\n| EncryptionParameters   | Object   | 是        |                                  |                    | 密钥相关配置。                                                                                                                          |\n| Key                    | String   | 是        |                                  |                    | 设置密钥，需为64个十六进制字符。                                                                                                                |\n| IV                     | String   | 否        | 00000000000000000000000000000000 |                    | 设置加密的初始向量，需为32个十六进制字符，默认值为`00000000000000000000000000000000`。                                                                    |\n| KeyFilePath            | Boolean  | 否        |                                  |                    | 读取加密参数的文件路径。未配置时按照 **Logtail配置-输入配置-文件路径** 读取。                                                                                   |\n| KeepSourceValueIfError | String   | 否        | false                            | false                   | 加密失败，系统是否保留原始字段的值。<ul><li> true：保留。  </li>  <li>false（默认值）：不保留。</li></ul>加密失败后，字段值将被替换为`ENCRYPT_ERROR`。 |\n\n### 字符串替换\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值**                          | **示例**                     | **说明**                                                                                                                                                                                                                                                                                                                                             |\n| --- |------------|-----------|----------------------------------|----------------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /                                | processor\\_string\\_replace | 插件类型。固定为processor\\_string\\_replace。                                                                                                                                                                                                                                                                                                                |\n| SourceKey     | String | 是        | |                            | 原始字段名。                                                                                                                                                                                                                                                                                                                                             |\n| Method       | String | 是        | |                            | 指定匹配方式。可选值：<ul><li>  `const`：使用字符串替换。 </li>  <li> `regex`：使用正则表达式替换。</li>  <li> `unquote`：去除转义符。</li></ul>                                                                                                                                      |\n| Match        | String | 否        | |                            | 输入匹配内容。<ul><li> 设置`Method`为`const`时，输入与待替换内容匹配的字符串。 当多个字符串都匹配时，全部替换。  </li>  <li> 设置`Method`为`regex`时，输入与待替换内容匹配的正则表达式。 当多个字符串都匹配时，全部替换。您也可以用正则分组方式匹配指定的分组。  </li>  <li> 设置`Method`为`unquote`时，无需配置此参数。 </li></ul> |\n| ReplaceString | String | 否        | |                            | 用于替换的字符串，默认值为\"\"。<ul><li> 设置`Method`为`const`时，输入用于替换原内容的字符串。 </li>  <li> 设置`Method`为`regex`时，输入用于替换原内容的字符串，支持根据正则分组进行替换。 </li>  <li>设置`Method`为`unquote`时，无需配置此参数。</li></ul>                                                                    |\n| DestKey      | String | 否        | | | 为替换后的内容指定新字段，默认不新增字段。                                                                                                                                                                                                                                                                                                                              |\n\n### 数据编码与解码\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值** | **示例**                      | **说明**                                                                              |\n| --- |------------|-----------|---------|-----------------------------|-------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /       | processor\\_base64\\_encoding | 插件类型。固定为processor\\_base64\\_encoding。                                                |\n| SourceKey  | String  | 是        |         |                             | 原始字段名。                                                                              |\n| NewKey     | String  | 是        |         |                             | 编码后的结果字段名。                                                                          |\n| NoKeyError | Boolean | 否        | false   | false                       | 原始日志中无您所指定的原始字段时，系统是否报错。<ul><li> true：报错。  </li>  <li> false（默认值）：不报错。 </li>  </ul> |\n\n### Log转为Metric\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值**                                                                                                                                                                                                                                                                              | **示例**                               | **说明**                                                                                                                                                                                                              |\n| --- |------------|-----------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|--------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /                                                                                                                                                                                                                                                                                    | processor\\_log\\_to\\_sls\\_metric      | 插件类型。固定为processor\\_log\\_to\\_sls\\_metric。                                                                                                                                                                            |\n| MetricTimeKey      | String     | 否        |                                                                                                                                                                                                                                                                                      |                                      | 指定日志中的时间字段，该字段将与时序数据中的`__time_nano__` 字段映射。默认提取日志中`__time__`字段的值。 确保指定的字段是合法的、符合格式的时间戳。目前支持以second（10位长度）、millisecond（13位长度）、microsecond（16位长度）、nanosecond（19位长度）为单位的Unix时间戳。                                       |\n| MetricLabelKeys    | \\[\\]String | 是        | |                                      | 指定`__labels__`字段的Key列表，Key需遵循正则表达式` ^[a-zA-Z_][a-zA-Z0-9_]*$`。Value不能包含竖线（\\|）和 `#$#`。更多信息，请参见[时序数据（Metric）](~~171773~~)。 不支持在MetricLabelKeys参数中添加`__labels__`字段。如果原始字段中存在 `__labels__ `字段，该值将被追加到新的`__labels__`字段中。 |\n| MetricValues       | Map        | 是        | |                                      | 用于指定Metric名称和Metric值。 Metric名称对应`__name__`字段，需遵循正则表达式`^[a-zA-Z_:][a-zA-Z0-9_:]*$`。 Metric值对应`__value__`字段，需为Double类型。  更多信息，请参见[时序数据（Metric）](~~171773~~) 。                                                         |\n| CustomMetricLabels | Map        | 否        | |                                      | 自定义的`__labels__`字段， Key需遵循正则表达式 `^[a-zA-Z_][a-zA-Z0-9_]*$`，Value不能包含竖线（\\|）和 `#$#`。更多信息，请参见[时序数据（Metric）](~~171773~~)。                                                                              |\n| IgnoreError        | Boolean    | 否        | | | 当没有匹配日志时是否输出Error日志。默认值为false，表示不输出。                                                                                                                                                                                |\n\n### Log转为Trace\n\n|  **参数**  | **类型**     | **是否必填**  | **默认值**                                                                                                                                         | **示例**                                                                                                                                          | **说明**                                                                                                                                          |\n| --- |------------|-----------|-------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------|\n|  Type  | string     | 是         | /                                                                                                                                               | processor\\_otel\\_trace                                                                                                                          | 插件类型。固定为processor\\_otel\\_trace。                                                                                                                 |\n| SourceKey              | String  | 是        |                                                                                                                                                 |                                                                                                                                                 | 原始字段名。                                                                                                                                          |\n| Format                 | String  | 是        |                                                                                                                                                 | json                                                                                                                                            | 转换后的格式，可选值：protobuf、json、protojson。                                                                                                             |\n| NoKeyError             | Boolean | 否        | false                                                                                                                                           | true                                                                                                                                            | 当日志中没有对应的原始字段时，是否报错。默认值为false。                                                                                                                  |\n| TraceIDNeedDecode      | Boolean | 否        | |                                                                                                                                                 | 是否对TraceID进行Base64解码，默认值为false。 设置Format为protojson时，如果TraceID已进行过Base64编码，则需要设置TraceIDNeedDecode为true，否则将导致转换失败。                |\n| SpanIDNeedDecode       | Boolean | 否        | |                                                                                                                                                 | 是否对SpanID进行Base64解码。默认值为false。设置Format为protojson时，如果SpanID已进行过Base64编码，则需要设置SpanIDNeedDecode为true，否则将导致转换失败。                   |\n| ParentSpanIDNeedDecode | Boolean | 否        | | | 是否对ParentSpanID进行Base64解码。默认值为false。 设置Format为protojson时，如果ParentSpanID已进行过Base64编码，则需要设置ParentSpanIDNeedDecode为true，否则将导致转换失败。 |\n\n\n\n## 输出插件\n\n### SLS输出插件\n\n|  **参数**  |  **类型**  |  **是否必填**  |  **默认值**  |  **示例**  |  **说明**  |\n| --- | --- | --- | --- | --- | --- |\n|  Type  |  string  |  是  |  /  |  flusher\\_sls  |  插件类型。固定为flusher\\_sls。  |\n|  Logstore  |  stirng  |  是  |  /  |  test-logstore  |  LogStrore名称。  |"},"GetConfig":{"summary":"调用GetConfig接口获取Logtail配置的详细信息。","path":"/configs/{configName}","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"9089","abilityTreeNodes":["FEATUREslsYP6SBU"]},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"configName","in":"path","schema":{"description":"Logtail配置名称。","type":"string","required":true,"example":"logtail-config-sample"}}],"responses":{"200":{"headers":{"Server":{"schema":{"type":"string","example":"nginx"}},"Content-Type":{"schema":{"type":"string","example":"application/json"}},"Content-Length":{"schema":{"type":"string","example":"0"}},"Connection":{"schema":{"type":"string","example":"close"}},"Date":{"schema":{"type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"Logtail配置数据结构。","$ref":"#/components/schemas/LogtailConfig"}}},"eventInfo":{"enable":false,"eventNames":[]},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"configName\\\": \\\"test-config\\\",\\n  \\\"logSample\\\": \\\"2022-06-14 11:13:29.796 | DEBUG    | __main__:<module>:1 - hello world\\\",\\n  \\\"inputType\\\": \\\"file\\\",\\n  \\\"inputDetail\\\": {\\n    \\\"test\\\": \\\"test\\\",\\n    \\\"test2\\\": 1\\n  },\\n  \\\"outputType\\\": \\\"LogService\\\",\\n  \\\"outputDetail\\\": {\\n    \\\"endpoint\\\": \\\"cn-hangzhou-intranet.log.aliyuncs.com\\\",\\n    \\\"logstoreName\\\": \\\"test-logstore\\\",\\n    \\\"region\\\": \\\"cn-hangzhou\\\",\\n    \\\"telemetryType\\\": \\\"logs\\\"\\n  },\\n  \\\"createTime\\\": 1655176807,\\n  \\\"lastModifyTime\\\": 1655176807\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"获取Logtail采集配置","description":"### 接口说明\n\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。\n\n- 已获取Logtail采集配置名称。更多信息，请参见[ListConfig](~~29043~~)。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | ConfigNotExist| Config configName does not exist.  | Logtail配置不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"ListConfig":{"summary":"调用ListConfig接口查询指定Project下所有的Logtail配置。","path":"/configs","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"list","abilityTreeCode":"8980","abilityTreeNodes":["FEATUREslsYP6SBU"]},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstoreName","in":"query","schema":{"description":"Logstore名称。","type":"string","required":true,"example":"ali-test-logstore"}},{"name":"offset","in":"query","schema":{"description":"查询开始行。默认值为0。","type":"integer","format":"int64","required":true,"example":"0"}},{"name":"size","in":"query","schema":{"description":"分页查询时，设置的每页行数。最大值为500。","type":"integer","format":"int64","required":true,"example":"10"}},{"name":"configName","in":"query","schema":{"title":"可以进行名字匹配","description":"Logtail配置名称，用于模糊搜索。","type":"string","required":false,"example":"logtail-config-sample"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"type":"object","properties":{"count":{"description":"当前页返回的Logtail配置数量。","type":"integer","format":"int32","example":"3"},"total":{"description":"符合查询条件的Logtail配置总数。","type":"integer","format":"int32","example":"2"},"configs":{"description":"当前页返回的Logtail配置列表。","type":"array","items":{"description":"查询出来的Logtail配置列表。","type":"string","example":"logtail-config-sample"}}}}}},"eventInfo":{"enable":false,"eventNames":[]},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"count\\\": 3,\\n  \\\"total\\\": 2,\\n  \\\"configs\\\": [\\n    \\\"logtail-config-sample\\\"\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"查询Logtail配置列表","description":"### 接口说明\n\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist| The Project does not exist : projectName  | Project不存在。  |\n| 404  | LogStoreNotExist| Logstore logstoreName does not exist.  | Logstore不存在。  |\n| 404  | ConfigNotExist|config configName does not exist.  | Logtail配置不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"GetLogtailPipelineConfig":{"summary":"获取Logtail流水线配置。","path":"/pipelineconfigs/{configName}","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","riskType":"none","chargeType":"free"},"parameters":[{"name":"project","in":"host","schema":{"title":"Project名称","description":"Project名称","type":"string","required":true,"example":"test-project"}},{"name":"configName","in":"path","schema":{"title":"Logtail流水线配置名称","description":"Logtail流水线配置名称","type":"string","required":true,"example":"test-config","pattern":"^[0-9a-zA-Z][0-9a-zA-Z-_]{0,126}[0-9a-zA-Z]$"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"Logtail流水线配置","$ref":"#/components/schemas/LogtailPipelineConfig"}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"configName\\\": \\\"test-config\\\",\\n  \\\"logSample\\\": \\\"127.0.0.1 - - [10/Jun/2022:12:36:49 +0800] \\\\\\\"GET /index.html HTTP/1.1\\\\\\\" 200\\\",\\n  \\\"global\\\": {\\n    \\\"test\\\": \\\"test\\\",\\n    \\\"test2\\\": 1\\n  },\\n  \\\"inputs\\\": [\\n    {\\n      \\\"Type\\\": \\\"input_file\\\",\\n      \\\"FilePaths\\\": [\\n        \\\"/var/log/*.log\\\"\\n      ]\\n    }\\n  ],\\n  \\\"processors\\\": [\\n    {\\n      \\\"Type\\\": \\\"processor_parse_json_native\\\",\\n      \\\"SourceKey\\\": \\\"content\\\"\\n    }\\n  ],\\n  \\\"aggregators\\\": [\\n    {\\n      \\\"test\\\": \\\"test\\\",\\n      \\\"test2\\\": 1\\n    }\\n  ],\\n  \\\"flushers\\\": [\\n    {\\n      \\\"Type\\\": \\\"flusher_sls\\\",\\n      \\\"Project\\\": \\\"test_project\\\",\\n      \\\"Logstore\\\": \\\"test\\\",\\n      \\\"Region\\\": \\\"cn-hangzhou\\\",\\n      \\\"Endpoint\\\": \\\"cn-hangzhou-intranet.log.aliyuncs.com\\\",\\n      \\\"TelemetryType\\\": \\\"log\\\"\\n    }\\n  ],\\n  \\\"createTime\\\": 1655176807,\\n  \\\"lastModifyTime\\\": 1655176807\\n}\",\"type\":\"json\"}]","title":"获取Logtail流水线配置"},"ListLogtailPipelineConfig":{"summary":"列举指定条件下的Logtail流水线配置名称。","path":"/pipelineconfigs","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"list","riskType":"none","chargeType":"free"},"parameters":[{"name":"project","in":"host","schema":{"title":"Project名称","description":"Project名称","type":"string","required":true,"example":"test-project"}},{"name":"offset","in":"query","schema":{"title":"起始行","description":"起始行","type":"integer","format":"int64","required":false,"minimum":"0","example":"0","default":"0"}},{"name":"size","in":"query","allowEmptyValue":false,"schema":{"title":"每页的流水线配置数量","description":"每页的流水线配置数量","type":"integer","format":"int64","required":false,"maximum":"500","minimum":"0","example":"20","default":"500"}},{"name":"logstoreName","in":"query","allowEmptyValue":false,"schema":{"title":"logstore名称","description":"logstore名称","type":"string","required":false,"example":"test-logstore"}},{"name":"configName","in":"query","schema":{"title":"流水线配置名称","description":"流水线配置名称","type":"string","required":false,"example":"logtail-config-sample"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"title":"","description":"","type":"object","properties":{"count":{"title":"当前页返回的Logtail流水线配置数量","description":"当前页返回的Logtail流水线配置数量","type":"integer","format":"int32","example":"10"},"total":{"title":"当前Project下的Logtail流水线配置总数","description":"当前Project下的Logtail流水线配置总数","type":"integer","format":"int32","example":"20"},"configs":{"title":"当前页返回的Logtail流水线配置列表","description":"当前页返回的Logtail流水线配置列表","type":"array","items":{"title":"Logtail流水线配置名称","description":"Logtail流水线配置名称","type":"string","example":"test_logstore"}}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"count\\\": 10,\\n  \\\"total\\\": 20,\\n  \\\"configs\\\": [\\n    \\\"test_logstore\\\"\\n  ]\\n}\",\"type\":\"json\"}]","title":"罗列Logtail流水线配置"},"CreateDashboard":{"summary":"创建仪表盘。","path":"/dashboards","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","abilityTreeCode":"10278","abilityTreeNodes":["FEATUREslsMYXSJS"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"body","in":"body","style":"json","schema":{"description":"仪表盘数据结构。","required":true,"$ref":"#/components/schemas/dashboard"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"eventInfo":{"enable":false,"eventNames":[]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建仪表盘","description":"### 接口说明\n\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。"},"DeleteDashboard":{"summary":"删除指定仪表盘。","path":"/dashboards/{dashboardName}","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete","abilityTreeCode":"10280","abilityTreeNodes":["FEATUREslsMYXSJS"]},"parameters":[{"name":"project","in":"host","schema":{"title":"Project name","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"dashboardName","in":"path","schema":{"title":"Dashboard name","description":"仪表盘名称。","type":"string","required":true,"example":"dashboard-1609294922657-434834"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"eventInfo":{"enable":false,"eventNames":[]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除仪表盘","description":"### 接口说明\n\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。"},"UpdateDashboard":{"summary":"更新仪表盘。","path":"/dashboards/{dashboardName}","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","abilityTreeCode":"10279","abilityTreeNodes":["FEATUREslsMYXSJS"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"dashboardName","in":"path","schema":{"description":"仪表盘名称。","type":"string","required":true,"example":"dashboard-1609294922657-434834"}},{"name":"body","in":"body","style":"json","schema":{"description":"仪表盘数据结构。","type":"object","properties":{"dashboardName":{"title":"内部名称","description":"仪表盘名称。","type":"string","required":true,"example":"dashboard-1609294922657-434834"},"displayName":{"title":"展示名称","description":"仪表盘显示名称。","type":"string","required":true,"example":"Method pv"},"description":{"title":"描述信息","description":"仪表盘描述信息。","type":"string","required":false,"example":"test dashboard."},"attribute":{"title":"属性值","description":"仪表盘属性值。","type":"object","required":false,"additionalProperties":{"type":"string","example":"“”","description":"仪表盘的属性值。"}},"charts":{"title":"包含的图表","description":"包含的图表。","type":"array","items":{"description":"图表数据结构。","required":false,"$ref":"#/components/schemas/chart"},"required":true}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新仪表盘","description":"### 接口说明\nHost由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。"},"GetDashboard":{"summary":"获取指定仪表盘。","path":"/dashboards/{dashboardName}","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"10281","abilityTreeNodes":["FEATUREslsMYXSJS"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"dashboardName","in":"path","schema":{"title":"A short description of struct","description":"仪表盘名称。","type":"string","required":true,"example":"dashboard-1609294922657-434834"}}],"responses":{"200":{"headers":{"Server":{"schema":{"type":"string","example":"nginx"}},"Content-Length":{"schema":{"type":"string","example":"0"}},"Connection":{"schema":{"type":"string","example":"close"}},"Date":{"schema":{"type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"仪表盘数据结构。","$ref":"#/components/schemas/dashboard"}}},"eventInfo":{"enable":false,"eventNames":[]},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"dashboardName\\\": \\\"dashboard-1609294922657-434834\\\",\\n  \\\"displayName\\\": \\\"test-alert\\\",\\n  \\\"description\\\": \\\"这是一个仪表盘。\\\",\\n  \\\"attribute\\\": {\\n    \\\"key\\\": \\\"\\\"\\n  },\\n  \\\"charts\\\": [\\n    {\\n      \\\"title\\\": \\\"my-chart\\\",\\n      \\\"type\\\": \\\"linepro\\\",\\n      \\\"search\\\": {\\n        \\\"test\\\": \\\"test\\\",\\n        \\\"test2\\\": 1\\n      },\\n      \\\"display\\\": {\\n        \\\"test\\\": \\\"test\\\",\\n        \\\"test2\\\": 1\\n      },\\n      \\\"action\\\": {\\n        \\\"test\\\": \\\"test\\\",\\n        \\\"test2\\\": 1\\n      }\\n    }\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"获取指定仪表盘","description":"### 接口说明\n\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。"},"ListDashboard":{"summary":"查询仪表盘。","path":"/dashboards","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"list","abilityTreeCode":"10283","abilityTreeNodes":["FEATUREslsHU53H2"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"offset","in":"query","schema":{"description":"查询开始行。默认值为0。","type":"integer","format":"int32","required":false,"example":"0","default":"0"}},{"name":"size","in":"query","schema":{"title":"默认值为 500。","description":"分页查询时，设置的每页行数。最大值为500。默认值为500。","type":"integer","format":"int32","required":false,"example":"10","default":"500"}},{"name":"tags","in":"query","style":"json","schema":{"type":"array","items":{"type":"object","properties":{"key":{"type":"string","required":false},"value":{"type":"string","required":false}},"required":false},"required":false}},{"name":"dashboardName","in":"query","schema":{"type":"string","required":false}},{"name":"displayName","in":"query","schema":{"type":"string","required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"仪表盘。","type":"object","properties":{"dashboards":{"title":"dashboard 的名字列表，对应 dashboardName","description":"仪表盘的名字列表，对应dashboardName。","type":"array","items":{"description":"仪表盘的名字列表，对应dashboardName。","type":"string","example":"dashboard-1609294922657-434834"}},"dashboardItems":{"description":"仪表盘。","type":"array","items":{"description":"仪表盘。","type":"object","properties":{"dashboardName":{"description":"仪表盘ID。同一个Project下，仪表盘ID唯一，不可重复。支持模糊查询，例如输入da，会查询出所有以da开头的仪表盘。","type":"string","example":"dashboard-1609294922657-434834"},"displayName":{"description":"仪表盘显示名称。","type":"string","example":"data-ingest"},"description":{"type":"string"}}}}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"dashboards\\\": [\\n    \\\"dashboard-1609294922657-434834\\\"\\n  ],\\n  \\\"dashboardItems\\\": [\\n    {\\n      \\\"dashboardName\\\": \\\"dashboard-1609294922657-434834\\\",\\n      \\\"displayName\\\": \\\"data-ingest\\\",\\n      \\\"description\\\": \\\"\\\"\\n    }\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"查询仪表盘","description":"### 接口说明\n\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n|  400 |  ParameterInvalid |  offset: offset is invalid. |offset参数取值无效。|\n|  400 |  ParameterInvalid |  size: size is invalid. |size参数取值无效。|\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"CreateConsumerGroup":{"summary":"在指定的Logstore上创建一个消费组。","path":"/logstores/{logstore}/consumergroups","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create"},"parameters":[{"name":"logstore","in":"path","schema":{"description":"Logstore名称。","type":"string","required":true,"example":"aliyun-test-logstore"}},{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"aliyun-test-project"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求体参数。","type":"object","properties":{"consumerGroup":{"description":"消费组名称，在Project下必须唯一。","type":"string","required":true,"example":"consumerGroupX"},"timeout":{"description":"超时时间。在超时时间段内没有收到心跳，消费者将被删除。单位：秒。","type":"integer","format":"int32","required":true,"example":"300"},"order":{"description":"是否按顺序消费。\n\n- true：按顺序消费。\n    - 同一个Shard内按照保留字段**\\_\\_tag\\_\\_:\\_\\_receive\\_time\\_\\_**由小到大按顺序消费。\n    - Shard分裂后，先消费原Shard数据，然后同时消费由该Shard分裂的Shard数据。\n    - Shard合并后，先消费原Shard数据，然后消费由原Shard合并后的新Shard数据。\n- false：不按顺序消费。即所有Shard同时开始消费，Shard分裂或者合并后产生的新Shard，也会立即消费。","type":"boolean","required":true,"example":"true"}},"required":true}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建消费组","description":"### 接口说明\n\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 每个Logstore中最多创建30个消费组。消费组名称，在Project下必须唯一。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n- 日志服务提供基于Java SDK的普通消费和消费组消费日志使用示例。更多信息，请参见[普通消费](~~120035~~)和[通过消费组消费日志数据](~~28998~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:CreateConsumerGroup`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/logstore/{#logstoreName}/consumergroup/{#ConsumerGroup}`  |","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n| 400  | ConsumerGroupAlreadyExist  | consumer group already exist.| 消费组已存在。  |\n| 400  |  JsonInfoInvalid |  consumerGroup or timeout is of error format. | 参数consumerGroup或timeout格式错误。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"DeleteConsumerGroup":{"summary":"删除一个指定的消费组。","path":"/logstores/{logstore}/consumergroups/{consumerGroup}","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete"},"parameters":[{"name":"project","in":"host","schema":{"title":"Project name","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"title":"Logstore name","description":"Logstore名称。","type":"string","required":true,"example":"ali-test-logstore"}},{"name":"consumerGroup","in":"path","schema":{"title":"Consumer group","description":"消费组名称。","type":"string","required":true,"example":"consumer-group-1"}}],"responses":{"200":{"headers":{"Server":{"schema":{"type":"string","example":"nginx"}},"Content-Length":{"schema":{"type":"string","example":"0"}},"Connection":{"schema":{"type":"string","example":"close"}},"Access-Control-Allow-Origin":{"schema":{"type":"string","example":"*"}},"Date":{"schema":{"type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除消费组","description":"### 接口说明\n\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n- 已获取消费组名称。更多信息，请参见[ListConsumerGroup](~~74964~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:DeleteConsumerGroup`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/logstore/{#logstoreName}/consumergroup/{#ConsumerGroup}`  |","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。\n"},"ConsumerGroupUpdateCheckPoint":{"summary":"更新指定消费组消费数据时Shard的checkpoint。","path":"/logstores/{logstore}/consumergroups/{consumerGroup}?type=checkpoint","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","riskType":"none","chargeType":"free","abilityTreeCode":"155573","abilityTreeNodes":["FEATUREslsD1VSU4"]},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"description":"Logstore名称。","type":"string","required":true,"example":"ali-test-logstore"}},{"name":"consumerGroup","in":"path","schema":{"description":"消费组名称。","type":"string","required":true,"example":"consumer_group_test"}},{"name":"consumer","in":"query","schema":{"description":"消费者。","type":"string","required":true,"example":"consumer_1"}},{"name":"forceSuccess","in":"query","schema":{"description":"是否强制更新。\n  - true：强制更新\n  - false：不强制更新","type":"boolean","required":false,"example":"true"}},{"name":"body","in":"body","style":"json","schema":{"description":"Shard ID。","type":"object","properties":{"shard":{"description":"Shard ID。","type":"integer","format":"int32","required":true,"example":"0"},"checkpoint":{"description":"checkpoint值。","type":"string","required":true,"example":"MTUyNDE1NTM3OTM3MzkwODQ5Ng=="}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新消费进度","description":"### 接口说明\n\n- 当不指定消费者时，必须指定**forceSuccess**为**true**才能更新checkpoint。\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 400  | InvalidShardCheckPoint|  shard checkpoint not encoded by base64. |checkpoint不是Base64编码，格式错误。  |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n| 404  | ConsumerGroupNotExist| consumer group not exist. | 消费组不存在。  |\n| 404  | ConsumerNotExist| consumer not exist in the consumer group.| 消费组中不存在该消费者。  |\n| 404  | ShardNotExist| shard not exist.| Shard不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"UpdateConsumerGroup":{"summary":"修改指定消费组属性。","path":"/logstores/{logstore}/consumergroups/{consumerGroup}","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update"},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"description":"Logstore名称。","type":"string","required":true,"example":"logstore-test"}},{"name":"consumerGroup","in":"path","schema":{"description":"消费组名称。","type":"string","required":true,"example":"consumer-group-1"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求体参数。order和timeout至少一个有值。","type":"object","properties":{"order":{"description":"是否按顺序消费。\n\n- true：在Shard中按顺序消费。Shard分裂后，先消费原Shard数据，然后同时消费由该Shard分裂的Shard数据。Shard合并后，先消费原Shard数据，然后消费由原Shard合并后的新Shard数据。\n- false：不按顺序消费。即所有同时开始消费，Shard分裂或者合并后产生的新Shard，也会立即消费。","type":"boolean","required":false,"example":"true"},"timeout":{"description":"超时时间。在超时时间段内没有收到心跳，消费者将被删除。单位：秒。","type":"integer","format":"int32","required":false,"example":"300"}},"required":true}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新消费者组","description":"### 接口说明\n\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:UpdateConsumerGroup`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/logstore/{#logstoreName}/consumergroup/{#ConsumerGroup}`  |","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 400  | JsonInfoInvalid|  timeout is of error value type. | 参数timeout类型错误。  |\n| 400  |  ConsumerGroupNotExist |  consumer group not exist. | 消费组不存在。  |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。\n"},"ConsumerGroupHeartBeat":{"summary":"消费者发送心跳到服务端。","path":"/logstores/{logstore}/consumergroups/{consumerGroup}?type=heartbeat","methods":["post"],"schemes":["https","http"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none"},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"description":"Logstore名称。","type":"string","required":true,"example":"ali-test-logstore"}},{"name":"consumerGroup","in":"path","schema":{"description":"消费组名称，同一Project中消费组名称为唯一值。","type":"string","required":true,"example":"consumer_group_test"}},{"name":"consumer","in":"query","schema":{"description":"消费者。","type":"string","required":true,"example":"consumer_1"}},{"name":"body","in":"body","style":"json","schema":{"description":"正在消费的Shard ID列表。","type":"array","items":{"description":"正在消费的Shard ID列表。","type":"integer","format":"int32","required":false,"example":"[0]"},"required":true}}],"responses":{"200":{"headers":{"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"Server":{"schema":{"title":"服务器名称。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}}},"schema":{"description":"消费者消费的所有Shard ID列表。","type":"array","items":{"description":"消费者消费的所有Shard ID列表。","type":"integer","format":"int32","example":"[0]"}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"[\\n  0\\n]\",\"type\":\"json\"}]","title":"消费者发送心跳到服务端","description":"### 接口说明\n\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 消费者和服务端通过固定时间发送心跳建立连接。在固定时间段内没有收到心跳，消费者将被删除。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n\n- 已获取消费组名称。更多信息，请参见[ListConsumerGroup](~~74964~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:ConsumerGroupHeartBeat`  | `acs:log:${regionId}:${accountId}:project/{#ProjectName}/logstore/{#LogstoreName}/consumergroup/{#ConsumerGroupName}`  |","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 400| NotExistConsumerWithBody| non-exist consumer with non-empty body of heartbeat message.  | 不存在非空心跳消息的消费者。请求参数中的Shard实际分配的消费者，与请求参数中的消费者不一致。可能原因是和服务端心跳断开后，Shard已经分配给其他消费者，建议传入空Shard列表。  |\n| 404| ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n| 404  | ConsumerGroupNotExist| consumer group not exist.  | 消费组不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"ListConsumerGroup":{"summary":"查询指定Logstore的所有消费组。","path":"/logstores/{logstore}/consumergroups","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"title":"Project name","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"title":"Logstore name","description":"Logstore名称。","type":"string","required":true,"example":"ali-test-logstore"}}],"responses":{"200":{"schema":{"description":"消费组列表。","type":"array","items":{"description":"消费组结构体。","example":"test-consumer-group","$ref":"#/components/schemas/ConsumerGroup"},"example":"[{''name'': ''test-consumer-group'', ''timeout'': 30, ''order'': False}]"}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"[\\n  {\\n    \\\"name\\\": \\\"test-group\\\",\\n    \\\"timeout\\\": 300,\\n    \\\"order\\\": false\\n  }\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"查询消费组","description":"### 接口说明\n\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:ListConsumerGroup`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/logstore/{#LogstoreName}/consumergroup/*`  |","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。\n"},"GetCheckPoint":{"summary":"调用GetCheckPoint接口获取指定消费组消费数据时Shard的checkpoint。","path":"/logstores/{logstore}/consumergroups/{consumerGroup}","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"title":"project 名称。","description":"Project 名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"title":"logstore 名称。","description":"Logstore名称。","type":"string","required":true,"example":"test-logstore"}},{"name":"consumerGroup","in":"path","schema":{"title":"消费组名称。","description":"消费组名称。","type":"string","required":true,"example":"consumer-group-1"}},{"name":"shard","in":"query","schema":{"title":"Shard ID。\n如果指定的Shard不存在，则返回空列表。\n如果不指定Shard，则返回所有Shard的checkpoint。","description":"Shard ID。\n\n- 如果指定的Shard不存在，则返回空列表。\n- 如果不指定Shard，则返回所有Shard的Checkpoint。","type":"integer","format":"int32","required":false,"example":"1"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"title":"指定消费组消费数据时 Shard 的 checkpoint 列表。","description":"指定消费组消费数据时Shard的Checkpoint 列表。","type":"array","items":{"title":"checkpoint 结构体。","description":"Checkpoint结构体。","type":"object","properties":{"shard":{"title":"shard id。","description":"Shard ID。","type":"integer","format":"int32","example":"0"},"checkpoint":{"title":"checkpoint 值。","description":"Checkpoint值。","type":"string","example":"MTUyNDE1NTM3OTM3MzkwODQ5Ng=="},"updateTime":{"title":"checkpoint最后的更新时间。Unix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","description":"Checkpoint最后的更新时间。Unix时间戳格式，表示从1970-1-1 00:00:00 UTC计算起的秒数。","type":"integer","format":"int64","example":"1524224984800922"},"consumer":{"title":"消费者。","description":"Checkpoint处的消费者。","type":"string","example":"consumer_1"}}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"[\\n  {\\n    \\\"shard\\\": 0,\\n    \\\"checkpoint\\\": \\\"MTUyNDE1NTM3OTM3MzkwODQ5Ng==\\\",\\n    \\\"updateTime\\\": 1524224984800922,\\n    \\\"consumer\\\": \\\"consumer_1\\\"\\n  }\\n]\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"获取指定消费组的消费点","description":"### 接口说明\n\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n- 已获取消费组名称。更多信息，请参见[ListConsumerGroup](~~74964~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:GetConsumerGroupCheckPoint`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/logstore/{#logstoreName}/consumergroup/{#ConsumerGroup}`  |","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist  | Project does not exist.  | Project不存在。  |\n| 404  | LogStoreNotExist  | Logstore does not exist.  | Logstore不存在。  |\n|  404 |  ConsumerGroupNotExist|  consumer group not exist.| 消费组不存在。 |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"CreateSavedSearch":{"summary":"创建一个快速查询。","path":"/savedsearches","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","abilityTreeCode":"10284","abilityTreeNodes":["FEATUREslsL870A3"]},"parameters":[{"name":"body","in":"body","style":"json","schema":{"title":"A short description of struct","description":"快速查询结构体。","type":"object","properties":{"savedsearchName":{"description":"快速查询的名称。名称长度为3~63个字符。","type":"string","required":true,"example":"pv in minutes"},"searchQuery":{"description":"快速查询的查询和分析语句。由查询语句和分析语句构成，格式为`查询语句|分析语句`。\n查询语句或者分析语句。更多信息，请参见[查询语法](~~43772~~)和[分析语法](~~53608~~)。","type":"string","required":true,"example":"*|select date_format(__time__-__time__%60, '%H:%i:%s') as time, COUNT(*) as pv group by time"},"logstore":{"description":"快速查询所属的Logstore名称。","type":"string","required":true,"example":"aliyun-test-logstore"},"topic":{"description":"日志主题。","type":"string","required":true,"example":"theme"},"displayName":{"description":"显示名称。","type":"string","required":true,"example":"displayname"}},"required":true}},{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"eventInfo":{"enable":false,"eventNames":[]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建快速查询","description":"### 接口说明\n\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n- 日志服务查询日志时存在使用限制。请设计合理查询与分析语句、设置合理查询区间等。更多信息，请参见[查询日志使用限制](~~43772~~)和[分析日志使用限制](~~53608~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:CreateSavedSearch`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/savedsearch/{#SavedSearchName}`  |"},"DeleteSavedSearch":{"summary":"删除一个快速查询。","path":"/savedsearches/{savedsearchName}","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete"},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"savedsearchName","in":"path","schema":{"description":"待删除的快速查询名称。","type":"string","required":true,"example":"test-savedsearch-name"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除快速查询","description":"### 接口说明\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n- 删除快速查询后，无法恢复。请您谨慎操作。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:DeleteSavedSearch`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/savedsearch/{#SavedSearchName}`  |"},"UpdateSavedSearch":{"summary":"调用UpdateSavedSearch接口更新快速查询。","path":"/savedsearches/{savedsearchName}","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update"},"parameters":[{"name":"project","in":"host","schema":{"title":"Project 名称。","description":"Project名称。","type":"string","required":true,"example":"my-project"}},{"name":"savedsearchName","in":"path","schema":{"description":"要更新的快速查询的名称。","type":"string","required":true,"example":"savedsearch-name"}},{"name":"body","in":"body","style":"json","schema":{"description":"快速查询结构体。","type":"object","properties":{"savedsearchName":{"description":"快速查询的名称。名称长度为3~63个字符。","type":"string","required":true,"example":"savedsearch-name"},"searchQuery":{"description":"快速查询的查询和分析语句。由查询语句和分析语句构成，格式为查询语句|分析语句。更多信息，请参见[查询语法](~~43772~~)和[分析语法](~~53608~~)。","type":"string","required":true,"example":"*|select date_format(__time__-__time__%60, '%H:%i:%s') as time, COUNT(*) as pv group by time"},"logstore":{"description":"快速查询所属的Logstore名称。","type":"string","required":true,"example":"aliyun-test-logstore"},"topic":{"description":"日志主题。","type":"string","required":false,"example":"theme"},"displayName":{"description":"显示名称。","type":"string","required":true,"example":"displayname"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新快速查询","description":"### 接口说明\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n- 日志服务查询日志时存在使用限制。请设计合理查询与分析语句、设置合理查询区间等。更多信息，请参见[查询日志使用限制](~~43772~~)和[分析日志使用限制](~~53608~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:UpdateSavedSearch`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/savedsearch/{#SavedSearchName}`  |\n"},"ListSavedSearch":{"summary":"查询快速查询列表。","path":"/savedsearches","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称。","type":"string","required":true,"example":"aliyun-test-project"}},{"name":"offset","in":"query","schema":{"description":"查询开始行。默认值为0。","type":"integer","format":"int32","required":false,"example":"0","default":"0"}},{"name":"size","in":"query","schema":{"title":"默认值为 500。","description":"分页查询时，设置的每页行数。最大值为500。","type":"integer","format":"int32","required":false,"example":"10","default":"500"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"type":"object","properties":{"total":{"description":"符合查询条件的快速查询总数。","type":"integer","format":"int32","example":"4"},"count":{"description":"当前页返回的快速查询个数。","type":"integer","format":"int32","example":"4"},"savedsearchItems":{"description":"快速查询列表。","type":"array","items":{"description":"快速查询。","example":"test-1","$ref":"#/components/schemas/SavedSearch"},"example":"[ \"test-1\", \"test-2\" ]"}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"total\\\": 4,\\n  \\\"count\\\": 4,\\n  \\\"savedsearchItems\\\": [\\n    {\\n      \\\"savedsearchName\\\": \\\"\\\",\\n      \\\"searchQuery\\\": \\\"\\\",\\n      \\\"logstore\\\": \\\"\\\",\\n      \\\"topic\\\": \\\"\\\",\\n      \\\"displayName\\\": \\\"\\\"\\n    }\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"查询快速查询","description":"### 接口说明\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:ListSavedSearch`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/savedsearch/*`  |"},"GetSavedSearch":{"summary":"获取指定的快速查询。","path":"/savedsearches/{savedsearchName}","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称。","type":"string","required":true,"example":"aliyun-test-project"}},{"name":"savedsearchName","in":"path","schema":{"description":"快速查询名称。","type":"string","required":true,"example":"savedsearch-name"}}],"responses":{"200":{"headers":{"Server":{"schema":{"type":"string","example":"nginx"}},"Content-Length":{"schema":{"type":"string","example":"0"}},"Connection":{"schema":{"type":"string","example":"close"}},"Date":{"schema":{"type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"快速查询结构体。","example":"saved-search","$ref":"#/components/schemas/SavedSearch"}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"savedsearchName\\\": \\\"\\\",\\n  \\\"searchQuery\\\": \\\"\\\",\\n  \\\"logstore\\\": \\\"\\\",\\n  \\\"topic\\\": \\\"\\\",\\n  \\\"displayName\\\": \\\"\\\"\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"获取指定快速查询","description":"### 接口说明\n- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n- 您可以通过ListSavedSearch查询具体的快速查询名称。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:GetSavedSearch`  | `acs:log:{#regionId}:{#accountId}:project/{#ProjectName}/savedsearch/{#SavedSearchName}`  |"},"CreateAlert":{"summary":"在指定Project下创建一个告警规则。","path":"/alerts","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","abilityTreeCode":"200211","abilityTreeNodes":["FEATUREsls7LA3N2"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project\n"}},{"name":"body","in":"body","style":"json","schema":{"description":"告警规则配置","type":"object","properties":{"name":{"description":"告警名称，project下唯一","type":"string","required":true,"example":"alert-123456"},"displayName":{"description":"告警显示名称","type":"string","required":true,"example":"test-alert"},"description":{"description":"告警描述","type":"string","required":false,"example":"一条告警规则"},"configuration":{"description":"告警详细配置","required":true,"$ref":"#/components/schemas/AlertConfiguration"},"schedule":{"description":"告警调度配置","required":true,"$ref":"#/components/schemas/Schedule"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建告警规则","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist | Project does not exist.  | Project不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"DeleteAlert":{"summary":"删除指定的告警规则。","path":"/alerts/{alertName}","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete","abilityTreeCode":"200218","abilityTreeNodes":["FEATUREsls7LA3N2"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project"}},{"name":"alertName","in":"path","schema":{"description":"告警规则ID","type":"string","required":true,"example":"alert-0123456789-123456"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除告警规则","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist | Project does not exist.  | Project不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"UpdateAlert":{"summary":"更新指定的告警规则。","path":"/alerts/{alertName}","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","abilityTreeCode":"200217","abilityTreeNodes":["FEATUREsls7LA3N2"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project"}},{"name":"alertName","in":"path","schema":{"description":"告警规则ID","type":"string","required":true,"example":"alert-0123456789-123456"}},{"name":"body","in":"body","style":"json","schema":{"description":"更新告警规则的配置","type":"object","properties":{"displayName":{"description":"告警显示名称","type":"string","required":true,"example":"this is alert"},"description":{"description":"告警描述","type":"string","required":false,"example":"this is description"},"configuration":{"description":"告警详细配置","required":true,"$ref":"#/components/schemas/AlertConfiguration"},"schedule":{"description":"告警调度配置","required":true,"$ref":"#/components/schemas/Schedule"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新告警规则","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist | Project does not exist.  | Project不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"EnableAlert":{"summary":"开启指定的告警规则。","path":"/alerts/{alertName}?action=enable","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"200854","abilityTreeNodes":["FEATUREsls7LA3N2"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project"}},{"name":"alertName","in":"path","schema":{"description":"告警规则ID","type":"string","required":true,"example":"alert-0123456789-123456"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"开启告警规则"},"DisableAlert":{"summary":"关闭指定的告警规则。","path":"/alerts/{alertName}?action=disable","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"200858","abilityTreeNodes":["FEATUREsls7LA3N2"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project\n"}},{"name":"alertName","in":"path","schema":{"description":"告警规则ID","type":"string","required":true,"example":"alert-0123456789-123456\n"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"关闭告警规则","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist | Project does not exist.  | Project不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"GetAlert":{"summary":"获取指定的告警规则。","path":"/alerts/{alertName}","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"200220","abilityTreeNodes":["FEATUREsls7LA3N2"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project\n"}},{"name":"alertName","in":"path","schema":{"description":"告警规则ID","type":"string","required":true,"example":"alert-0123456789-123456"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"告警规则配置","$ref":"#/components/schemas/Alert"}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"name\\\": \\\"alert-123456\\\",\\n  \\\"displayName\\\": \\\"alertNameExample\\\",\\n  \\\"description\\\": \\\"Alert Desc\\\",\\n  \\\"configuration\\\": {\\n    \\\"muteUntil\\\": 1698907508,\\n    \\\"version\\\": \\\"2.0\\\",\\n    \\\"type\\\": \\\"default\\\",\\n    \\\"templateConfiguration\\\": {\\n      \\\"id\\\": \\\"sls.app.ack.ip.not_enough\\\",\\n      \\\"type\\\": \\\"sys\\\",\\n      \\\"version\\\": \\\"1\\\",\\n      \\\"lang\\\": \\\"cn\\\",\\n      \\\"tokens\\\": {\\n        \\\"test\\\": \\\"test\\\",\\n        \\\"test2\\\": 1\\n      },\\n      \\\"aonotations\\\": {\\n        \\\"test\\\": \\\"test\\\",\\n        \\\"test2\\\": 1\\n      }\\n    },\\n    \\\"dashboard\\\": \\\"dasnboardExample\\\",\\n    \\\"threshold\\\": 1,\\n    \\\"noDataFire\\\": false,\\n    \\\"noDataSeverity\\\": 6,\\n    \\\"sendResolved\\\": false,\\n    \\\"queryList\\\": [\\n      {\\n        \\\"chartTitle\\\": \\\"chartExmaple\\\",\\n        \\\"query\\\": \\\"* | select *\\\",\\n        \\\"timeSpanType\\\": \\\"Relative\\\",\\n        \\\"start\\\": \\\"-5m\\\",\\n        \\\"end\\\": \\\"now\\\",\\n        \\\"storeType\\\": \\\"log\\\",\\n        \\\"project\\\": \\\"projectExample\\\",\\n        \\\"store\\\": \\\"store Example\\\",\\n        \\\"region\\\": \\\"cn-hangzhou\\\",\\n        \\\"roleArn\\\": \\\"\\\",\\n        \\\"dashboardId\\\": \\\"dashboardExample\\\",\\n        \\\"powerSqlMode\\\": \\\"auto\\\",\\n        \\\"ui\\\": \\\"\\\"\\n      }\\n    ],\\n    \\\"annotations\\\": [\\n      {\\n        \\\"key\\\": \\\"title\\\",\\n        \\\"value\\\": \\\"example value\\\"\\n      }\\n    ],\\n    \\\"labels\\\": [\\n      {\\n        \\\"key\\\": \\\"title\\\",\\n        \\\"value\\\": \\\"example value\\\"\\n      }\\n    ],\\n    \\\"conditionConfiguration\\\": {\\n      \\\"condition\\\": \\\"cnt > 100\\\",\\n      \\\"countCondition\\\": \\\"__count__ > 5\\\"\\n    },\\n    \\\"severityConfigurations\\\": [\\n      {\\n        \\\"severity\\\": 8,\\n        \\\"evalCondition\\\": {\\n          \\\"condition\\\": \\\"cnt > 100\\\",\\n          \\\"countCondition\\\": \\\"__count__ > 5\\\"\\n        }\\n      }\\n    ],\\n    \\\"joinConfigurations\\\": [\\n      {\\n        \\\"type\\\": \\\"left_join\\\",\\n        \\\"condition\\\": \\\"$0.id == $1.id\\\"\\n      }\\n    ],\\n    \\\"groupConfiguration\\\": {\\n      \\\"type\\\": \\\"custom\\\",\\n      \\\"fields\\\": [\\n        \\\"id\\\"\\n      ]\\n    },\\n    \\\"policyConfiguration\\\": {\\n      \\\"alertPolicyId\\\": \\\"sls.builtin.dynamic\\\",\\n      \\\"actionPolicyId\\\": \\\"example_action_policy\\\",\\n      \\\"repeatInterval\\\": \\\"10m\\\"\\n    },\\n    \\\"autoAnnotation\\\": false,\\n    \\\"sinkEventStore\\\": {\\n      \\\"enabled\\\": true,\\n      \\\"endpoint\\\": \\\"cn-shanghai-intranet.log.aliyuncs.com\\\",\\n      \\\"project\\\": \\\"exampleProject\\\",\\n      \\\"eventStore\\\": \\\"exampleStore\\\",\\n      \\\"roleArn\\\": \\\"acs:ram::123456789:role/aliyunlogetlrole\\\"\\n    },\\n    \\\"sinkCms\\\": {\\n      \\\"enabled\\\": true\\n    },\\n    \\\"sinkAlerthub\\\": {\\n      \\\"enabled\\\": true\\n    },\\n    \\\"tags\\\": [\\n      \\\"host\\\"\\n    ]\\n  },\\n  \\\"schedule\\\": {\\n    \\\"type\\\": \\\"FixedRate\\\",\\n    \\\"cronExpression\\\": \\\"0/5 * * * *\\\",\\n    \\\"runImmediately\\\": false,\\n    \\\"timeZone\\\": \\\"+0800\\\",\\n    \\\"delay\\\": 4,\\n    \\\"interval\\\": \\\"60s\\\"\\n  },\\n  \\\"createTime\\\": 0,\\n  \\\"lastModifiedTime\\\": 0,\\n  \\\"status\\\": \\\"ENABLED/DISABLED\\\"\\n}\",\"type\":\"json\"}]","title":"获取告警规则","extraInfo":"| HttpStatusCode  | ErrorCode  | ErrorMessage  | 错误码描述  |\n| :------------ | :------------ | :------------ | :------------ |\n| 404  | ProjectNotExist | Project does not exist.  | Project不存在。  |\n|  500 |  InternalServerError |  Specified Server Error Message. | 内部服务调用错误。 |\n\n更多信息，请参见[通用错误码](~~29013~~)。"},"ListAlerts":{"summary":"列出指定Project下的告警规则。","path":"/alerts","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"list","abilityTreeCode":"199870","abilityTreeNodes":["FEATUREsls7LA3N2"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project"}},{"name":"offset","in":"query","schema":{"description":"查询开始行。默认值为0。","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"size","in":"query","schema":{"description":"分页查询时，设置的每页行数。最大值为200。默认值为10。","type":"integer","format":"int32","required":false,"example":"10"}},{"name":"logstore","in":"query","schema":{"description":"获取指定Logstore下的告警规则。默认值为空。","type":"string","required":false,"example":"ali-test-logstore"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"type":"object","properties":{"total":{"description":"Project下告警总数量","type":"integer","format":"int32","example":"80"},"count":{"description":"当前返回的告警数量","type":"integer","format":"int32","example":"10"},"results":{"description":"告警配置结果列表","type":"array","items":{"description":"告警配置","$ref":"#/components/schemas/Alert"}}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"total\\\": 80,\\n  \\\"count\\\": 10,\\n  \\\"results\\\": [\\n    {\\n      \\\"name\\\": \\\"alert-123456\\\",\\n      \\\"displayName\\\": \\\"alertNameExample\\\",\\n      \\\"description\\\": \\\"Alert Desc\\\",\\n      \\\"configuration\\\": {\\n        \\\"muteUntil\\\": 1698907508,\\n        \\\"version\\\": \\\"2.0\\\",\\n        \\\"type\\\": \\\"default\\\",\\n        \\\"templateConfiguration\\\": {\\n          \\\"id\\\": \\\"sls.app.ack.ip.not_enough\\\",\\n          \\\"type\\\": \\\"sys\\\",\\n          \\\"version\\\": \\\"1\\\",\\n          \\\"lang\\\": \\\"cn\\\",\\n          \\\"tokens\\\": {\\n            \\\"test\\\": \\\"test\\\",\\n            \\\"test2\\\": 1\\n          },\\n          \\\"aonotations\\\": {\\n            \\\"test\\\": \\\"test\\\",\\n            \\\"test2\\\": 1\\n          }\\n        },\\n        \\\"dashboard\\\": \\\"dasnboardExample\\\",\\n        \\\"threshold\\\": 1,\\n        \\\"noDataFire\\\": false,\\n        \\\"noDataSeverity\\\": 6,\\n        \\\"sendResolved\\\": false,\\n        \\\"queryList\\\": [\\n          {\\n            \\\"chartTitle\\\": \\\"chartExmaple\\\",\\n            \\\"query\\\": \\\"* | select *\\\",\\n            \\\"timeSpanType\\\": \\\"Relative\\\",\\n            \\\"start\\\": \\\"-5m\\\",\\n            \\\"end\\\": \\\"now\\\",\\n            \\\"storeType\\\": \\\"log\\\",\\n            \\\"project\\\": \\\"projectExample\\\",\\n            \\\"store\\\": \\\"store Example\\\",\\n            \\\"region\\\": \\\"cn-hangzhou\\\",\\n            \\\"roleArn\\\": \\\"\\\",\\n            \\\"dashboardId\\\": \\\"dashboardExample\\\",\\n            \\\"powerSqlMode\\\": \\\"auto\\\",\\n            \\\"ui\\\": \\\"\\\"\\n          }\\n        ],\\n        \\\"annotations\\\": [\\n          {\\n            \\\"key\\\": \\\"title\\\",\\n            \\\"value\\\": \\\"example value\\\"\\n          }\\n        ],\\n        \\\"labels\\\": [\\n          {\\n            \\\"key\\\": \\\"title\\\",\\n            \\\"value\\\": \\\"example value\\\"\\n          }\\n        ],\\n        \\\"conditionConfiguration\\\": {\\n          \\\"condition\\\": \\\"cnt > 100\\\",\\n          \\\"countCondition\\\": \\\"__count__ > 5\\\"\\n        },\\n        \\\"severityConfigurations\\\": [\\n          {\\n            \\\"severity\\\": 8,\\n            \\\"evalCondition\\\": {\\n              \\\"condition\\\": \\\"cnt > 100\\\",\\n              \\\"countCondition\\\": \\\"__count__ > 5\\\"\\n            }\\n          }\\n        ],\\n        \\\"joinConfigurations\\\": [\\n          {\\n            \\\"type\\\": \\\"left_join\\\",\\n            \\\"condition\\\": \\\"$0.id == $1.id\\\"\\n          }\\n        ],\\n        \\\"groupConfiguration\\\": {\\n          \\\"type\\\": \\\"custom\\\",\\n          \\\"fields\\\": [\\n            \\\"id\\\"\\n          ]\\n        },\\n        \\\"policyConfiguration\\\": {\\n          \\\"alertPolicyId\\\": \\\"sls.builtin.dynamic\\\",\\n          \\\"actionPolicyId\\\": \\\"example_action_policy\\\",\\n          \\\"repeatInterval\\\": \\\"10m\\\"\\n        },\\n        \\\"autoAnnotation\\\": false,\\n        \\\"sinkEventStore\\\": {\\n          \\\"enabled\\\": true,\\n          \\\"endpoint\\\": \\\"cn-shanghai-intranet.log.aliyuncs.com\\\",\\n          \\\"project\\\": \\\"exampleProject\\\",\\n          \\\"eventStore\\\": \\\"exampleStore\\\",\\n          \\\"roleArn\\\": \\\"acs:ram::123456789:role/aliyunlogetlrole\\\"\\n        },\\n        \\\"sinkCms\\\": {\\n          \\\"enabled\\\": true\\n        },\\n        \\\"sinkAlerthub\\\": {\\n          \\\"enabled\\\": true\\n        },\\n        \\\"tags\\\": [\\n          \\\"host\\\"\\n        ]\\n      },\\n      \\\"schedule\\\": {\\n        \\\"type\\\": \\\"FixedRate\\\",\\n        \\\"cronExpression\\\": \\\"0/5 * * * *\\\",\\n        \\\"runImmediately\\\": false,\\n        \\\"timeZone\\\": \\\"+0800\\\",\\n        \\\"delay\\\": 4,\\n        \\\"interval\\\": \\\"60s\\\"\\n      },\\n      \\\"createTime\\\": 0,\\n      \\\"lastModifiedTime\\\": 0,\\n      \\\"status\\\": \\\"ENABLED/DISABLED\\\"\\n    }\\n  ]\\n}\",\"type\":\"json\"}]","title":"列出告警规则"},"CreateOSSIngestion":{"summary":"在指定Project下创建一个OSS导入任务。","path":"/ossingestions","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","abilityTreeCode":"203082","abilityTreeNodes":["FEATUREslsDQM02M"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project"}},{"name":"body","in":"body","style":"json","schema":{"description":"OSS导入任务配置","type":"object","properties":{"description":{"description":"任务描述","type":"string","required":false,"example":"任务描述\n"},"displayName":{"description":"显示名称","type":"string","required":true,"example":"OSS导入"},"schedule":{"description":"调度类型，一般默认不需要填写。如果有强定时需求，如必须是每周一八点进行一次导入，可使用cron形式","required":false,"$ref":"#/components/schemas/Schedule"},"configuration":{"description":"OSS导入配置","required":true,"$ref":"#/components/schemas/OSSIngestionConfiguration"},"name":{"description":"OSS导入任务名称","type":"string","required":true,"example":"ingest-oss-123456"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"errorCodes":{"401":[{"errorCode":"AuthorizationRequired","errorMessage":"Authorization Required"}]},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建OSS导入任务"},"DeleteOSSIngestion":{"summary":"删除一个OSS导入任务。","path":"/ossingestions/{ossIngestionName}","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete","abilityTreeCode":"203138","abilityTreeNodes":["FEATUREslsDQM02M"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project"}},{"name":"ossIngestionName","in":"path","schema":{"description":"OSS导入任务名称","type":"string","required":true,"example":"ingest-oss-123456"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除OSS导入任务"},"UpdateOSSIngestion":{"summary":"更新指定的OSS导入任务。","path":"/ossingestions/{ossIngestionName}","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","abilityTreeCode":"203139","abilityTreeNodes":["FEATUREslsDQM02M"]},"parameters":[{"name":"project","in":"host","schema":{"type":"string","required":true,"example":"ali-test-project\n"}},{"name":"ossIngestionName","in":"path","schema":{"description":"OSS导入任务名称","type":"string","required":true,"example":"ingest-oss-123455"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求体。","type":"object","properties":{"description":{"description":"OSS导入任务描述","type":"string","required":false,"example":"OSS导入"},"displayName":{"description":"OSS导入任务展示名称","type":"string","required":true,"example":"OSS导入"},"schedule":{"description":"调度类型，一般默认不需要填写。如果有强定时需求，如必须是每周一八点进行一次导入，可使用cron形式","required":false,"$ref":"#/components/schemas/Schedule"},"configuration":{"description":"OSS导入配置","required":true,"$ref":"#/components/schemas/OSSIngestionConfiguration"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新OSS导入任务"},"StartOSSIngestion":{"summary":"启动指定OSS导入任务。","path":"/ossingestions/{ossIngestionName}?action=START","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"203141","abilityTreeNodes":["FEATUREslsDQM02M"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project\n"}},{"name":"ossIngestionName","in":"path","schema":{"description":"OSS导入任务名称","type":"string","required":true,"example":"ingest-oss-123456"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"启动OSS导入任务"},"StopOSSIngestion":{"summary":"停止指定OSS导入任务。","path":"/ossingestions/{ossIngestionName}?action=STOP","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"203142","abilityTreeNodes":["FEATUREslsDQM02M"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project"}},{"name":"ossIngestionName","in":"path","schema":{"description":"OSS导入任务名称","type":"string","required":true,"example":"ingest-oss-123456"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"停止OSS导入任务"},"GetOSSIngestion":{"summary":"获取指定OSS导入任务。","path":"/ossingestions/{ossIngestionName}","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"203101","abilityTreeNodes":["FEATUREsls1DZPIM"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project"}},{"name":"ossIngestionName","in":"path","schema":{"description":"OSS导入任务名称","type":"string","required":true,"example":"ingest-oss-123456"}}],"responses":{"200":{"schema":{"description":"OSS导入任务配置","$ref":"#/components/schemas/OSSIngestion"}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"name\\\": \\\"ingest-oss-123456\\\",\\n  \\\"description\\\": \\\"oss ingestion\\\",\\n  \\\"displayName\\\": \\\"oss ingestion\\\",\\n  \\\"schedule\\\": {\\n    \\\"type\\\": \\\"FixedRate\\\",\\n    \\\"cronExpression\\\": \\\"0/5 * * * *\\\",\\n    \\\"runImmediately\\\": false,\\n    \\\"timeZone\\\": \\\"+0800\\\",\\n    \\\"delay\\\": 4,\\n    \\\"interval\\\": \\\"60s\\\"\\n  },\\n  \\\"configuration\\\": {\\n    \\\"logstore\\\": \\\"myLogstore\\\",\\n    \\\"source\\\": {\\n      \\\"endpoint\\\": \\\"oss-cn-hangzhou.aliyuncs.com\\\",\\n      \\\"bucket\\\": \\\"ossbucket\\\",\\n      \\\"compressionCodec\\\": \\\"none\\\",\\n      \\\"encoding\\\": \\\"UTF-8\\\",\\n      \\\"format\\\": {\\n        \\\"key\\\": \\\"{\\\\\\\"type\\\\\\\": \\\\\\\"line\\\\\\\"}\\\"\\n      },\\n      \\\"interval\\\": \\\"never\\\",\\n      \\\"pattern\\\": \\\".*\\\",\\n      \\\"prefix\\\": \\\"prefix\\\",\\n      \\\"restoreObjectEnabled\\\": true,\\n      \\\"startTime\\\": 1714274081,\\n      \\\"endTime\\\": 1714360481,\\n      \\\"timeField\\\": \\\"__time__\\\",\\n      \\\"timeFormat\\\": \\\"yyyy-MM-dd HH:mm:ss\\\",\\n      \\\"timePattern\\\": \\\"[0-9]{0,2}\\\\\\\\/[0-9a-zA-Z]+\\\\\\\\/[0-9:,]+\\\",\\n      \\\"timeZone\\\": \\\"GMT+08:00\\\",\\n      \\\"useMetaIndex\\\": false,\\n      \\\"roleARN\\\": \\\"acs:ram::12345:role/aliyunlogdefaultrole\\\",\\n      \\\"tagPackId\\\": true\\n    }\\n  },\\n  \\\"createTime\\\": 1714360481,\\n  \\\"lastModifiedTime\\\": 1714360481,\\n  \\\"status\\\": \\\"RUNNING\\\",\\n  \\\"scheduleId\\\": \\\"c7f01719d9feb105fc9d8df92af62010\\\"\\n}\",\"type\":\"json\"}]","title":"获取OSS导入任务"},"ListOSSIngestions":{"summary":"列出指定Project下的OSS导入任务。","path":"/ossingestions","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"list","abilityTreeCode":"203123","abilityTreeNodes":["FEATUREsls0Z6RJ5"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project\n"}},{"name":"offset","in":"query","schema":{"description":"查询开始行。默认值为0。","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"size","in":"query","schema":{"description":"单次查询需要获取的OSS导入任务数量","type":"integer","format":"int32","required":false,"example":"10\n"}},{"name":"logstore","in":"query","schema":{"type":"string","required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}},"schema":{"title":"Schema of Response","description":"Schema of Response","type":"object","properties":{"total":{"description":"指定Project下OSS导入任务数量","type":"integer","format":"int32","example":"80"},"count":{"description":"当前列出的OSS导入任务数量","type":"integer","format":"int32","example":"10"},"results":{"description":"具体OSS导入任务列表","type":"array","items":{"description":"OSS导入任务配置","$ref":"#/components/schemas/OSSIngestion"}}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"total\\\": 80,\\n  \\\"count\\\": 10,\\n  \\\"results\\\": [\\n    {\\n      \\\"name\\\": \\\"ingest-oss-123456\\\",\\n      \\\"description\\\": \\\"oss ingestion\\\",\\n      \\\"displayName\\\": \\\"oss ingestion\\\",\\n      \\\"schedule\\\": {\\n        \\\"type\\\": \\\"FixedRate\\\",\\n        \\\"cronExpression\\\": \\\"0/5 * * * *\\\",\\n        \\\"runImmediately\\\": false,\\n        \\\"timeZone\\\": \\\"+0800\\\",\\n        \\\"delay\\\": 4,\\n        \\\"interval\\\": \\\"60s\\\"\\n      },\\n      \\\"configuration\\\": {\\n        \\\"logstore\\\": \\\"myLogstore\\\",\\n        \\\"source\\\": {\\n          \\\"endpoint\\\": \\\"oss-cn-hangzhou.aliyuncs.com\\\",\\n          \\\"bucket\\\": \\\"ossbucket\\\",\\n          \\\"compressionCodec\\\": \\\"none\\\",\\n          \\\"encoding\\\": \\\"UTF-8\\\",\\n          \\\"format\\\": {\\n            \\\"key\\\": \\\"{\\\\\\\"type\\\\\\\": \\\\\\\"line\\\\\\\"}\\\"\\n          },\\n          \\\"interval\\\": \\\"never\\\",\\n          \\\"pattern\\\": \\\".*\\\",\\n          \\\"prefix\\\": \\\"prefix\\\",\\n          \\\"restoreObjectEnabled\\\": true,\\n          \\\"startTime\\\": 1714274081,\\n          \\\"endTime\\\": 1714360481,\\n          \\\"timeField\\\": \\\"__time__\\\",\\n          \\\"timeFormat\\\": \\\"yyyy-MM-dd HH:mm:ss\\\",\\n          \\\"timePattern\\\": \\\"[0-9]{0,2}\\\\\\\\/[0-9a-zA-Z]+\\\\\\\\/[0-9:,]+\\\",\\n          \\\"timeZone\\\": \\\"GMT+08:00\\\",\\n          \\\"useMetaIndex\\\": false,\\n          \\\"roleARN\\\": \\\"acs:ram::12345:role/aliyunlogdefaultrole\\\",\\n          \\\"tagPackId\\\": true\\n        }\\n      },\\n      \\\"createTime\\\": 1714360481,\\n      \\\"lastModifiedTime\\\": 1714360481,\\n      \\\"status\\\": \\\"RUNNING\\\",\\n      \\\"scheduleId\\\": \\\"c7f01719d9feb105fc9d8df92af62010\\\"\\n    }\\n  ]\\n}\",\"type\":\"json\"}]","title":"列出OSS导入任务"},"CreateOSSExport":{"summary":"将Logstore中的日志投递到OSS的Bucket。","path":"/ossexports","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","abilityTreeCode":"203278","abilityTreeNodes":["FEATUREsls6GHCRC"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project\n"}},{"name":"body","in":"body","style":"json","schema":{"description":"OSS投递任务配置","type":"object","properties":{"name":{"description":"OSS投递任务唯一标识","type":"string","required":true,"example":"export-oss-1234567890-123456"},"displayName":{"description":"任务显示名","type":"string","required":true,"example":"my-oss-job"},"description":{"description":"任务描述","type":"string","required":false,"example":"创建一个OSS投递任务"},"configuration":{"description":"任务配置","required":true,"$ref":"#/components/schemas/OSSExportConfiguration"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"errorCodes":{"401":[{"errorCode":"AuthorizationRequired","errorMessage":"Authorization Required"}]},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建OSS投递任务"},"CreateOSSHDFSExport":{"summary":"在指定的Project下创建一个OSS-HDFS投递功能。","path":"/osshdfsexports","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","abilityTreeCode":"203480","abilityTreeNodes":["FEATUREsls6GHCRC"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project"}},{"name":"body","in":"body","style":"json","schema":{"description":"OSS投递任务配置","type":"object","properties":{"name":{"description":"OSS投递任务唯一标识","type":"string","required":true,"example":"export-osshdfs-1234567890-123456"},"displayName":{"description":"任务显示名","type":"string","required":true,"example":"my-oss-hdfs-job\n"},"description":{"description":"任务描述","type":"string","required":false,"example":"创建一个OSS-HDFS投递任务\n"},"configuration":{"description":"任务配置","required":true,"$ref":"#/components/schemas/OSSExportConfiguration"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"errorCodes":{"401":[{"errorCode":"AuthorizationRequired","errorMessage":"Authorization Required"}]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建OSS-HDFS投递任务"},"DeleteOSSExport":{"summary":"删除指定的OSS投递任务。","path":"/ossexports/{ossExportName}","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete","abilityTreeCode":"203472","abilityTreeNodes":["FEATUREsls6GHCRC"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project"}},{"name":"ossExportName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"export-oss-1234567890-123456\n"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除OSS投递任务"},"DeleteOSSHDFSExport":{"summary":"删除指定的OSS-HDFS投递任务。","path":"/osshdfsexports/{ossExportName}","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete","abilityTreeCode":"203483","abilityTreeNodes":["FEATUREsls6GHCRC"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project"}},{"name":"ossExportName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"export-osshdfs-1234567890-123456\n\n"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除OSS-HDFS投递任务"},"UpdateOSSExport":{"summary":"更新指定的OSS投递任务。","path":"/ossexports/{ossExportName}","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","abilityTreeCode":"203473","abilityTreeNodes":["FEATUREsls6GHCRC"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project"}},{"name":"ossExportName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"export-oss-1234567890-123456\n"}},{"name":"body","in":"body","style":"json","schema":{"description":"OSS投递任务配置","type":"object","properties":{"displayName":{"description":"任务显示名","type":"string","required":false,"example":"my-oss-job\n"},"description":{"description":"任务描述","type":"string","required":false,"example":"更新OSS投递任务\n"},"configuration":{"description":"任务配置","required":false,"$ref":"#/components/schemas/OSSExportConfiguration"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新OSS投递任务"},"StartOSSExport":{"summary":"启动指定的OSS投递任务。","path":"/ossexports/{ossExportName}?action=START","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"203474","abilityTreeNodes":["FEATUREsls6GHCRC"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project\n"}},{"name":"ossExportName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"export-oss-1234567890-123456\n"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"启动OSS投递任务"},"StopOSSExport":{"summary":"停止指定的OSS投递任务。","path":"/ossexports/{ossExportName}?action=STOP","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"203475","abilityTreeNodes":["FEATUREsls6GHCRC"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project"}},{"name":"ossExportName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"export-oss-1234567890-123456\n"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"停止OSS投递任务"},"GetOSSExport":{"summary":"获取指定的OSS投递任务。","path":"/ossexports/{ossExportName}","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"203470","abilityTreeNodes":["FEATUREsls6GHCRC"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project"}},{"name":"ossExportName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"export-oss-123456789-123456\n"}}],"responses":{"200":{"schema":{"description":"任务配置详细","$ref":"#/components/schemas/OSSExport"}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"name\\\": \\\"job-1714109458-123456\\\",\\n  \\\"description\\\": \\\"job-test\\\",\\n  \\\"displayName\\\": \\\"job-demo\\\",\\n  \\\"configuration\\\": {\\n    \\\"logstore\\\": \\\"logstore-demo\\\",\\n    \\\"roleArn\\\": \\\"acs:ram::123456789:role/aliyunlogdefaultrole\\\",\\n    \\\"sink\\\": {\\n      \\\"endpoint\\\": \\\"http://oss-cn-hangzhou-internal.aliyuncs.com\\\",\\n      \\\"bucket\\\": \\\"test-bucket\\\",\\n      \\\"prefix\\\": \\\"demo/\\\",\\n      \\\"suffix\\\": \\\".json\\\",\\n      \\\"roleArn\\\": \\\"acs:ram::123456789:role/aliyunlogdefaultrole\\\",\\n      \\\"pathFormat\\\": \\\"%Y/%m/%d/%H/%M\\\",\\n      \\\"pathFormatType\\\": \\\"time\\\",\\n      \\\"timeZone\\\": \\\"+0800\\\",\\n      \\\"contentType\\\": \\\"json\\\",\\n      \\\"contentDetail\\\": {\\n        \\\"key\\\": \\\"\\\"\\n      },\\n      \\\"compressionType\\\": \\\"snappy\\\",\\n      \\\"bufferInterval\\\": 300,\\n      \\\"bufferSize\\\": 256,\\n      \\\"delaySec\\\": 900,\\n      \\\"delaySeconds\\\": 900\\n    },\\n    \\\"fromTime\\\": 1714123644,\\n    \\\"toTime\\\": 1714357112\\n  },\\n  \\\"createTime\\\": 1714284025,\\n  \\\"lastModifiedTime\\\": 1714284115,\\n  \\\"status\\\": \\\"RUNNING\\\",\\n  \\\"scheduleId\\\": \\\"c7f01719d9feb105fc9d8df92af62010\\\"\\n}\",\"type\":\"json\"}]","title":" 获取OSS投递任务"},"UpdateOSSHDFSExport":{"summary":"更新指定的OSS-HDFS投递任务。","path":"/osshdfsexports/{ossExportName}","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","abilityTreeCode":"203477","abilityTreeNodes":["FEATUREsls6GHCRC"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project"}},{"name":"ossExportName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"export-osshdfs-1234567890-123456\n"}},{"name":"body","in":"body","style":"json","schema":{"description":"OSS-HDFS投递任务配置","type":"object","properties":{"displayName":{"description":"任务显示名","type":"string","required":true,"example":"my-oss-hdfs-job\n"},"description":{"description":"任务描述","type":"string","required":false,"example":"更新OSS-HDFS投递任务\n"},"configuration":{"description":"任务配置","required":true,"$ref":"#/components/schemas/OSSExportConfiguration"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新OSS-HDFS投递任务"},"StartOSSHDFSExport":{"summary":"启动指定的OSS-HDFS投递任务。","path":"/osshdfsexports/{ossExportName}?action=START","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"203482","abilityTreeNodes":["FEATUREsls6GHCRC"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project"}},{"name":"ossExportName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"export-osshdfs-1234567890-123456\n"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"启动OSS-HDFS投递任务"},"StopOSSHDFSExport":{"summary":"停止指定的OSS-HDFS投递任务。","path":"/osshdfsexports/{ossExportName}?action=STOP","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"203481","abilityTreeNodes":["FEATUREsls6GHCRC"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project"}},{"name":"ossExportName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"export-osshdfs-123456789-123456\n"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"停止OSS-HDFS投递任务"},"ListOSSExports":{"summary":"列出指定Project下的OSS投递任务。","path":"/ossexports","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"list","abilityTreeCode":"203471","abilityTreeNodes":["FEATUREsls6GHCRC"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project\n"}},{"name":"offset","in":"query","schema":{"description":"查询开始行，默认值为0。","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"size","in":"query","schema":{"description":"指定查询数量，默认值为10。","type":"integer","format":"int32","required":false,"example":"10"}},{"name":"logstore","in":"query","schema":{"type":"string","required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}},"schema":{"title":"Schema of Response","description":"Schema of Response","type":"object","properties":{"total":{"description":"指定Project下所有OSS投递任务数量","type":"integer","format":"int32","example":"10"},"count":{"description":"当前列出的OSS投递任务数量","type":"integer","format":"int32","example":"2"},"results":{"description":"具体OSS投递任务列表","type":"array","items":{"description":"任务配置详细","$ref":"#/components/schemas/OSSExport"}}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"total\\\": 10,\\n  \\\"count\\\": 2,\\n  \\\"results\\\": [\\n    {\\n      \\\"name\\\": \\\"job-1714109458-123456\\\",\\n      \\\"description\\\": \\\"job-test\\\",\\n      \\\"displayName\\\": \\\"job-demo\\\",\\n      \\\"configuration\\\": {\\n        \\\"logstore\\\": \\\"logstore-demo\\\",\\n        \\\"roleArn\\\": \\\"acs:ram::123456789:role/aliyunlogdefaultrole\\\",\\n        \\\"sink\\\": {\\n          \\\"endpoint\\\": \\\"http://oss-cn-hangzhou-internal.aliyuncs.com\\\",\\n          \\\"bucket\\\": \\\"test-bucket\\\",\\n          \\\"prefix\\\": \\\"demo/\\\",\\n          \\\"suffix\\\": \\\".json\\\",\\n          \\\"roleArn\\\": \\\"acs:ram::123456789:role/aliyunlogdefaultrole\\\",\\n          \\\"pathFormat\\\": \\\"%Y/%m/%d/%H/%M\\\",\\n          \\\"pathFormatType\\\": \\\"time\\\",\\n          \\\"timeZone\\\": \\\"+0800\\\",\\n          \\\"contentType\\\": \\\"json\\\",\\n          \\\"contentDetail\\\": {\\n            \\\"key\\\": \\\"\\\"\\n          },\\n          \\\"compressionType\\\": \\\"snappy\\\",\\n          \\\"bufferInterval\\\": 300,\\n          \\\"bufferSize\\\": 256,\\n          \\\"delaySec\\\": 900,\\n          \\\"delaySeconds\\\": 900\\n        },\\n        \\\"fromTime\\\": 1714123644,\\n        \\\"toTime\\\": 1714357112\\n      },\\n      \\\"createTime\\\": 1714284025,\\n      \\\"lastModifiedTime\\\": 1714284115,\\n      \\\"status\\\": \\\"RUNNING\\\",\\n      \\\"scheduleId\\\": \\\"c7f01719d9feb105fc9d8df92af62010\\\"\\n    }\\n  ]\\n}\",\"type\":\"json\"}]","title":"列出OSS投递任务"},"GetOSSHDFSExport":{"summary":"获取指定的OSS-HDFS投递任务。","path":"/osshdfsexports/{ossExportName}","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"203478","abilityTreeNodes":["FEATUREsls6GHCRC"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project"}},{"name":"ossExportName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"export-osshdfs-1234567890-123456\n"}}],"responses":{"200":{"schema":{"description":"任务配置详细","$ref":"#/components/schemas/OSSExport"}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"name\\\": \\\"job-1714109458-123456\\\",\\n  \\\"description\\\": \\\"job-test\\\",\\n  \\\"displayName\\\": \\\"job-demo\\\",\\n  \\\"configuration\\\": {\\n    \\\"logstore\\\": \\\"logstore-demo\\\",\\n    \\\"roleArn\\\": \\\"acs:ram::123456789:role/aliyunlogdefaultrole\\\",\\n    \\\"sink\\\": {\\n      \\\"endpoint\\\": \\\"http://oss-cn-hangzhou-internal.aliyuncs.com\\\",\\n      \\\"bucket\\\": \\\"test-bucket\\\",\\n      \\\"prefix\\\": \\\"demo/\\\",\\n      \\\"suffix\\\": \\\".json\\\",\\n      \\\"roleArn\\\": \\\"acs:ram::123456789:role/aliyunlogdefaultrole\\\",\\n      \\\"pathFormat\\\": \\\"%Y/%m/%d/%H/%M\\\",\\n      \\\"pathFormatType\\\": \\\"time\\\",\\n      \\\"timeZone\\\": \\\"+0800\\\",\\n      \\\"contentType\\\": \\\"json\\\",\\n      \\\"contentDetail\\\": {\\n        \\\"key\\\": \\\"\\\"\\n      },\\n      \\\"compressionType\\\": \\\"snappy\\\",\\n      \\\"bufferInterval\\\": 300,\\n      \\\"bufferSize\\\": 256,\\n      \\\"delaySec\\\": 900,\\n      \\\"delaySeconds\\\": 900\\n    },\\n    \\\"fromTime\\\": 1714123644,\\n    \\\"toTime\\\": 1714357112\\n  },\\n  \\\"createTime\\\": 1714284025,\\n  \\\"lastModifiedTime\\\": 1714284115,\\n  \\\"status\\\": \\\"RUNNING\\\",\\n  \\\"scheduleId\\\": \\\"c7f01719d9feb105fc9d8df92af62010\\\"\\n}\",\"type\":\"json\"}]","title":"获取OSS-HDFS投递任务"},"ListOSSHDFSExports":{"summary":"列出指定Project下的OSS-HDFS投递任务。","path":"/osshdfsexports","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"list","abilityTreeCode":"203484","abilityTreeNodes":["FEATUREsls6GHCRC"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project\n"}},{"name":"offset","in":"query","schema":{"description":"查询开始行，默认值为0。","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"size","in":"query","schema":{"description":"指定查询数量，默认值为10。","type":"integer","format":"int32","required":false,"example":"10"}},{"name":"logstore","in":"query","schema":{"type":"string","required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}},"schema":{"title":"Schema of Response","description":"Schema of Response","type":"object","properties":{"total":{"description":"指定Project下所有OSS-HDFS投递任务数量","type":"integer","format":"int32","example":"10"},"count":{"description":"当前列出的OSS-HDFS投递任务数量","type":"integer","format":"int32","example":"2"},"results":{"description":"具体OSS-HDFS投递任务列表","type":"array","items":{"description":"任务配置详细","$ref":"#/components/schemas/OSSExport"}}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"total\\\": 10,\\n  \\\"count\\\": 2,\\n  \\\"results\\\": [\\n    {\\n      \\\"name\\\": \\\"job-1714109458-123456\\\",\\n      \\\"description\\\": \\\"job-test\\\",\\n      \\\"displayName\\\": \\\"job-demo\\\",\\n      \\\"configuration\\\": {\\n        \\\"logstore\\\": \\\"logstore-demo\\\",\\n        \\\"roleArn\\\": \\\"acs:ram::123456789:role/aliyunlogdefaultrole\\\",\\n        \\\"sink\\\": {\\n          \\\"endpoint\\\": \\\"http://oss-cn-hangzhou-internal.aliyuncs.com\\\",\\n          \\\"bucket\\\": \\\"test-bucket\\\",\\n          \\\"prefix\\\": \\\"demo/\\\",\\n          \\\"suffix\\\": \\\".json\\\",\\n          \\\"roleArn\\\": \\\"acs:ram::123456789:role/aliyunlogdefaultrole\\\",\\n          \\\"pathFormat\\\": \\\"%Y/%m/%d/%H/%M\\\",\\n          \\\"pathFormatType\\\": \\\"time\\\",\\n          \\\"timeZone\\\": \\\"+0800\\\",\\n          \\\"contentType\\\": \\\"json\\\",\\n          \\\"contentDetail\\\": {\\n            \\\"key\\\": \\\"\\\"\\n          },\\n          \\\"compressionType\\\": \\\"snappy\\\",\\n          \\\"bufferInterval\\\": 300,\\n          \\\"bufferSize\\\": 256,\\n          \\\"delaySec\\\": 900,\\n          \\\"delaySeconds\\\": 900\\n        },\\n        \\\"fromTime\\\": 1714123644,\\n        \\\"toTime\\\": 1714357112\\n      },\\n      \\\"createTime\\\": 1714284025,\\n      \\\"lastModifiedTime\\\": 1714284115,\\n      \\\"status\\\": \\\"RUNNING\\\",\\n      \\\"scheduleId\\\": \\\"c7f01719d9feb105fc9d8df92af62010\\\"\\n    }\\n  ]\\n}\",\"type\":\"json\"}]","title":"列出OSS-HDFS投递任务"},"CreateETL":{"summary":"在指定Project下创建一个数据加工任务。","path":"/etls","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","abilityTreeCode":"203162","abilityTreeNodes":["FEATUREsls1DZPIM"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project"}},{"name":"body","in":"body","style":"json","schema":{"description":"数据加工任务配置","type":"object","properties":{"name":{"description":"数据加工任务名称（project下唯一）","type":"string","required":true,"example":"etl-123456"},"displayName":{"description":"数据加工任务显示名称","type":"string","required":true,"example":"sls-test-etl"},"description":{"description":"数据加工任务描述","type":"string","required":false,"example":"this is ETL"},"configuration":{"description":"数据加工任务详细配置","required":true,"$ref":"#/components/schemas/ETLConfiguration"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"errorCodes":{"401":[{"errorCode":"AuthorizationRequired","errorMessage":"Authorization Required"}]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建数据加工任务","requestParamsDescription":"新版加工的创建需要额外补充lang以及datasets参数，以python代码为例\n```python\n# -*- coding: utf-8 -*-\n# This file is auto-generated, don't edit it. Thanks.\nimport os\nimport sys\n\nfrom typing import List\n\nfrom alibabacloud_sls20201230.client import Client as Sls20201230Client\nfrom alibabacloud_tea_openapi import models as open_api_models\nfrom alibabacloud_sls20201230 import models as sls_20201230_models\nfrom alibabacloud_tea_util import models as util_models\nfrom alibabacloud_tea_util.client import Client as UtilClient\n\n\nclass Sample:\n    def __init__(self):\n        pass\n\n    @staticmethod\n    def create_client() -> Sls20201230Client:\n        \"\"\"\n        @return: Client\n        @throws Exception\n        config = open_api_models.Config(\n            access_key_id=os.environ['ALIBABA_CLOUD_ACCESS_KEY_ID'],\n            access_key_secret=os.environ['ALIBABA_CLOUD_ACCESS_KEY_SECRET']\n        )\n        config.endpoint = f'cn-hangzhou.log.aliyuncs.com'\n        return Sls20201230Client(config)\n\n    @staticmethod\n    def main(\n        args: List[str],\n    ) -> None:\n        client = Sample.create_client()\n        etlconfiguration_etlconfiguration_sink_0 = sls_20201230_models.ETLConfigurationSink(\n            name='my-test',\n            project='my-test',\n            endpoint='cn-hangzhou.log.aliyuncs.com',\n            logstore='target',\n            role_arn='***',\n            datasets=[\"__UNNAMED__\"]\n        )\n        etlconfiguration = sls_20201230_models.ETLConfiguration(\n            script='* | where 1 = 1',\n            lang='SPL',\n            logstore='mock',\n            role_arn='***',\n            from_time=1729740027,\n            to_time=0,\n            sinks=[\n                etlconfiguration_etlconfiguration_sink_0\n            ]\n        )\n        create_etlrequest = sls_20201230_models.CreateETLRequest(\n            name='etl-my-test',\n            display_name='my-test',\n            configuration=etlconfiguration\n        )\n        runtime = util_models.RuntimeOptions()\n        headers = {}\n        try:\n            client.create_etlwith_options('my-test', create_etlrequest, headers, runtime)\n        except Exception as error:\n            print(error.message)\n            print(error.data.get(\"Recommend\"))\n            UtilClient.assert_as_string(error.message)\n\n\n\nif __name__ == '__main__':\n    Sample.main(sys.argv[1:])"},"DeleteETL":{"summary":"删除一个数据加工任务。","path":"/etls/{etlName}","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete","abilityTreeCode":"203167","abilityTreeNodes":["FEATUREsls1DZPIM"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project"}},{"name":"etlName","in":"path","schema":{"description":"数据加工名称","type":"string","required":true,"example":"etl-123456"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除数据加工任务"},"UpdateETL":{"summary":"更新指定的数据加工任务。","path":"/etls/{etlName}","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","abilityTreeCode":"203169","abilityTreeNodes":["FEATUREsls1DZPIM"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project"}},{"name":"etlName","in":"path","schema":{"description":"数据加工名称","type":"string","required":true,"example":"etl-123456"}},{"name":"body","in":"body","style":"json","schema":{"description":"更新的数据加工配置","type":"object","properties":{"displayName":{"description":"数据加工显示名称","type":"string","required":true,"example":"this is update"},"description":{"description":"数据加工描述","type":"string","required":false,"example":"this is description"},"configuration":{"description":"数据加工详细配置","required":true,"$ref":"#/components/schemas/ETLConfiguration"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新数据加工任务"},"StartETL":{"summary":"启动指定的数据加工任务。","path":"/etls/{etlName}?action=START","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"203160","abilityTreeNodes":["FEATUREsls1DZPIM"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":false,"example":"ali-test-project"}},{"name":"etlName","in":"path","schema":{"description":"数据加工名称","type":"string","required":false,"example":"etl-123456"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"启动数据加工任务"},"StopETL":{"summary":"停止指定的数据加工任务。","path":"/etls/{etlName}?action=STOP","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"203170","abilityTreeNodes":["FEATUREsls1DZPIM"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":false,"example":"ali-test-project"}},{"name":"etlName","in":"path","schema":{"description":"数据加工名称","type":"string","required":false,"example":"etl-123456"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"停止数据加工任务"},"ListETLs":{"summary":"列出project下的数据加工任务。","path":"/etls","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"list","abilityTreeCode":"203166","abilityTreeNodes":["FEATUREsls1DZPIM"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project"}},{"name":"offset","in":"query","schema":{"description":"查询开始行。默认值为0。","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"size","in":"query","schema":{"description":"指定查询返回的数据加工任务数量","type":"integer","format":"int32","required":false,"example":"10"}},{"name":"logstore","in":"query","schema":{"type":"string","required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}},"schema":{"title":"Schema of Response","description":"Schema of Response","type":"object","properties":{"total":{"description":"Project下总的数据加工数量","type":"integer","format":"int32","example":"80"},"count":{"description":"当前返回的数据加工数量","type":"integer","format":"int32","example":"10"},"results":{"description":"数据加工结果列表","type":"array","items":{"description":"数据加工配置","$ref":"#/components/schemas/ETL"}}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"total\\\": 80,\\n  \\\"count\\\": 10,\\n  \\\"results\\\": [\\n    {\\n      \\\"name\\\": \\\"etl-20240426\\\",\\n      \\\"description\\\": \\\"加工作业\\\",\\n      \\\"displayName\\\": \\\"etljob\\\",\\n      \\\"configuration\\\": {\\n        \\\"script\\\": \\\"e_set(\\\\\\\"key\\\\\\\",\\\\\\\"value\\\\\\\")\\\",\\n        \\\"lang\\\": \\\"SPL\\\",\\n        \\\"logstore\\\": \\\"test-logstore\\\",\\n        \\\"roleArn\\\": \\\"acs:ram::13234:role/logtarget\\\",\\n        \\\"accessKeyId\\\": \\\"\\\",\\n        \\\"accessKeySecret\\\": \\\"\\\",\\n        \\\"fromTime\\\": 1714274900,\\n        \\\"toTime\\\": 1714274970,\\n        \\\"sinks\\\": [\\n          {\\n            \\\"name\\\": \\\"test-etljob\\\",\\n            \\\"endpoint\\\": \\\"\\\",\\n            \\\"project\\\": \\\"test-project\\\",\\n            \\\"logstore\\\": \\\"test-logstore\\\",\\n            \\\"datasets\\\": [\\n              \\\"__UNNAMED__\\\"\\n            ],\\n            \\\"roleArn\\\": \\\"acs:ram::13234:role/logtarget\\\",\\n            \\\"accessKeyId\\\": \\\"\\\",\\n            \\\"accessKeySecret\\\": \\\"\\\"\\n          }\\n        ],\\n        \\\"parameters\\\": {\\n          \\\"test\\\": \\\"test\\\",\\n          \\\"test2\\\": 1\\n        }\\n      },\\n      \\\"createTime\\\": 1714274900,\\n      \\\"lastModifiedTime\\\": 1714274900,\\n      \\\"status\\\": \\\"RUNNING\\\",\\n      \\\"scheduleId\\\": \\\"f0eb655e501a8780808d1970ef6d04c4\\\"\\n    }\\n  ]\\n}\",\"type\":\"json\"}]","title":"列出数据加工任务"},"GetETL":{"summary":"获取指定的数据加工任务配置。","path":"/etls/{etlName}","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"203168","abilityTreeNodes":["FEATUREsls1DZPIM"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":false,"example":"ali-test-project"}},{"name":"etlName","in":"path","schema":{"description":"数据加工名称","type":"string","required":false,"example":"etl-123456"}}],"responses":{"200":{"schema":{"description":"数据加工配置","$ref":"#/components/schemas/ETL"}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"name\\\": \\\"etl-20240426\\\",\\n  \\\"description\\\": \\\"加工作业\\\",\\n  \\\"displayName\\\": \\\"etljob\\\",\\n  \\\"configuration\\\": {\\n    \\\"script\\\": \\\"e_set(\\\\\\\"key\\\\\\\",\\\\\\\"value\\\\\\\")\\\",\\n    \\\"lang\\\": \\\"SPL\\\",\\n    \\\"logstore\\\": \\\"test-logstore\\\",\\n    \\\"roleArn\\\": \\\"acs:ram::13234:role/logtarget\\\",\\n    \\\"accessKeyId\\\": \\\"\\\",\\n    \\\"accessKeySecret\\\": \\\"\\\",\\n    \\\"fromTime\\\": 1714274900,\\n    \\\"toTime\\\": 1714274970,\\n    \\\"sinks\\\": [\\n      {\\n        \\\"name\\\": \\\"test-etljob\\\",\\n        \\\"endpoint\\\": \\\"\\\",\\n        \\\"project\\\": \\\"test-project\\\",\\n        \\\"logstore\\\": \\\"test-logstore\\\",\\n        \\\"datasets\\\": [\\n          \\\"__UNNAMED__\\\"\\n        ],\\n        \\\"roleArn\\\": \\\"acs:ram::13234:role/logtarget\\\",\\n        \\\"accessKeyId\\\": \\\"\\\",\\n        \\\"accessKeySecret\\\": \\\"\\\"\\n      }\\n    ],\\n    \\\"parameters\\\": {\\n      \\\"test\\\": \\\"test\\\",\\n      \\\"test2\\\": 1\\n    }\\n  },\\n  \\\"createTime\\\": 1714274900,\\n  \\\"lastModifiedTime\\\": 1714274900,\\n  \\\"status\\\": \\\"RUNNING\\\",\\n  \\\"scheduleId\\\": \\\"f0eb655e501a8780808d1970ef6d04c4\\\"\\n}\",\"type\":\"json\"}]","title":"获取数据加工任务"},"CreateScheduledSQL":{"summary":"在指定的Project下创建一个定时SQL任务。","path":"/scheduledsqls","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","riskType":"none","chargeType":"free","abilityTreeCode":"209629","abilityTreeNodes":["FEATUREslsEPUWT1"]},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称","type":"string","required":true,"example":"ali-test-project\n"}},{"name":"body","in":"body","style":"json","schema":{"description":"定时SQL任务配置","type":"object","properties":{"name":{"description":"定时SQL任务唯一标识","type":"string","required":true,"example":"sql-123456789-123456"},"displayName":{"description":"任务显示名","type":"string","required":true,"example":"ali-test-scheduled-sql"},"description":{"description":"任务描述","type":"string","required":false,"example":"创建一个定时SQL任务"},"schedule":{"description":"任务调度配置","required":true,"$ref":"#/components/schemas/Schedule"},"configuration":{"description":"任务配置","required":true,"$ref":"#/components/schemas/ScheduledSQLConfiguration"}},"required":false}}],"responses":{"200":{"headers":{"Content-Type":{"schema":{"title":"返回的响应体的内容格式","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Server":{"schema":{"title":"服务器名称","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"errorCodes":{"401":[{"errorCode":"AuthorizationRequired","errorMessage":"Authorization Required"}]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建定时SQL任务"},"DeleteScheduledSQL":{"summary":"删除指定的定时SQL任务。","path":"/scheduledsqls/{scheduledSQLName}","methods":["delete"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete","abilityTreeCode":"209792","abilityTreeNodes":["FEATUREslsEPUWT1"]},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称","type":"string","required":true,"example":"ali-test-project\n"}},{"name":"scheduledSQLName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"sql-123456789-123456\n"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除定时SQL任务"},"UpdateScheduledSQL":{"summary":"更新指定的定时SQL任务。","path":"/scheduledsqls/{scheduledSQLName}","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","riskType":"none","chargeType":"paid","abilityTreeCode":"209793","abilityTreeNodes":["FEATUREslsEPUWT1"]},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称","type":"string","required":true,"example":"ali-test-project"}},{"name":"scheduledSQLName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"sql-123456789-123456"}},{"name":"body","in":"body","style":"json","schema":{"description":"定时SQL任务配置","type":"object","properties":{"displayName":{"description":"任务显示名","type":"string","required":true,"example":"ali-test-scheduled-sql"},"description":{"description":"任务描述","type":"string","required":false,"example":"更新定时SQL任务\n"},"schedule":{"description":"任务调度配置","required":true,"$ref":"#/components/schemas/Schedule"},"configuration":{"description":"任务配置","required":true,"$ref":"#/components/schemas/ScheduledSQLConfiguration"}},"required":false}}],"responses":{"200":{"headers":{"Content-Type":{"schema":{"title":"返回的响应体的内容格式","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Server":{"schema":{"title":"服务器名称","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"errorCodes":{"401":[{"errorCode":"AuthorizationRequired","errorMessage":"Authorization Required"}]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新定时SQL任务"},"EnableScheduledSQL":{"summary":"开启指定的定时SQL。","path":"/scheduledsqls/{scheduledSQLName}?action=enable","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"219089","abilityTreeNodes":["FEATUREslsEPUWT1"]},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"A short description of struct","type":"string","required":true,"example":"ali-test-project\n"}},{"name":"scheduledSQLName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"sql-123456789-123456"}}],"responses":{"200":{"headers":{"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"开启定时SQL"},"DisableScheduledSQL":{"summary":"关闭指定的定时SQL。","path":"/scheduledsqls/{scheduledSQLName}?action=disable","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"219106","abilityTreeNodes":["FEATUREslsEPUWT1"]},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称","type":"string","required":true,"example":"ali-test-project\n"}},{"name":"scheduledSQLName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"sql-123456789-123456"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"关闭定时SQL"},"ListScheduledSQLs":{"summary":"列出指定Project下的定时SQL任务。","path":"/scheduledsqls","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"209929","abilityTreeNodes":["FEATUREslsEPUWT1"]},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称","type":"string","required":true,"example":"ali-test-project\n"}},{"name":"offset","in":"query","schema":{"description":"查询开始行，默认值为0。","type":"integer","format":"int64","required":false,"example":"0"}},{"name":"size","in":"query","schema":{"description":"指定查询数量，默认值为10。","type":"integer","format":"int64","required":false,"example":"10"}},{"name":"logstore","in":"query","schema":{"description":"logstore名称","type":"string","required":false,"example":"ali-test-logstore"}}],"responses":{"200":{"headers":{"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Server":{"schema":{"title":"服务器名称。","type":"string"}}},"schema":{"type":"object","properties":{"total":{"description":"Project下总的定时SQL任务数量","type":"integer","format":"int32","example":"80"},"count":{"description":"当前返回的定时SQL任务数量","type":"integer","format":"int32","example":"10"},"results":{"description":"定时SQL任务列表","type":"array","items":{"description":"定时SQL任务配置","$ref":"#/components/schemas/ScheduledSQL"}}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"total\\\": 80,\\n  \\\"count\\\": 10,\\n  \\\"results\\\": [\\n    {\\n      \\\"description\\\": \\\"schedule-sql-test\\\",\\n      \\\"displayName\\\": \\\"scheduleSqlTest\\\",\\n      \\\"name\\\": \\\"sql-1714123463-225223\\\",\\n      \\\"schedule\\\": {\\n        \\\"type\\\": \\\"FixedRate\\\",\\n        \\\"cronExpression\\\": \\\"0/5 * * * *\\\",\\n        \\\"runImmediately\\\": false,\\n        \\\"timeZone\\\": \\\"+0800\\\",\\n        \\\"delay\\\": 4,\\n        \\\"interval\\\": \\\"60s\\\"\\n      },\\n      \\\"configuration\\\": {\\n        \\\"script\\\": \\\"* | select *\\\",\\n        \\\"sqlType\\\": \\\"searchQuery\\\",\\n        \\\"destEndpoint\\\": \\\"cn-hangzhou-intranet.log.aliyuncs.com\\\",\\n        \\\"destProject\\\": \\\"project-demo\\\",\\n        \\\"sourceLogstore\\\": \\\"source-logstore-demo\\\",\\n        \\\"destLogstore\\\": \\\"dest-logstore-demo\\\",\\n        \\\"roleArn\\\": \\\"acs:ram::123456789:role/aliyunlogetlrole\\\",\\n        \\\"destRoleArn\\\": \\\"acs:ram::123456789:role/aliyunlogetlrole\\\",\\n        \\\"fromTimeExpr\\\": \\\"@m-1m\\\",\\n        \\\"toTimeExpr\\\": \\\"@m\\\",\\n        \\\"maxRunTimeInSeconds\\\": 600,\\n        \\\"resourcePool\\\": \\\"enhanced\\\",\\n        \\\"maxRetries\\\": 20,\\n        \\\"fromTime\\\": 1712592000,\\n        \\\"toTime\\\": 0,\\n        \\\"dataFormat\\\": \\\"log2log\\\",\\n        \\\"parameters\\\": {\\n          \\\"test\\\": \\\"test\\\",\\n          \\\"test2\\\": 1\\n        }\\n      },\\n      \\\"createTime\\\": 1714123644,\\n      \\\"lastModifiedTime\\\": 1714123644,\\n      \\\"scheduleId\\\": \\\"e73f43732852064ad5d091914e39342f\\\",\\n      \\\"status\\\": \\\"ENABLED\\\"\\n    }\\n  ]\\n}\",\"type\":\"json\"}]","title":"列出定时SQL任务"},"GetScheduledSQL":{"summary":"获取指定的定时SQL任务。","path":"/scheduledsqls/{scheduledSQLName}","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","riskType":"none","chargeType":"free","abilityTreeCode":"209801","abilityTreeNodes":["FEATUREslsEPUWT1"]},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称","type":"string","required":true,"example":"ali-test-project\n"}},{"name":"scheduledSQLName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"sql-123456789-123456\n"}}],"responses":{"200":{"headers":{"Content-Type":{"schema":{"title":"返回的响应体的内容格式","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Server":{"schema":{"title":"服务器名称","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}},"schema":{"description":"定时SQL任务配置","$ref":"#/components/schemas/ScheduledSQL"}}},"errorCodes":{"401":[{"errorCode":"AuthorizationRequired","errorMessage":"Authorization Required"}]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"description\\\": \\\"schedule-sql-test\\\",\\n  \\\"displayName\\\": \\\"scheduleSqlTest\\\",\\n  \\\"name\\\": \\\"sql-1714123463-225223\\\",\\n  \\\"schedule\\\": {\\n    \\\"type\\\": \\\"FixedRate\\\",\\n    \\\"cronExpression\\\": \\\"0/5 * * * *\\\",\\n    \\\"runImmediately\\\": false,\\n    \\\"timeZone\\\": \\\"+0800\\\",\\n    \\\"delay\\\": 4,\\n    \\\"interval\\\": \\\"60s\\\"\\n  },\\n  \\\"configuration\\\": {\\n    \\\"script\\\": \\\"* | select *\\\",\\n    \\\"sqlType\\\": \\\"searchQuery\\\",\\n    \\\"destEndpoint\\\": \\\"cn-hangzhou-intranet.log.aliyuncs.com\\\",\\n    \\\"destProject\\\": \\\"project-demo\\\",\\n    \\\"sourceLogstore\\\": \\\"source-logstore-demo\\\",\\n    \\\"destLogstore\\\": \\\"dest-logstore-demo\\\",\\n    \\\"roleArn\\\": \\\"acs:ram::123456789:role/aliyunlogetlrole\\\",\\n    \\\"destRoleArn\\\": \\\"acs:ram::123456789:role/aliyunlogetlrole\\\",\\n    \\\"fromTimeExpr\\\": \\\"@m-1m\\\",\\n    \\\"toTimeExpr\\\": \\\"@m\\\",\\n    \\\"maxRunTimeInSeconds\\\": 600,\\n    \\\"resourcePool\\\": \\\"enhanced\\\",\\n    \\\"maxRetries\\\": 20,\\n    \\\"fromTime\\\": 1712592000,\\n    \\\"toTime\\\": 0,\\n    \\\"dataFormat\\\": \\\"log2log\\\",\\n    \\\"parameters\\\": {\\n      \\\"test\\\": \\\"test\\\",\\n      \\\"test2\\\": 1\\n    }\\n  },\\n  \\\"createTime\\\": 1714123644,\\n  \\\"lastModifiedTime\\\": 1714123644,\\n  \\\"scheduleId\\\": \\\"e73f43732852064ad5d091914e39342f\\\",\\n  \\\"status\\\": \\\"ENABLED\\\"\\n}\",\"type\":\"json\"}]","title":"获取定时SQL任务"},"CreateDownloadJob":{"summary":"在指定Project下创建一个日志下载任务。","path":"/downloadjobs","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","abilityTreeCode":"216705","abilityTreeNodes":["FEATUREsls1J4K38"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project\n"}},{"name":"body","in":"body","style":"json","schema":{"title":"body参数","description":"日志下载任务配置","type":"object","properties":{"name":{"title":"资源名称","description":"日志下载任务名称","type":"string","required":true,"example":"download-123"},"description":{"title":"描述","description":"日志下载任务描述","type":"string","required":false,"example":"一个日志下载任务"},"configuration":{"title":"下载配置","description":"下载配置","type":"object","properties":{"logstore":{"title":"源logstore","description":"源logstore","type":"string","required":true,"example":"test-logstore"},"fromTime":{"title":"起点时间戳（精确到秒）","description":"起点时间戳（精确到秒）","type":"integer","format":"int64","required":true,"example":"1722406260"},"toTime":{"title":"结束时间戳（精确到秒）","description":"结束时间戳（精确到秒）","type":"integer","format":"int64","required":true,"example":"1722409860"},"query":{"title":"查询语句","description":"查询语句","type":"string","required":true,"example":"* | select *"},"powerSql":{"title":"是否启用powerSql","description":"是否启用powerSql","type":"boolean","required":false,"enumValueTitles":{"true":"true","false":"false"},"example":"true"},"allowInComplete":{"description":"允许下载不精确结果","type":"boolean","required":true,"enumValueTitles":{"true":"true","false":"false"},"example":"false"},"sink":{"title":"导出配置","description":"导出配置","type":"object","properties":{"type":{"description":"固定为AliyunOSS","type":"string","required":true,"enumValueTitles":{"AliyunOSS":"AliyunOSS"},"example":"AliyunOSS"},"contentType":{"title":"下载文件格式","description":"下载文件格式","type":"string","required":true,"enumValueTitles":{"csv":"csv","json":"json"},"example":"csv"},"compressionType":{"title":"压缩格式","description":"压缩格式","type":"string","required":true,"enumValueTitles":{"zstd":"zstd","lz4":"lz4","gzip":"gzip","none":"none"},"example":"none"},"roleArn":{"title":"下载使用roleArn","description":"下载使用roleArn","type":"string","required":false,"example":"acs:ram::0123456789:role/aliyunlogdefaultrole"},"bucket":{"title":"对象存储桶","description":"对象存储桶","type":"string","required":false,"example":"oss-test-bucket"},"prefix":{"description":"下载到用户oss bucket的路径前缀","type":"string","required":false,"example":"download/"}},"required":true}},"required":true},"displayName":{"title":"显示名称","description":"显示名称","type":"string","required":true,"example":"download-123456789"}},"required":true}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"errorCodes":{"400":[{"errorCode":"IdempotentParameterMismatch","errorMessage":"The request uses the same client token as a previous, but non-identical request. Do not reuse a client token with different requests, unless the requests are identical."}]},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建日志下载任务"},"DeleteDownloadJob":{"summary":"删除下载任务。","path":"/downloadjobs/{downloadJobName}","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete","abilityTreeCode":"216706","abilityTreeNodes":["FEATUREsls1J4K38"]},"parameters":[{"name":"downloadJobName","in":"path","schema":{"title":"资源名称","description":"日志下载任务名称","type":"string","properties":{},"required":true,"example":"download-123"}},{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"errorCodes":{"400":[{"errorCode":"IdempotentParameterMismatch","errorMessage":"The request uses the same client token as a previous, but non-identical request. Do not reuse a client token with different requests, unless the requests are identical."}]},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除日志下载任务"},"GetDownloadJob":{"summary":"获取下载任务信息。","path":"/downloadjobs/{downloadJobName}","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"216704","abilityTreeNodes":["FEATUREsls1J4K38"]},"parameters":[{"name":"downloadJobName","in":"path","schema":{"title":"资源名称","description":"日志下载任务名称","type":"string","properties":{},"required":true,"example":"download-123"}},{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"ali-test-project"}}],"responses":{"200":{"schema":{"title":"Schema of Response","description":"download job info","type":"object","properties":{"status":{"title":"资源状态","description":"下载任务状态","type":"string","example":"STARTING、RUNNING、SUCCEEDED、ERROR"},"name":{"title":"资源名称","description":"下载任务名称","type":"string","example":"download-123"},"description":{"title":"描述","description":"描述","type":"string","example":"a download job"},"configuration":{"title":"下载配置","description":"下载配置","type":"object","properties":{"logstore":{"title":"源logstore","description":"源logstore","type":"string","example":"ali-test-logstore"},"fromTime":{"title":"起点时间戳（精确到秒）","description":"起点时间戳（精确到秒）","type":"integer","format":"int64","example":"1722409860"},"toTime":{"title":"结束时间戳（精确到秒）","description":"结束时间戳（精确到秒）","type":"integer","format":"int64","example":"1722411060"},"query":{"title":"查询语句","description":"查询语句","type":"string","example":"* | select *"},"powerSql":{"title":"是否启用powerSql","description":"是否启用powerSql","type":"boolean","example":"false"},"allowInComplete":{"description":"允许下载不精确数据","type":"boolean","enumValueTitles":{"true":"true","false":"false"},"example":"true"},"sink":{"title":"导出配置","description":"导出配置","type":"object","properties":{"type":{"description":"固定为AliyunOSS","type":"string","example":"AliyunOSS"},"contentType":{"title":"下载文件格式","description":"下载文件格式","type":"string","example":"csv"},"compressionType":{"title":"压缩格式","description":"压缩格式","type":"string","example":"none"},"roleArn":{"title":"下载使用roleArn","description":"下载使用roleArn","type":"string","example":"acs:ram::0123456789:role/aliyunlogdefaultrole"},"bucket":{"title":"对象存储桶","description":"对象存储桶","type":"string","example":"ali-test-oss-bucket"},"prefix":{"description":"下载日志到用户bucket时的文件前缀","type":"string","example":"download/"}}}}},"createTime":{"title":"创建时间","description":"创建时间","type":"string","example":"1722411060"},"displayName":{"title":"显示名称","description":"显示名称","type":"string","example":"download-123456"},"executionDetails":{"title":"执行细节","description":"执行细节","type":"object","properties":{"progress":{"title":"下载进度","description":"下载进度","type":"integer","format":"int64","example":"100"},"filePath":{"title":"下载结果链接","description":"下载结果链接","type":"string","example":"https://xxx.csv.zst?xxx"},"fileSize":{"title":"下载文件大小","description":"下载文件大小","type":"integer","format":"int64","example":"123456"},"executeTime":{"title":"下载执行时间","description":"下载执行时间","type":"integer","format":"int64","example":"123"},"logCount":{"title":"下载日志条数","description":"下载日志条数","type":"integer","format":"int64","example":"123"},"errorMessage":{"title":"下载错误信息","description":"下载错误信息","type":"string","example":"timeout"},"checkSum":{"description":"文件ETAG","type":"string","example":"EXSFGSDASDASDG123ASD"},"notice":{"type":"string"}}}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"status\\\": \\\"STARTING、RUNNING、SUCCEEDED、ERROR\\\",\\n  \\\"name\\\": \\\"download-123\\\",\\n  \\\"description\\\": \\\"a download job\\\",\\n  \\\"configuration\\\": {\\n    \\\"logstore\\\": \\\"ali-test-logstore\\\",\\n    \\\"fromTime\\\": 1722409860,\\n    \\\"toTime\\\": 1722411060,\\n    \\\"query\\\": \\\"* | select *\\\",\\n    \\\"powerSql\\\": false,\\n    \\\"allowInComplete\\\": true,\\n    \\\"sink\\\": {\\n      \\\"type\\\": \\\"AliyunOSS\\\",\\n      \\\"contentType\\\": \\\"csv\\\",\\n      \\\"compressionType\\\": \\\"none\\\",\\n      \\\"roleArn\\\": \\\"acs:ram::0123456789:role/aliyunlogdefaultrole\\\",\\n      \\\"bucket\\\": \\\"ali-test-oss-bucket\\\",\\n      \\\"prefix\\\": \\\"download/\\\"\\n    }\\n  },\\n  \\\"createTime\\\": \\\"1722411060\\\",\\n  \\\"displayName\\\": \\\"download-123456\\\",\\n  \\\"executionDetails\\\": {\\n    \\\"progress\\\": 100,\\n    \\\"filePath\\\": \\\"https://xxx.csv.zst?xxx\\\",\\n    \\\"fileSize\\\": 123456,\\n    \\\"executeTime\\\": 123,\\n    \\\"logCount\\\": 123,\\n    \\\"errorMessage\\\": \\\"timeout\\\",\\n    \\\"checkSum\\\": \\\"EXSFGSDASDASDG123ASD\\\",\\n    \\\"notice\\\": \\\"\\\"\\n  }\\n}\",\"type\":\"json\"}]","title":"获取日志下载任务"},"ListDownloadJobs":{"summary":"列出指定Project下的日志下载任务。","path":"/downloadjobs","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"list","abilityTreeCode":"216707","abilityTreeNodes":["FEATUREsls1J4K38"]},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称","type":"string","required":true,"example":"ali-test-project"}},{"name":"offset","in":"query","schema":{"description":"查询开始行，默认值为0。","type":"integer","format":"int64","required":false,"example":"0"}},{"name":"size","in":"query","schema":{"description":"单次查询需要获取的日志下载任务数量","type":"integer","format":"int64","required":false,"example":"10"}},{"name":"logstore","in":"query","schema":{"description":"Logstore名称","type":"string","required":false,"example":"ali-test-logstore"}}],"responses":{"200":{"schema":{"title":"Schema of Response","description":"所有的日志下载任务信息。","type":"object","properties":{"total":{"title":"总记录数。","description":"总记录数。","type":"integer","format":"int32","example":"10"},"count":{"title":"当总结果个数大于MaxResults时，用于翻页的token。","description":"当前列出的日志下载任务数量","type":"integer","format":"int32","example":"10"},"results":{"title":"数组，返回示例目录。","description":"数组，返回日志下载任务列表","type":"array","items":{"title":"DownloadJobItemType","description":"日志下载任务信息","type":"object","properties":{"description":{"title":"描述","description":"日志下载任务描述","type":"string","example":"a download job"},"configuration":{"title":"下载配置","description":"下载配置","type":"object","properties":{"logstore":{"title":"源logstore","description":"源logstore","type":"string","example":"ali-test-logstore"},"fromTime":{"title":"起点时间戳（精确到秒）","description":"起点时间戳（精确到秒）","type":"integer","format":"int64","example":"1722409260"},"toTime":{"title":"结束时间戳（精确到秒）","description":"结束时间戳（精确到秒）","type":"integer","format":"int64","example":"1722411060"},"query":{"title":"查询语句","description":"查询语句","type":"string","example":"* | select *"},"powerSql":{"title":"是否启用powerSql","description":"是否启用powerSql","type":"boolean","example":"true"},"allowInComplete":{"description":"允许下载不精确结果","type":"string","example":"false"},"sink":{"title":"导出配置","description":"日志下载任务配置","type":"object","properties":{"compressionType":{"title":"压缩格式","description":"压缩格式","type":"string","example":"none"},"contentType":{"title":"下载文件格式","description":"下载文件格式","type":"string","example":"csv"},"roleArn":{"title":"下载使用roleArn","description":"下载使用roleArn","type":"string","example":"acs:ram::123456:role/aliyunlogimportossrole"},"bucket":{"title":"对象存储桶","description":"对象存储桶","type":"string","example":"ali-test-oss-bucket"},"prefix":{"description":"下载到用户oss bucket时的文件前缀","type":"string","example":"download/"},"type":{"description":"固定为AliyunOSS","type":"string","example":"AliyunOSS"}}}}},"displayName":{"title":"显示名称","description":"显示名称","type":"string","example":"download-123"},"executionDetails":{"title":"执行细节","description":"执行细节","type":"object","properties":{"progress":{"title":"下载进度","description":"下载进度","type":"integer","format":"int64","example":"100"},"filePath":{"title":"下载结果链接","description":"下载结果链接","type":"string","example":"https://sls-downloaded-xxxx.csv.gzip?Expiresxxx"},"fileSize":{"title":"下载文件大小","description":"下载文件大小","type":"integer","format":"int64","example":"123456"},"executeTime":{"title":"下载执行时间","description":"下载执行时间","type":"integer","format":"int64","example":"123"},"logCount":{"title":"下载日志条数","description":"下载日志条数","type":"integer","format":"int64","example":"123"},"errorMessage":{"title":"下载错误信息","description":"下载错误信息","type":"string","example":"timeout"},"checkSum":{"description":"文件ETag","type":"string","example":"ETASFGASDASQWDasd"},"notice":{"type":"string"}}},"name":{"title":"资源名称","description":"日志下载任务名称","type":"string","example":"download-123"},"createTime":{"description":"日志下载任务创建时间","type":"string","example":"1722411060"},"status":{"description":"任务状态","type":"string","example":"STARTING、RUNNING、SUCCEEDED、ERROR"}}}}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"total\\\": 10,\\n  \\\"count\\\": 10,\\n  \\\"results\\\": [\\n    {\\n      \\\"description\\\": \\\"a download job\\\",\\n      \\\"configuration\\\": {\\n        \\\"logstore\\\": \\\"ali-test-logstore\\\",\\n        \\\"fromTime\\\": 1722409260,\\n        \\\"toTime\\\": 1722411060,\\n        \\\"query\\\": \\\"* | select *\\\",\\n        \\\"powerSql\\\": true,\\n        \\\"allowInComplete\\\": \\\"false\\\",\\n        \\\"sink\\\": {\\n          \\\"compressionType\\\": \\\"none\\\",\\n          \\\"contentType\\\": \\\"csv\\\",\\n          \\\"roleArn\\\": \\\"acs:ram::123456:role/aliyunlogimportossrole\\\",\\n          \\\"bucket\\\": \\\"ali-test-oss-bucket\\\",\\n          \\\"prefix\\\": \\\"download/\\\",\\n          \\\"type\\\": \\\"AliyunOSS\\\"\\n        }\\n      },\\n      \\\"displayName\\\": \\\"download-123\\\",\\n      \\\"executionDetails\\\": {\\n        \\\"progress\\\": 100,\\n        \\\"filePath\\\": \\\"https://sls-downloaded-xxxx.csv.gzip?Expiresxxx\\\",\\n        \\\"fileSize\\\": 123456,\\n        \\\"executeTime\\\": 123,\\n        \\\"logCount\\\": 123,\\n        \\\"errorMessage\\\": \\\"timeout\\\",\\n        \\\"checkSum\\\": \\\"ETASFGASDASQWDasd\\\",\\n        \\\"notice\\\": \\\"\\\"\\n      },\\n      \\\"name\\\": \\\"download-123\\\",\\n      \\\"createTime\\\": \\\"1722411060\\\",\\n      \\\"status\\\": \\\"STARTING、RUNNING、SUCCEEDED、ERROR\\\"\\n    }\\n  ]\\n}\",\"type\":\"json\"}]","title":"列出日志下载任务"},"PutIngestProcessor":{"summary":"创建或修改写入处理器。","path":"/ingestprocessors/{processorName}","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","abilityTreeCode":"225106","abilityTreeNodes":["FEATUREslsL870A3"]},"parameters":[{"name":"project","in":"host","schema":{"title":"Project名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"processorName","in":"path","schema":{"title":"写入处理器标识。","description":"写入处理器标识。","type":"string","required":true,"example":"parse-nginx-log"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求结构体。","type":"object","properties":{"displayName":{"title":"写入处理器展示名称。","description":"写入处理器展示名称。","type":"string","required":true,"example":"Nginx日志解析"},"description":{"title":"写入处理器描述信息。","description":"写入处理器描述信息。","type":"string","required":false,"example":"将Nginx日志通过正则解析提取字段。"},"configuration":{"title":"写入处理器配置详情。","description":"写入处理器配置详情。","required":true,"$ref":"#/components/schemas/IngestProcessorConfiguration"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建或修改写入处理器"},"GetIngestProcessor":{"summary":"查询写入处理器信息。","path":"/ingestprocessors/{processorName}","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"225108","abilityTreeNodes":["FEATUREslsL870A3"]},"parameters":[{"name":"project","in":"host","schema":{"title":"Project名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"processorName","in":"path","schema":{"title":"写入处理器标识。","description":"写入处理器标识。","type":"string","required":true,"example":"parse-nginx-log"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}},"schema":{"description":"写入处理器信息。","$ref":"#/components/schemas/IngestProcessor"}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"processorName\\\": \\\"ingest-processor-1\\\",\\n  \\\"displayName\\\": \\\"字段过滤处理\\\",\\n  \\\"description\\\": \\\"过滤content字段\\\",\\n  \\\"configuration\\\": {\\n    \\\"spl\\\": \\\"* | project content\\\",\\n    \\\"parseFail\\\": \\\"keep\\\"\\n  },\\n  \\\"createTime\\\": 1717171200,\\n  \\\"updateTime\\\": 1717171200\\n}\",\"type\":\"json\"}]","title":"查询写入处理器信息"},"ListIngestProcessors":{"summary":"列出符合参数条件的写入处理器。","path":"/ingestprocessors","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"list","abilityTreeCode":"225111","abilityTreeNodes":["FEATUREslsL870A3"]},"parameters":[{"name":"project","in":"host","schema":{"title":"Project名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"processorName","in":"query","schema":{"title":"写入处理器标识。","description":"写入处理器标识。","type":"string","required":false,"example":"parse-nginx-log"}},{"name":"displayName","in":"query","schema":{"title":"写入处理器展示名称。","description":"写入处理器展示名称。","type":"string","required":false,"example":"解析Nginx日志"}},{"name":"offset","in":"query","schema":{"title":"偏移值，默认为0。","description":"偏移值，默认为0。","type":"integer","format":"int32","required":false,"example":"0","default":"0"}},{"name":"size","in":"query","schema":{"title":"数据条数，默认为200。","description":"数据条数，默认为200。","type":"integer","format":"int32","required":false,"example":"200","default":"200"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}},"schema":{"title":"Schema of Response","description":"Schema of Response","type":"object","properties":{"total":{"description":"符合查询条件的总数据条数。","type":"integer","format":"int32","example":"10"},"count":{"description":"当前返回数据条数。","type":"integer","format":"int32","example":"5"},"processors":{"description":"满足查询条件的写入处理器列表。","type":"array","items":{"description":"写入处理器信息。","$ref":"#/components/schemas/IngestProcessor"}}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"total\\\": 10,\\n  \\\"count\\\": 5,\\n  \\\"processors\\\": [\\n    {\\n      \\\"processorName\\\": \\\"ingest-processor-1\\\",\\n      \\\"displayName\\\": \\\"字段过滤处理\\\",\\n      \\\"description\\\": \\\"过滤content字段\\\",\\n      \\\"configuration\\\": {\\n        \\\"spl\\\": \\\"* | project content\\\",\\n        \\\"parseFail\\\": \\\"keep\\\"\\n      },\\n      \\\"createTime\\\": 1717171200,\\n      \\\"updateTime\\\": 1717171200\\n    }\\n  ]\\n}\",\"type\":\"json\"}]","title":"列出写入处理器"},"DeleteIngestProcessor":{"summary":"删除写入处理器。","path":"/ingestprocessors/{processorName}","methods":["delete"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete","abilityTreeCode":"225107","abilityTreeNodes":["FEATUREslsL870A3"]},"parameters":[{"name":"project","in":"host","schema":{"title":"Project名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"processorName","in":"path","schema":{"title":"写入处理器标识。","description":"写入处理器标识。","type":"string","required":true,"example":"parse-nginx-log"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除写入处理器"},"UpdateLogStoreProcessor":{"summary":"更新LogStore关联的写入处理器。","path":"/logstores/{logstore}/processor","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","riskType":"none","chargeType":"free","abilityTreeCode":"240235","abilityTreeNodes":["FEATUREslsTA08U2"]},"parameters":[{"name":"project","in":"host","schema":{"title":"Project名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"logstore","in":"path","schema":{"title":"LogStore名称。","description":"LogStore名称。","type":"string","required":true,"example":"ali-test-logstore"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求结构体。","type":"object","properties":{"processorName":{"title":"写入处理器标识。","description":"写入处理器标识。","type":"string","required":true,"example":"parse-nginx-log"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新LogStore关联的写入处理器"},"UpdateMetricStoreProcessor":{"summary":"更新MetricStore关联的写入处理器。","path":"/metricstores/{metricstore}/processor","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","riskType":"none","chargeType":"free","abilityTreeCode":"240240","abilityTreeNodes":["FEATUREslsA3NLDD"]},"parameters":[{"name":"project","in":"host","schema":{"title":"Project名称。","description":"Project名称。","type":"string","required":true,"example":"ali-test-project"}},{"name":"metricstore","in":"path","schema":{"title":"MetricStore名称。","description":"MetricStore名称。","type":"string","required":true,"example":"ali-test-metricstore"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求结构体。","type":"object","properties":{"processorName":{"title":"写入处理器标识。","description":"写入处理器标识。","type":"string","required":true,"example":"filter-metrics"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新MetricStore关联的写入处理器"},"ListAiTools":{"summary":"获取 ai 工具列表","path":"/ml/tool/list","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"list","riskType":"none","chargeType":"free","abilityTreeCode":"267809","abilityTreeNodes":["FEATUREslsC9CU66"]},"parameters":[],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"type":"array","items":{"type":"object","properties":{"fields":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string"},"option":{"type":"array","items":{"type":"string"}},"required":{"type":"boolean"},"type":{"type":"string"},"example":{"type":"string"},"description":{"type":"string"}}}},"name":{"type":"string"},"description":{"type":"string"}}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":""},"CallAiTools":{"summary":"调用 ai 工具","path":"/ml/tool/call","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"267815","abilityTreeNodes":["FEATUREslsOO5P9U"]},"parameters":[{"name":"body","in":"body","style":"json","schema":{"type":"object","properties":{"toolName":{"type":"string","required":true},"params":{"type":"object","additionalProperties":{"type":"string"}},"regionId":{"type":"string"}}}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"type":"string"}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":""},"CreateAnnotationLabel":{"summary":"创建标签表。","path":"/ml/annotationlabel","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"deprecated":false,"systemTags":{"operationType":"none"},"parameters":[{"name":"body","in":"body","schema":{"description":"请求标签表结构体。","required":false,"$ref":"#/components/schemas/MLLabelParam"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建标签"},"PutAnnotationData":{"summary":"向数据集中存入数据。","path":"/ml/annotationdataset/{datasetId}/annotationdata","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"deprecated":false,"systemTags":{"operationType":"none"},"parameters":[{"name":"datasetId","in":"path","schema":{"description":"数据集唯一标识","type":"string","required":false,"example":"cb8cc4eb51a85e823471cdb368fae9be"}},{"name":"annotationdataId","in":"query","schema":{"description":"数据的唯一标识","type":"string","required":false,"example":"2156d560fc7c01420542df92cd6365ds"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求结构体。","type":"object","properties":{"rawLog":{"description":"原始日志数据","type":"array","items":{"description":"日志数据为 key: value的 map形式","type":"object","required":false,"additionalProperties":{"type":"string","example":"[\n        {\n            \"time\": \"1694761550\",\n            \"cnt\": \"45416\",\n            \"cnt2\": \"12454\"\n        }\n]","description":"原始日志数据key value都为String"}},"required":false},"mlDataParam":{"description":"数据的结构体","required":false,"$ref":"#/components/schemas/MLDataParam"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"存储数据"},"CreateAnnotationDataSet":{"summary":"创建数据集。","path":"/ml/annotationdataset","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"deprecated":false,"systemTags":{"operationType":"none"},"parameters":[{"name":"body","in":"body","schema":{"description":"请求数据集结构体参数","required":false,"$ref":"#/components/schemas/MLDataSetParam"}},{"name":"datasetId","in":"query","schema":{"description":"数据集唯一标识","type":"string","required":false,"example":"cb8cc4eb51a85e823471cdb368fae9be"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建数据集"},"DeleteAnnotationLabel":{"summary":"删除标签表。","path":"/ml/annotationlabel/{labelId}","methods":["delete"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"deprecated":false,"systemTags":{"operationType":"none"},"parameters":[{"name":"labelId","in":"path","schema":{"description":"标签ID。","type":"string","required":false,"example":"sls_builtin_4e0aba6d9664073513e9954fb57bd799"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除标签","description":"这里删除标签只能删除非内置标签"},"DeleteAnnotationData":{"summary":"删除数据集中的数据。","path":"/ml/annotationdataset/{datasetId}/annotationdata/{annotationdataId}","methods":["delete"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"deprecated":false,"systemTags":{"operationType":"none"},"parameters":[{"name":"datasetId","in":"path","schema":{"description":"数据集唯一标识","type":"string","required":false,"example":"cb8cc4eb51a85e823471cdb368fae9be"}},{"name":"annotationdataId","in":"path","schema":{"description":"数据的唯一标识","type":"string","required":false,"example":"2156d560fc7c01420542df92cd6365ds"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除数据"},"DeleteAnnotationDataSet":{"summary":"删除数据集。","path":"/ml/annotationdataset/{datasetId}","methods":["delete"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"deprecated":false,"systemTags":{"operationType":"none"},"parameters":[{"name":"datasetId","in":"path","schema":{"description":"数据集唯一标识","type":"string","required":false,"example":"cb8cc4eb51a85e823471cdb368fae9be"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除数据集","description":"删除数据集的前提是数据集下不存在数据结构"},"UpdateAnnotationLabel":{"summary":"更新标签表。","path":"/ml/annotationlabel","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"deprecated":false,"systemTags":{"operationType":"none"},"parameters":[{"name":"body","in":"body","schema":{"description":"请求标签表结构体。","required":false,"$ref":"#/components/schemas/MLLabelParam"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新标签","description":"更新标签集，只能更新标签集中标签的命名，其他无法更新"},"UpdateAnnotationDataSet":{"summary":"更新数据集。","path":"/ml/annotationdataset/{datasetId}","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"deprecated":false,"systemTags":{"operationType":"none"},"parameters":[{"name":"datasetId","in":"path","schema":{"description":"数据集唯一标识","type":"string","required":false,"example":"cb8cc4eb51a85e823471cdb368fae9be"}},{"name":"body","in":"body","schema":{"description":"请求数据集结构体。","required":false,"$ref":"#/components/schemas/MLDataSetParam"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新数据集"},"GetAnnotationLabel":{"summary":"通过labelId拿到某个标签表。","path":"/ml/annotationlabel/{labelId}","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"deprecated":false,"systemTags":{"operationType":"none"},"parameters":[{"name":"labelId","in":"path","schema":{"description":"标签ID。","type":"string","required":false,"example":"sls_builtin_4e0aba6d9664073513e9954fb57bd799"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"标签表结构体。","$ref":"#/components/schemas/MLLabelParam"}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"labelId\\\": \\\"abbd488f6dd42d294495fb780858e83d\\\",\\n  \\\"name\\\": \\\"标签表\\\",\\n  \\\"description\\\": \\\"默认表\\\",\\n  \\\"type\\\": \\\"xxx\\\",\\n  \\\"settings\\\": [\\n    {\\n      \\\"mode\\\": \\\"builtin\\\",\\n      \\\"type\\\": \\\"Trace.RCA\\\",\\n      \\\"config\\\": \\\"\\\\\\\"\\\\\\\"\\\",\\n      \\\"version\\\": \\\"0.01\\\"\\n    }\\n  ],\\n  \\\"createTime\\\": 1695090077,\\n  \\\"lastModifyTime\\\": 1695090077\\n}\",\"type\":\"json\"}]","title":"获取标签"},"ListAnnotationLabels":{"summary":"取得标签表的列表。","path":"/ml/annotationlabel","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"deprecated":false,"systemTags":{"operationType":"none"},"parameters":[{"name":"offset","in":"query","schema":{"description":"查询开始行。","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"size","in":"query","schema":{"description":"分页查询时，设置的每页行数。","type":"integer","format":"int32","required":false,"example":"100"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"title":"Schema of Response","description":"响应返回数据","type":"object","properties":{"data":{"description":"返回的标签表结构体列表。","type":"array","items":{"description":"返回的标签表结构体。","$ref":"#/components/schemas/MLLabelParam"}},"total":{"description":"符合查询条件的数据总数。","type":"integer","format":"int32","example":"20"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"data\\\": [\\n    {\\n      \\\"labelId\\\": \\\"abbd488f6dd42d294495fb780858e83d\\\",\\n      \\\"name\\\": \\\"标签表\\\",\\n      \\\"description\\\": \\\"默认表\\\",\\n      \\\"type\\\": \\\"xxx\\\",\\n      \\\"settings\\\": [\\n        {\\n          \\\"mode\\\": \\\"builtin\\\",\\n          \\\"type\\\": \\\"Trace.RCA\\\",\\n          \\\"config\\\": \\\"\\\\\\\"\\\\\\\"\\\",\\n          \\\"version\\\": \\\"0.01\\\"\\n        }\\n      ],\\n      \\\"createTime\\\": 1695090077,\\n      \\\"lastModifyTime\\\": 1695090077\\n    }\\n  ],\\n  \\\"total\\\": 20\\n}\",\"type\":\"json\"}]","title":"获取标签列表"},"GetAnnotationData":{"summary":"通过数据唯一标识得到数据集中的数据结构体。","path":"/ml/annotationdataset/{datasetId}/annotationdata/{annotationdataId}","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"deprecated":false,"systemTags":{"operationType":"none"},"parameters":[{"name":"datasetId","in":"path","schema":{"description":"数据集唯一标识","type":"string","required":false,"example":"cb8cc4eb51a85e823471cdb368fae9be"}},{"name":"annotationdataId","in":"path","schema":{"description":"数据的唯一标识","type":"string","required":false,"example":"2156d560fc7c01420542df92cd6365ds"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"数据的结构体","$ref":"#/components/schemas/MLDataParam"}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"annotationdataId\\\": \\\"dc74b0f569126bb310e1ba6454c351ac\\\",\\n  \\\"dataHash\\\": \\\"59db060bd89468245d76416a68a510ac\\\",\\n  \\\"datasetId\\\": \\\"a9bd488f6dd42d294495fb780858e83d\\\",\\n  \\\"value\\\": \\\"xxx/xxx/xxx/\\\",\\n  \\\"valueType\\\": \\\"oss\\\",\\n  \\\"config\\\": {\\n    \\\"key\\\": \\\"simulator-nginx-demo\\\"\\n  },\\n  \\\"annotations\\\": {\\n    \\\"key\\\": {\\n      \\\"annotatedBy\\\": \\\"xxxx\\\",\\n      \\\"updateTime\\\": 1694761550,\\n      \\\"results\\\": [\\n        {\\n          \\\"key\\\": \\\"SPIKE_UP_TYPE\\\"\\n        }\\n      ]\\n    }\\n  },\\n  \\\"predictions\\\": {\\n    \\\"key\\\": {\\n      \\\"annotatedBy\\\": \\\"xxx\\\",\\n      \\\"updateTime\\\": 1694761550,\\n      \\\"results\\\": [\\n        {\\n          \\\"key\\\": \\\"SPIKE_UP_TYPE\\\"\\n        }\\n      ]\\n    }\\n  },\\n  \\\"createTime\\\": 1695094335,\\n  \\\"lastModifyTime\\\": 1695094335\\n}\",\"type\":\"json\"}]","title":"获取数据"},"ListAnnotationData":{"summary":"列出数据集中的所有数据。","path":"/ml/annotationdataset/{datasetId}/annotationdata","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"deprecated":false,"systemTags":{"operationType":"none"},"parameters":[{"name":"offset","in":"query","schema":{"description":"起始行","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"size","in":"query","schema":{"description":"分页查询时，设置的每页行数。","type":"integer","format":"int32","required":false,"example":"100"}},{"name":"datasetId","in":"path","schema":{"description":"数据集唯一标识","type":"string","required":false,"example":"cb8cc4eb51a85e823471cdb368fae9be"}}],"responses":{"200":{"schema":{"title":"Schema of Response","description":"Schema of Response","type":"object","properties":{"data":{"description":"返回的数据列表。","type":"array","items":{"description":"数据结构体。","$ref":"#/components/schemas/MLDataParam"}},"total":{"description":" 总记录数。","type":"integer","format":"int32","example":"20"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"data\\\": [\\n    {\\n      \\\"annotationdataId\\\": \\\"dc74b0f569126bb310e1ba6454c351ac\\\",\\n      \\\"dataHash\\\": \\\"59db060bd89468245d76416a68a510ac\\\",\\n      \\\"datasetId\\\": \\\"a9bd488f6dd42d294495fb780858e83d\\\",\\n      \\\"value\\\": \\\"xxx/xxx/xxx/\\\",\\n      \\\"valueType\\\": \\\"oss\\\",\\n      \\\"config\\\": {\\n        \\\"key\\\": \\\"simulator-nginx-demo\\\"\\n      },\\n      \\\"annotations\\\": {\\n        \\\"key\\\": {\\n          \\\"annotatedBy\\\": \\\"xxxx\\\",\\n          \\\"updateTime\\\": 1694761550,\\n          \\\"results\\\": [\\n            {\\n              \\\"key\\\": \\\"SPIKE_UP_TYPE\\\"\\n            }\\n          ]\\n        }\\n      },\\n      \\\"predictions\\\": {\\n        \\\"key\\\": {\\n          \\\"annotatedBy\\\": \\\"xxx\\\",\\n          \\\"updateTime\\\": 1694761550,\\n          \\\"results\\\": [\\n            {\\n              \\\"key\\\": \\\"SPIKE_UP_TYPE\\\"\\n            }\\n          ]\\n        }\\n      },\\n      \\\"createTime\\\": 1695094335,\\n      \\\"lastModifyTime\\\": 1695094335\\n    }\\n  ],\\n  \\\"total\\\": 20\\n}\",\"type\":\"json\"}]","title":"获取数据列表"},"GetAnnotationDataSet":{"summary":"取得数据集信息。","path":"/ml/annotationdataset/{datasetId}","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"deprecated":false,"systemTags":{"operationType":"none"},"parameters":[{"name":"datasetId","in":"path","schema":{"description":"数据集唯一标识","type":"string","required":false,"example":"cb8cc4eb51a85e823471cdb368fae9be"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"数据集结构体","$ref":"#/components/schemas/MLDataSetParam"}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"datasetId\\\": \\\"d9bd488f6dd42d294495fb780858e83d\\\",\\n  \\\"name\\\": \\\"sls_builtin_dataset_metric.shapeclassification.anomalydetection\\\",\\n  \\\"description\\\": \\\"数据集A\\\",\\n  \\\"dataType\\\": \\\"Metric\\\",\\n  \\\"labelId\\\": \\\"a191ae4ca615b0ccb93c211fc8a998af\\\",\\n  \\\"createTime\\\": 1695090077,\\n  \\\"lastModifyTime\\\": 1695090077,\\n  \\\"createBy\\\": \\\"sls-console\\\",\\n  \\\"settingType\\\": \\\"Metric.ShapeClassification.AnomalyDetection\\\"\\n}\",\"type\":\"json\"}]","title":"获取数据集"},"ListAnnotationDataSets":{"summary":"取得数据集结构体列表。","path":"/ml/annotationdataset","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"deprecated":false,"systemTags":{"operationType":"none"},"parameters":[{"name":"offset","in":"query","schema":{"description":"查询开始行。","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"size","in":"query","schema":{"description":"分页查询时，设置的每页行数。","type":"integer","format":"int32","required":false,"example":"100"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"title":"Schema of Response","description":"Schema of Response","type":"object","properties":{"data":{"description":"返回的数据列表。","type":"array","items":{"description":"数据集结构体","$ref":"#/components/schemas/MLDataSetParam"}},"total":{"description":"总条数。","type":"integer","format":"int32","example":"20"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"data\\\": [\\n    {\\n      \\\"datasetId\\\": \\\"d9bd488f6dd42d294495fb780858e83d\\\",\\n      \\\"name\\\": \\\"sls_builtin_dataset_metric.shapeclassification.anomalydetection\\\",\\n      \\\"description\\\": \\\"数据集A\\\",\\n      \\\"dataType\\\": \\\"Metric\\\",\\n      \\\"labelId\\\": \\\"a191ae4ca615b0ccb93c211fc8a998af\\\",\\n      \\\"createTime\\\": 1695090077,\\n      \\\"lastModifyTime\\\": 1695090077,\\n      \\\"createBy\\\": \\\"sls-console\\\",\\n      \\\"settingType\\\": \\\"Metric.ShapeClassification.AnomalyDetection\\\"\\n    }\\n  ],\\n  \\\"total\\\": 20\\n}\",\"type\":\"json\"}]","title":"获取数据集列表"},"GetMLServiceResults":{"summary":"在阿里云日志服务平台上，提供了基础数据（Log、Metric、Trace）的智能分析能力。用户调用相关模型，可以直接得到模型的分析结果。目前主要涉及：日志数据的NER任务、时间序列数据的异常检测、高延时链路数据的Span根因定位。","path":"/ml/service/{serviceName}/analysis","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"200786","abilityTreeNodes":["FEATUREsls4A0DBM"]},"parameters":[{"name":"serviceName","in":"path","schema":{"description":"服务名。","type":"string","required":false,"enumValueTitles":{"sls_builtin_service_trace_rca":"高延时trace请求链路分析的服务名","sls_builtin_service_log_struct":"LogNER的服务名","sls_builtin_service_metric_anomaly":"单维度时间序列异常检测的服务名"},"example":"sls_builtin_service_log_struct"}},{"name":"allowBuiltin","in":"query","schema":{"description":"+ true 表示请求允许使用系统内置的服务\n+ false 表示请求不允许使用系统内置的服务","type":"boolean","required":false,"enumValueTitles":{"true":"允许使用系统内置的服务","false":"不允许使用系统内置的服务名"},"example":"true"}},{"name":"version","in":"query","allowEmptyValue":true,"schema":{"description":"设置算法的版本号，不同的版本对应不同算法","type":"string","required":false,"example":"v1"}},{"name":"body","in":"body","schema":{"description":"请求结构体。","required":false,"enumValueTitles":{"others":"根据不同的serviceName有不一样的说明"},"$ref":"#/components/schemas/MLServiceAnalysisParam"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"返回的结构体","type":"object","properties":{"status":{"description":"任务的状态","type":"object","additionalProperties":{"type":"string","example":"200","description":"默认为空，表示返回所有状态的任务，支持success、fail和running状态。","enumValueTitles":{"无":"无"}},"enumValueTitles":{"无":"无"}},"data":{"description":"返回的数据。","type":"array","items":{"description":"数据集结构体","type":"object","additionalProperties":{"type":"string","example":"{'marker': ''}","description":"返回结果。"}}}},"enumValueTitles":{"无":"无"}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"status\\\": {\\n    \\\"key\\\": \\\"200\\\"\\n  },\\n  \\\"data\\\": [\\n    {\\n      \\\"key\\\": \\\"{'marker': ''}\\\"\\n    }\\n  ]\\n}\",\"type\":\"json\"}]","title":"获取指定场景任务的算法分析结果","description":"需要具备的基本权限如下\n\n```\n{\n    \"Version\": \"1\",\n    \"Statement\": [\n        {\n            \"Action\": [\n                \"log:Get*\"\n            ],\n            \"Resource\": [\n                \"acs:log:*:*:mlservice/sls_builtin_*\"\n            ],\n            \"Effect\": \"Allow\"\n        }\n    ]\n}\n```","requestParamsDescription":"在不同的情况，对于请求中的参数会不一样，具体如下：\n## 日志内容实体识别（sls_builtin_service_log_struct）\nbody.parameter相关的内容\n```\n{\n  \"is_struct\": \"true\",\n  \"use_gpu\": \"true/false\",\n  \"max_fields\": \"1\"\n}\n```\n+ is_struct 为 true 时，表示日志格式为JSON结构。目前只支持设置为 true\n+ use_gpu 表示是否使用 gpu 资源\n+ max_fields 表示当日志格式为JSON结构时，最多分析其中的几个字段，默认只分析一个字段\n\nbody.input相关的内容\n```\n[\n  {\n    \"{column_name}\": \"{column_value}\"\n  }\n]\n```\n输入的内容是一个是JSON结构数组，其中\n+ column_name 表示JSON结构的日志的某个字段名称\n+ column_value 表示JSON结构的日志的某个字段的值\n\n## 时间序列异常检测（sls_builtin_service_metric_anomaly）\nbody.parameter的相关内容\n```\n{\n  \"isOrdered\": \"true/false\",\n  \"keys\": \"[]\",\n  \"timeColumnName\": \"\",\n  \"analysisColumnNames\": \"[]\",\n  \"interval\": \"-1\"\n}\n```\n+ isOrdered 表示输入的数据是否是有序的，如果输入的序列是按照时间维度从小到大，升序排列的，设置为true，否则设置为false\n+ interval 表示时间序列的间隔大小，按照秒来描述。比如：序列是每分钟一个点，则设置为60；如果不确定序列的间隔，则设置为 -1\n+ timeColumnName 表示输入的序列中，时间维度的名称\n+ analysisColumnNames 表示输入的序列中，带分析的数值特征维度的名称，使用数组来表示，且需要将这个数组序列化成字符串\n+ keys 表示输入的数据的各列的名称，使用数组表示，且需要将这个数组序列化成字符串\n\nbody.input的相关内容\n```\n[\n  {\n    \"{column_name}\": \"{column_value}\"\n  }\n]\n```\n输入的内容是一个是数组，其中\n+ column_name 表示序列中某个字段的名称\n+ column_value 表示序列中某个字段的值的内容。当 {column_name} 等于 {timeColumnName} 时，对应的值表示的是时间大小，使用 unixtime 时间戳来表示，单位是秒\n\n## 高延时链路数据检测（sls_builtin_service_trace_rca）\nbody.parameter的相关内容\n```\n{\n  \"project\": \"\",\n  \"logstore\": \"\",\n  \"endpoint\": \"\",\n  \"role_arn\": \"\"\n}\n```\n+ project 表示待分析的Trace数据存储在SLS中的Project的名称\n+ logstore 表示待分析的Trace数据存储在SLS中的Logstore的名称\n+ endpoint 表示project所在地域的endpoint信息，这里必须使用公网域名，内网域名无法访问\n+ role_arn 表示已经对该资源进行授权的角色信息，这里务必使用 ETLRole 或者 AuditRole 的arn信息\n\nbody.input的相关内容\n```\n[\n  {\n    \"service\": \"\",\n    \"name\": \"\",\n    \"from_ts_sec\": \"\",\n    \"to_ts_sec\": \"\",\n    \"slo_ts_micro\": \"\",\n    \"batch_id\": \"\",\n    \"trace_ids\": \"[]\"\n  }\n]\n```\n输入的内容是一个是数组，切输入的数组的长度是1，其中对应的参数的含义解释如下：\n+ service 表示某个或者某一批待诊断的TraceID的服务名称，可以从logstore中获得\n+ name 表示某个或者某一批待诊断的TraceID的服务名称，可以从logstore中获得\n+ from_ts_sec 表示待分析的开始时间戳，单位是秒\n+ to_ts_sec 表示待分析的结束时间戳，单位是秒\n+ batch_id 表示当前待分析的一批TraceID的名称\n+ trace_ids 表示当前请求中对应的trace_id的列表，使用JSON序列化成字符串","responseParamsDescription":"在不同的情况，对于请求的返回值会不一样，具体如下：\n## 日志内容实体识别（sls_builtin_service_log_struct）\ndata相关的内容\n```\n[\n  {\n    \"{column_name}\": \"{column_value}\"\n  }\n]\n```\n输出内容中每一个JSON结构与输入的JSON结构日志相对应，其中\n+ column_name 表示JSON结构的日志的被分析了的某个字段名称，最多有 max_fields 个字段被分析\n+ column_value 表示JSON结构的日志的被分析了的某个字段的值，字段值中的 NER 结果被标签 <ml_ner_${ner_type}></ml_ner_${ner_type}> 包裹，其中 ${ner_type} 是具体的 NER 类型\n\n## 时间序列异常检测（sls_builtin_service_metric_anomaly）\ndata的相关内容\n```\n[\n  {\n    \"start\": \"\",\n    \"end\": \"\",\n    \"label\": \"\"\n  }\n]\n```\n+ start 表示检测出来的异常区间的开始时间\n+ end 表示检测出来的异常区间的结束时间\n+ label 表示检测出来的当前区间的异常类型\n    + SPIKE_UP_TYPE\n    + SPIKE_DOWN_TYPE\n    + TREND_UP_TYPE\n    + TREND_DOWN_TYPE\n    + MEANSHIFT_UPWARD_TYPE\n    + MEANSHIFT_DOWNWARD_TYPE\n\n## 高延时链路数据检测（sls_builtin_service_trace_rca）\ndata的相关内容\n```\n[\n  {\n    \"traceID\": \"\",\n    \"service\": \"\",\n    \"name\": \"\",\n    \"rootCauses\": \"[{}]\"\n  }\n]\n```\n+ traceID 表示待检测的traceID信息\n+ service 表示当前这个Trace的根节点的service名称\n+ name 表示当前这个Trace的根节点的name名称\n+ rootCauses 表示当前这个高延时请求的Trace中，导致高延时的span的列表信息，使用序列化后的字符串来表示。该字段的值反序列化后的结构如下：\n```\n[\n  {\n    \"spanID\": \"\",\n    \"service\": \"\",\n    \"name\": \"\",\n    \"host\": \"xxxx\",\n    \"predicateDuration\": 10\n  }\n]\n```"},"TagResources":{"summary":"为Project绑定标签，每次调用API只能为一个Project绑定标签，可一次绑定多个标签。","path":"/tag","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create"},"parameters":[{"name":"body","in":"body","style":"json","schema":{"description":"请求结构体。","type":"object","properties":{"resourceType":{"title":"资源的类型。目前取值范围：project。","description":"资源的类型。\n- project：项目。\n- logstore：日志库。\n- dashboard：仪表盘。\n- machinegroup：机器组。\n- logtailconfig：logtail配置。","type":"string","required":true,"example":"project"},"resourceId":{"title":"资源的 id 列表，可以一次为多个同类型资源打上相同的标签。","description":"资源的id列表，只允许填入1个资源，只允许为单个资源绑定标签。","type":"array","items":{"title":"资源的 id。","description":"资源ID。以日志库为例，projectName代表项目名称，#为拼接字符，logstore为日志库名称。\n- project：projectName\n- logstore：projectName#logstore\n- dashboard：projectName#dashboard\n- machinegroup：projectName#machinegroup\n- logtailconfig：projectName#logtailconfig","type":"string","required":false,"example":"ali-test-project"},"required":true},"tags":{"title":"标签列表。","description":"标签列表。一次最多支持20个标签键值对。","type":"array","items":{"description":"资源标签。","type":"object","properties":{"key":{"title":"标签的 key。","description":"标签的键。格式要求如下：\n\n- 长度在` [1,128] `之间\n- 不允许包含` \"http://\"`或者` \"https://\" `字样\n- 不允许以 `\"acs:\" `或者` \"aliyun\" `开头","type":"string","required":true,"example":"key1"},"value":{"title":"标签的 value。","description":"标签的值。格式要求如下：\n\n- 长度在` [1,128] `之间\n- 不允许包含` \"http://\" `或者` \"https://\" `字样","type":"string","required":true,"example":"value1"}},"required":false},"required":true}},"required":true}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"绑定标签","description":"### 接口说明\n\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。\n- 鉴权规则，请参见[鉴权概览](~~29049~~)。目前支持的资源包括project、logstore、dashboard、machineGroup和logtailConfig。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:TagResources`  | <br> 不同类型资源对应不同格式。<br> -`acs:log:{#regionId}:{#accountId}:project/{#ProjectName}` <br> -`acs:log:${regionName}:${accountId}:project/${projectName}/logstore/${logstoreName} `<br> -`acs:log:${regionName}:${accountId}:project/${projectName}/dashboard/${dashboardName}` <br> -`acs:log:${regionName}:${accountId}:project/${projectName}/machinegroup/${machineGroupName}` <br> -`acs:log:${regionName}:${accountId}:project/${projectName}/logtailconfig/${logtailConfigName}`|"},"UntagResources":{"summary":"为指定的资源解绑标签，现仅支持日志项目的标签，可以一次性为单个日志项目解绑多个或者全部标签。","path":"/untag","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"deprecated":false,"systemTags":{"operationType":"delete"},"parameters":[{"name":"body","in":"body","style":"json","schema":{"description":"请求结构体。","type":"object","properties":{"resourceType":{"description":"资源的类型。\n- project：项目。\n- logstore：日志库。\n- dashboard：仪表盘。\n- machinegroup：机器组。\n- logtailconfig：logtail配置。","type":"string","required":false,"enumValueTitles":{"project":"project"},"example":"project"},"resourceId":{"description":"资源的ID列表，一次只允许解绑单个资源的标签，只允许填入单个资源ID。","type":"array","items":{"description":"资源ID。以日志库为例，projectName代表项目名称，#为拼接字符，logstore为日志库名称。\n- project：projectName\n- logstore：projectName#logstore\n- dashboard：projectName#dashboard\n- machinegroup：projectName#machinegroup\n- logtailconfig：projectName#logtailconfig","type":"string","required":false,"example":"ali-test-project"},"required":true,"example":"ali-test-project"},"all":{"description":"是否解绑所有标签，默认为false。\n\n- false：仅解绑tags列表中的标签项。\n- true：解绑资源上绑定的所有标签。","type":"boolean","required":false,"example":"false"},"tags":{"description":"标签键的列表。当all为false时，仅解绑列表中的标签。","type":"array","items":{"description":"标签的键。","type":"string","required":false,"example":"key1"},"required":false}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"解绑标签","description":"### 接口说明\n\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。- 鉴权规则，请参见[鉴权概览](~~29049~~)。目前支持的资源包括project、logstore、dashboard、machineGroup和logtailConfig。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:UntagResources`  | <br> 不同类型资源对应不同格式。<br> -`acs:log:{#regionId}:{#accountId}:project/{#ProjectName}` <br> -`acs:log:${regionName}:${accountId}:project/${projectName}/logstore/${logstoreName} `<br> -`acs:log:${regionName}:${accountId}:project/${projectName}/dashboard/${dashboardName}` <br> -`acs:log:${regionName}:${accountId}:project/${projectName}/machinegroup/${machineGroupName}` <br> -`acs:log:${regionName}:${accountId}:project/${projectName}/logtailconfig/${logtailConfigName}` |"},"ListTagResources":{"summary":"列出所查询资源的标签列表，可以一次查询多个同类型的资源，也可以按标签键值过滤查询。","path":"/tags","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get"},"parameters":[{"name":"resourceType","in":"query","schema":{"title":"资源类型。目前取值范围：project。","description":"资源的类型。\n- project：项目。\n- logstore：日志库。\n- dashboard：仪表盘。\n- machinegroup：机器组。\n- logtailconfig：logtail配置。","type":"string","required":true,"enumValueTitles":{"project":"project"},"example":"project"}},{"name":"resourceId","in":"query","style":"json","schema":{"title":"查询的资源的 id 列表。resource id 与 tags 应至少存在一个。","description":"查询的资源ID列表。resourceId与tags应至少存在一个。","type":"array","items":{"title":"resource id。","description":"资源ID。以日志库为例，projectName代表项目名称，#为拼接字符，logstore为日志库名称。\n- project：projectName\n- logstore：projectName#logstore\n- dashboard：projectName#dashboard\n- machinegroup：projectName#machinegroup\n- logtailconfig：projectName#logtailconfig","type":"string","required":false,"example":"ali-test-project"},"required":false,"maxItems":1}},{"name":"tags","in":"query","style":"json","schema":{"title":"精确查找时过滤的标签键值对。resource id 与 tags 应至少存在一个。","description":"精确查询时，用于过滤的标签键值对。resourceId与tags应至少配置一个。\n\n最多设置20个tag。","type":"array","items":{"description":"用于过滤查询的标签键值对。","type":"object","properties":{"key":{"title":"精确过滤的标签的键。","description":"查询时用于过滤标签的键，例如key为` \"test-key\" `时，只会返回绑定了标签键为` \"test-key\" `的资源。","type":"string","required":true,"example":"key1"},"value":{"title":"精确过滤的标签的值。","description":"查询时用于过滤标签的值，当值为null时表示只根据key过滤。","type":"string","required":false,"example":"value1"}},"required":false},"required":false,"maxItems":20}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"title":"Schema of Response","description":"返回结构体。","type":"object","properties":{"nextToken":{"title":"下一个查询开始Token。","description":"下一个查询开始Token。","type":"string","example":"caeba0bbb2be03f84eb48b699f0a4883"},"tagResources":{"title":"返回的标签列表。","description":"返回的标签列表。","type":"array","items":{"title":"标签。","description":"绑定了标签的资源。","type":"object","properties":{"resourceId":{"title":"资源 id。","description":"资源ID。","type":"string","example":"ali-test-project"},"resourceType":{"title":"资源类型。","description":"资源类型。","type":"string","example":"project"},"tagKey":{"title":"标签的键。","description":"标签的键。","type":"string","example":"key1"},"tagValue":{"title":"标签的值。","description":"标签的值。","type":"string","example":"value1"}}}}}}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"nextToken\\\": \\\"caeba0bbb2be03f84eb48b699f0a4883\\\",\\n  \\\"tagResources\\\": [\\n    {\\n      \\\"resourceId\\\": \\\"ali-test-project\\\",\\n      \\\"resourceType\\\": \\\"project\\\",\\n      \\\"tagKey\\\": \\\"key1\\\",\\n      \\\"tagValue\\\": \\\"value1\\\"\\n    }\\n  ]\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"列出资源标签","description":"### 接口说明\n\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。\n- 鉴权规则，请参见[鉴权概览](~~29049~~)。目前支持的资源包括project、logstore、dashboard、machineGroup和logtailConfig。\n### 鉴权资源\n下表列出了API对应的授权信息。您可以在RAM权限策略语句的Action元素中添加该信息，用于为RAM用户或RAM角色授予调用此API的权限。\n|动作（Action）  | 授权策略中的资源描述方式（Resource）  |\n| :------------ | :------------ |\n| `log:ListTagResources`  | <br> 不同类型资源对应不同格式。<br> -`acs:log:{#regionId}:{#accountId}:project/{#ProjectName}` <br> -`acs:log:${regionName}:${accountId}:project/${projectName}/logstore/${logstoreName} `<br> -`acs:log:${regionName}:${accountId}:project/${projectName}/dashboard/${dashboardName}` <br> -`acs:log:${regionName}:${accountId}:project/${projectName}/machinegroup/${machineGroupName}` <br> -`acs:log:${regionName}:${accountId}:project/${projectName}/logtailconfig/${logtailConfigName}` |"},"PutProjectPolicy":{"summary":"创建Project权限策略（Policy）。","path":"/policy","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","abilityTreeCode":"157641","abilityTreeNodes":["FEATUREslsL870A3"]},"parameters":[{"name":"body","in":"body","schema":{"title":"A short description of struct","description":"请求参数，即授权策略。","type":"string","required":false,"example":"{ \t\"Version\": \"1\", \t\"Statement\": [{ \t\t\"Action\": [\"log:PostLogStoreLogs\"], \t\t\"Resource\": \"acs:log:*:*:project/exampleproject/*\", \t\t\"Effect\": \"Deny\", \t\t\"Condition\": { \t\t\t\"StringNotLike\": { \t\t\t\t\"acs:SourceVpc\": [\"vpc-*\"] \t\t\t} \t\t} \t}] }"}},{"name":"project","in":"host","schema":{"description":"Project名称。","type":"string","required":false,"example":"ali-test-project"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建Project授权策略","description":"### 接口说明\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域、Logstore名称等。如何查询，请参见[管理Project](~~48984~~)和[管理Logstore](~~48990~~)。\n- Project Policy是阿里云SLS推出的Project授权策略，您可以通过Project Policy授权其他用户访问您指定的SLS资源。\n\n    - 通过策略语法的方式配置Project Policy前，您需要先了解SLS Action、Resource以及Condition分类信息。更多信息，请参见[访问控制RAM](~~128139~~)。\n\n    - 配置Project Policy时，如果授权用户选择了匿名账号（\\*），且不包含Condition的情况下，Project Policy对Project Owner以外的所有用户生效。如果授权用户选择了匿名账号（*），且包含Condition的情况下，Project Policy对包含Project Owner在内的所有用户生效。\n\n    - 您可以添加多条Project Policy，但所有Project Policy的大小不允许超过16 KB。"},"DeleteProjectPolicy":{"summary":"删除Project的授权策略（Policy）。","path":"/policy","methods":["delete"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"deprecated":false,"systemTags":{"operationType":"delete","abilityTreeCode":"157643","abilityTreeNodes":["FEATUREslsL870A3"]},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称。","type":"string","required":false,"example":"ali-test-project"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除Project授权策略","description":"### 接口说明\n\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。"},"GetProjectPolicy":{"summary":"查询Project权限策略（Policy）。","path":"/policy","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"157642","abilityTreeNodes":["FEATUREslsL870A3"]},"parameters":[{"name":"project","in":"host","schema":{"title":"A short description of struct","description":"Project名称。","type":"string","required":false,"example":"ali-test-project"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}},"schema":{"description":"授权策略。","type":"string","example":"{ \t\"Version\": \"1\", \t\"Statement\": [{ \t\t\"Action\": [\"log:PostLogStoreLogs\"], \t\t\"Resource\": \"acs:log:*:*:project/exampleproject/*\", \t\t\"Effect\": \"Deny\", \t\t\"Condition\": { \t\t\t\"StringNotLike\": { \t\t\t\t\"acs:SourceVpc\": [\"vpc-*\"] \t\t\t} \t\t} \t}] }"}}},"responseDemo":"[{\"type\":\"json\",\"example\":\"\\\"{ \\\\t\\\\\\\"Version\\\\\\\": \\\\\\\"1\\\\\\\", \\\\t\\\\\\\"Statement\\\\\\\": [{ \\\\t\\\\t\\\\\\\"Action\\\\\\\": [\\\\\\\"log:PostLogStoreLogs\\\\\\\"], \\\\t\\\\t\\\\\\\"Resource\\\\\\\": \\\\\\\"acs:log:*:*:project/exampleproject/*\\\\\\\", \\\\t\\\\t\\\\\\\"Effect\\\\\\\": \\\\\\\"Deny\\\\\\\", \\\\t\\\\t\\\\\\\"Condition\\\\\\\": { \\\\t\\\\t\\\\t\\\\\\\"StringNotLike\\\\\\\": { \\\\t\\\\t\\\\t\\\\t\\\\\\\"acs:SourceVpc\\\\\\\": [\\\\\\\"vpc-*\\\\\\\"] \\\\t\\\\t\\\\t} \\\\t\\\\t} \\\\t}] }\\\"\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"查询Project授权策略","description":"### 接口说明\n\n- 请求语法中Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。"},"ChangeResourceGroup":{"summary":"修改Project归属的资源组。","path":"/resourcegroup","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","abilityTreeCode":"158383","abilityTreeNodes":["FEATUREslsKS6FGY"]},"parameters":[{"name":"project","in":"host","schema":{"title":"资源所属的project","description":"资源所属的Project名称。","type":"string","required":false,"example":"ali-test-project"}},{"name":"body","in":"body","style":"json","schema":{"description":"请求结构体。","type":"object","properties":{"resourceType":{"description":"资源的类型。只支持PROJECT，固定填写为PROJECT。","type":"string","required":false,"example":"PROJECT","default":"PROJECT"},"resourceId":{"description":"Project名称。","type":"string","required":true,"example":"ali-test-project"},"resourceGroupId":{"description":"[资源组ID](~~151181~~)","type":"string","required":true,"example":"rg-ae******ey"}},"required":false,"example":"ali-test-project"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"修改资源组"},"UpsertCollectionPolicy":{"summary":"创建云产品日志采集的采集规则，从而实现云产品日志的自动化采集。","path":"/collectionpolicy","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"readAndWrite","deprecated":false,"systemTags":{"operationType":"create","riskType":"none","chargeType":"free","abilityTreeCode":"192469","abilityTreeNodes":["FEATUREsls9NGCVR"]},"parameters":[{"name":"body","in":"body","style":"json","schema":{"description":"请求结构体。","type":"object","properties":{"policyName":{"description":"其命名规则如下：\n- 只能包括小写字母、数字、短划线（-）和下划线（_）。\n- 必须以字母开头。\n- 长度为 3-63 字符。","type":"string","required":true,"example":"your_log_policy","maxLength":63,"minLength":3},"productCode":{"description":"产品编码。","type":"string","required":true,"example":"oss"},"dataCode":{"description":"日志类型编码。","type":"string","required":true,"example":"access_log"},"enabled":{"description":"是否开启。","type":"boolean","required":true,"example":"true","default":"false"},"policyConfig":{"description":"采集规则配置。","type":"object","properties":{"resourceMode":{"description":"资源采集模式。如果配置all表示会采集账号下的全部实例到默认日志库，如果配置attributeMode表示会按照实例地域属性和资源标签进行过滤，如果配置instanceMode表示会按照实例ID进行过滤。","type":"string","required":true,"example":"all","default":"all","enum":["all","instanceMode","attributeMode"]},"resourceTags":{"description":"资源标签，当且仅当resourceMode为attributeMode时有效。\n如果资源标签过滤项为空，表示无需按照资源标签过滤，实例全部满足资源标签这一过滤条件，否则只采集资源标签属性全部满足该资源标签配置的实例。\n资源标签和实例所属的地域集合，共同作用，只有全部满足时才会采集该实例对象。","type":"object","required":false,"example":"{\"tag1\":\"value1\",“tag2\":\"value2\"}"},"regions":{"description":"实例所属的地域集合，当且仅当resourceMode为attributeMode时有效，支持通配符。如果地域集合过滤项为空数组，表示无需按照地域过滤，实例全部满足地域集合这一过滤条件，否则只采集地域属性在该地域集合中的实例。实例所属的地域集合和资源标签，共同作用，只有全部满足时才会采集该实例对象。","type":"array","items":{"description":"地域ID。","type":"string","required":false,"example":"cn-hangzhou"},"required":false},"instanceIds":{"description":"实例ID集合，当且仅当resourceMode为instanceMode时有效。只采集实例ID在该实例ID集合中的实例。","type":"array","items":{"description":"实例ID。","type":"string","required":false,"example":"your-test-bucket1"},"required":false}},"required":true},"centralizeEnabled":{"description":"是否开启中心化转投，默认false。","type":"boolean","required":false,"example":"false","default":"false"},"centralizeConfig":{"description":"中心化转投配置。","type":"object","properties":{"destRegion":{"description":"中心化转投目的地域。","type":"string","required":false,"example":"cn-beijing"},"destProject":{"description":"中心化转投目的项目，其地域属性应和destRegion保持一致。","type":"string","required":false,"example":"your-sls-project-in-beijing"},"destLogstore":{"description":"中心化转投目的日志库，其地域属性应和destRegion保持一致，并且归属destProject下。","type":"string","required":false,"example":"your-sls-logstore-in-beijing"},"destTTL":{"description":"中心化转投目的天数，当且仅当中心化转投目的日志库不存在首次创建时有效。","type":"integer","format":"int32","required":false,"example":"your-sls-logstore-ttl"}},"required":false},"dataConfig":{"description":"当且仅当日志类型为全局日志类型时支持配置，例如productCode为sls时的场景，表示首次配置时全局日志将被采集到对应地域等。","type":"object","properties":{"dataRegion":{"description":"当且仅当日志类型为全局日志类型时支持配置，例如productCode为sls时的场景，表示首次配置时全局日志将被采集到对应地域。","type":"string","required":false,"example":"cn-beijing"}},"required":false},"resourceDirectory":{"description":"资源目录配置，账号必须已经开通资源目录，且为管理员或者委派管理员身份","type":"object","properties":{"accountGroupType":{"description":"支持该资源目录下，全选模式all和自定义模式custom","type":"string","required":false,"example":"all,custom"},"members":{"description":"当资源目录配置为custom模式时，对应的成员账号列表","type":"array","items":{"description":"成员账号阿里云Uid","type":"string","required":false,"example":"165***********50"},"required":false}},"required":false}},"required":false}}],"responses":{"200":{"headers":{"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}},"Server":{"schema":{"title":"服务器名称。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建云产品日志采集的采集规则","description":"该接口服务地址只能是华东 2（上海）、新加坡、河源专属云汽车合规（cn-heyuan-acdr-1）。","responseParamsDescription":"错误码的详细说明请参见[管理新版日志审计规则](~~2835059~~)。"},"DeleteCollectionPolicy":{"summary":"删除云产品日志采集的采集规则。","path":"/collectionpolicy/{policyName}","methods":["delete"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"readAndWrite","deprecated":false,"systemTags":{"operationType":"delete","riskType":"none","chargeType":"free","abilityTreeCode":"194655","abilityTreeNodes":["FEATUREsls9NGCVR"]},"parameters":[{"name":"policyName","in":"path","schema":{"description":"规则名称。","type":"string","required":true,"example":"your_log_policy","maxLength":63,"minLength":3}},{"name":"productCode","in":"query","schema":{"description":"产品编码。","type":"string","required":false,"example":"oss"}},{"name":"dataCode","in":"query","schema":{"description":"日志类型编码。","type":"string","required":false,"example":"access_log"}}],"responses":{"200":{"headers":{"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"Server":{"schema":{"title":"服务器名称。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除云产品日志采集的采集规则","description":"该接口服务地址只能是华东 2（上海）、新加坡、河源专属云汽车合规（cn-heyuan-acdr-1）。","responseParamsDescription":"错误码的详细说明请参见[管理新版日志审计规则](~~2835059~~)。"},"ListCollectionPolicies":{"summary":"列出云产品日志采集的采集规则。","path":"/collectionpolicy","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"list","riskType":"none","chargeType":"free","abilityTreeCode":"192483","abilityTreeNodes":["FEATUREsls9NGCVR"]},"parameters":[{"name":"productCode","in":"query","schema":{"description":"产品的编码。","type":"string","required":false,"example":"oss"}},{"name":"dataCode","in":"query","schema":{"description":"日志类型编码。","type":"string","required":false,"example":"access_log"}},{"name":"policyName","in":"query","schema":{"description":"规则名称。","type":"string","required":false,"example":"your_log_policy\n"}},{"name":"size","in":"query","allowEmptyValue":true,"schema":{"description":"分页查询时，设置的每页行数。默认值为 50，最多返回 100 个 规则信息。","type":"integer","format":"int32","required":false,"maximum":"100","minimum":"1","example":"50","default":"50"}},{"name":"offset","in":"query","allowEmptyValue":true,"schema":{"description":"查询开始行，默认值为 0。","type":"integer","format":"int32","required":false,"minimum":"0","example":"0","default":"0"}},{"name":"instanceId","in":"query","schema":{"description":"实例ID。如果配置实例ID，则可以根据实例ID反向查询实例命中的规则，必须和productCode、dataCode结合使用。","type":"string","required":false,"example":"your-test-bucket1\n"}},{"name":"centralProject","in":"query","schema":{"description":"中心化转投目的Project。如果配置中心化转投目的Project，则可以根据Project反向查询有多少规则配置了中心化转投到该centralProejct下。","type":"string","required":false,"example":"your-central-project1"}}],"responses":{"200":{"headers":{"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}},"schema":{"title":"Schema of Response","description":"返回结构体。","type":"object","properties":{"totalCount":{"description":"总数据条数。","type":"integer","format":"int32","example":"1"},"currentCount":{"description":"当前页数据条数。","type":"integer","format":"int32","example":"1"},"data":{"description":"当前查询条件下按照分页配置返回的规则数据。","type":"array","items":{"description":"规则详情。","type":"object","properties":{"productCode":{"description":"产品编码。","type":"string","example":"oss"},"dataCode":{"description":"日志类型编码。","type":"string","example":"access_log"},"policyName":{"description":"规则名称。","type":"string","example":"your_log_policy"},"enabled":{"description":"是否开启。","type":"boolean","example":"true"},"policyConfig":{"description":"采集规则配置。","type":"object","properties":{"resourceMode":{"description":"资源采集模式。","type":"string","example":"all"},"regions":{"description":"实例所属的地域集合。","type":"array","items":{"description":"地域ID。","type":"string","example":"cn-hangzhou"}},"instanceIds":{"description":"实例ID集合。","type":"array","items":{"description":"实例ID。","type":"string","example":"your-test-bucket1\n"}},"resourceTags":{"description":"资源标签。","type":"object","example":"{\"tag1\":\"value1\",\"tag2\":\"value2\"}"}}},"centralizeEnabled":{"description":"是否开启中心化转投。","type":"boolean","example":"false"},"centralizeConfig":{"description":"中心化转投配置。","type":"object","properties":{"destRegion":{"description":"中心化转投目的地域。","type":"string","example":"cn-beijing\n"},"destProject":{"description":"中心化转投目的项目。","type":"string","example":"your-sls-project-in-beijing\n"},"destLogstore":{"description":"中心化转投目的日志库。","type":"string","example":"your-sls-logstore-in-beijing\n"},"destTTL":{"description":"中心化转投目的存储天数。","type":"integer","format":"int32","example":"0"}}},"resourceDirectory":{"description":"资源目录配置, 如有配置，否则为空","type":"object","properties":{"accountGroupType":{"description":"在该资源目录下，全选模式all或自定义模式custom","type":"string","example":"all,custom"},"members":{"description":"当资源目录配置为custom模式时，对应的成员账号列表","type":"array","items":{"description":"阿里云账号Uid","type":"string","example":"165***********50"}}}},"dataConfig":{"description":"当且仅当日志类型为全局日志类型时支持配置，例如productCode为sls时的场景。否则为空。","type":"object","properties":{"dataRegion":{"description":"当且仅当日志类型为全局日志类型时支持的配置，例如productCode为sls时的场景，表示首次配置时全局日志将被采集到对应地域。","type":"string","example":"cn-hangzhou"},"dataProject":{"description":"当且仅当日志类型为全局日志类型时有效，例如productCode为sls时的场景，如果为空，表示日志被采集到该账号在特定dataRegion下的默认专属的Project中。","type":"string","example":"\"\""}}},"internalPolicy":{"description":"是否是内置规则策略，内置规则不允许修改、删除。","type":"boolean","example":"false"},"policyUid":{"description":"规则所属的账号阿里云账号Uid，如果该规则由资源目录管理员或者资源目录委派管理员创建，则为其阿里云账号Uid。","type":"string","example":"148***********50"}}}},"statistics":{"description":"当前查询条件下返回的统计数据。","type":"array","items":{"description":"按照productCode的规则统计结果","type":"object","properties":{"productCode":{"description":"产品编码。","type":"string","example":"oss"},"policySourceList":{"description":"规则来源列表。","type":"array","items":{"description":"规则来源对象。","type":"object","properties":{"policyUid":{"description":"规则所属的账号阿里云账号Uid，如果该规则由资源目录管理员或者资源目录委派管理员创建，则为其阿里云账号Uid。","type":"string","example":"148***********50"},"policyName":{"description":"规则名称","type":"string","example":"policy_name1_from148"}}}}}}}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"totalCount\\\": 1,\\n  \\\"currentCount\\\": 1,\\n  \\\"data\\\": [\\n    {\\n      \\\"productCode\\\": \\\"oss\\\",\\n      \\\"dataCode\\\": \\\"access_log\\\",\\n      \\\"policyName\\\": \\\"your_log_policy\\\",\\n      \\\"enabled\\\": true,\\n      \\\"policyConfig\\\": {\\n        \\\"resourceMode\\\": \\\"all\\\",\\n        \\\"regions\\\": [\\n          \\\"cn-hangzhou\\\"\\n        ],\\n        \\\"instanceIds\\\": [\\n          \\\"your-test-bucket1\\\\n\\\"\\n        ],\\n        \\\"resourceTags\\\": {\\n          \\\"tag1\\\": \\\"value1\\\",\\n          \\\"tag2\\\": \\\"value2\\\"\\n        }\\n      },\\n      \\\"centralizeEnabled\\\": false,\\n      \\\"centralizeConfig\\\": {\\n        \\\"destRegion\\\": \\\"cn-beijing\\\\n\\\",\\n        \\\"destProject\\\": \\\"your-sls-project-in-beijing\\\\n\\\",\\n        \\\"destLogstore\\\": \\\"your-sls-logstore-in-beijing\\\\n\\\",\\n        \\\"destTTL\\\": 0\\n      },\\n      \\\"resourceDirectory\\\": {\\n        \\\"accountGroupType\\\": \\\"all,custom\\\",\\n        \\\"members\\\": [\\n          \\\"165***********50\\\"\\n        ]\\n      },\\n      \\\"dataConfig\\\": {\\n        \\\"dataRegion\\\": \\\"cn-hangzhou\\\",\\n        \\\"dataProject\\\": \\\"\\\\\\\"\\\\\\\"\\\"\\n      },\\n      \\\"internalPolicy\\\": false,\\n      \\\"policyUid\\\": \\\"148***********50\\\"\\n    }\\n  ],\\n  \\\"statistics\\\": [\\n    {\\n      \\\"productCode\\\": \\\"oss\\\",\\n      \\\"policySourceList\\\": [\\n        {\\n          \\\"policyUid\\\": \\\"148***********50\\\",\\n          \\\"policyName\\\": \\\"policy_name1_from148\\\"\\n        }\\n      ]\\n    }\\n  ]\\n}\",\"type\":\"json\"}]","title":"列出云产品日志采集的采集规则","description":"该接口服务地址只能是华东 2（上海）、新加坡、河源专属云汽车合规（cn-heyuan-acdr-1）。"},"GetCollectionPolicy":{"summary":"调用GetCollectionPolicy获取对应的规则。","path":"/collectionpolicy/{policyName}","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"195429","abilityTreeNodes":["FEATUREsls9NGCVR"]},"parameters":[{"name":"policyName","in":"path","schema":{"description":"规则名称。","type":"string","required":true,"example":"your_log_policy\n","maxLength":63,"minLength":3}},{"name":"productCode","in":"query","schema":{"description":"产品编码。","type":"string","required":false,"example":"oss"}},{"name":"dataCode","in":"query","schema":{"description":"日志类型编码。","type":"string","required":false,"example":"access_log"}}],"responses":{"200":{"headers":{"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"x-log-requestid":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}}},"schema":{"title":"Schema of Response","description":"返回结构体。","type":"object","properties":{"collectionPolicy":{"description":"返回规则。","type":"object","properties":{"policyName":{"description":"规则名称。","type":"string","example":"your_log_policy"},"enabled":{"description":"是否开启。","type":"boolean","example":"true\n"},"productCode":{"description":"产品编码。","type":"string","example":"oss"},"dataCode":{"description":"日志类型编码。","type":"string","example":"access_log"},"policyConfig":{"description":"采集规则配置。","type":"object","properties":{"resourceMode":{"description":"资源采集模式。","type":"string","example":"all"},"regions":{"description":"实例所属的地域集合，支持通配符。","type":"array","items":{"description":"地域ID。","type":"string","example":"cn-hangzhou"}},"instanceIds":{"description":"实例ID集合。","type":"array","items":{"description":"实例ID。","type":"string","example":"your-test-bucket1\n"}},"resourceTags":{"description":"资源标签。","type":"object","example":"{\"tag1\":\"value1\",\"tag2\":\"value2\"}"}}},"centralizeEnabled":{"description":"是否开启中心化存储。","type":"boolean","example":"false"},"centralizeConfig":{"description":"中心化转投配置。","type":"object","properties":{"destRegion":{"description":"中心化转投目的地域。","type":"string","example":"cn-beijing\n"},"destProject":{"description":"中心化转投目的项目。","type":"string","example":"your-sls-project-in-beijing\n"},"destLogstore":{"description":"中心化转投目的日志库。","type":"string","example":"your-sls-logstore-in-beijing\n"},"destTTL":{"description":"中心化转投目的天数。","type":"integer","format":"int32","example":"0"}}},"resourceDirectory":{"description":"资源目录配置, 如有配置，否则为空","type":"object","properties":{"accountGroupType":{"description":"在该资源目录下，全选模式all或自定义模式custom","type":"string","example":"all,custom"},"members":{"description":"当资源目录配置为custom模式时，对应的成员账号列表","type":"array","items":{"description":"阿里云账号Uid","type":"string","example":"165***********50"}}}},"dataConfig":{"description":"当且仅当日志类型为全局日志类型时支持的配置，例如productCode为sls时的场景。否则为空。","type":"object","properties":{"dataRegion":{"description":"当且仅当日志类型为全局日志类型时支持的配置，例如productCode为sls时的场景，表示首次配置时全局日志将被采集到对应地域。","type":"string","example":"cn-beijing"},"dataProject":{"description":"当且仅当日志类型为全局日志类型时有效，例如productCode为sls时的场景，如果为空，表示日志被采集到该账号在特定dataRegion下的默认专属的Project中。","type":"string","example":"\"\""}}},"internalPolicy":{"description":"是否是内置规则策略，内置规则不允许修改、删除。","type":"boolean","example":"false"},"policyUid":{"description":"规则所属的账号阿里云账号Uid，如果该规则由资源目录管理员或者资源目录委派管理员创建，则为其阿里云账号Uid。","type":"string","example":"148***********50\n"}}}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"collectionPolicy\\\": {\\n    \\\"policyName\\\": \\\"your_log_policy\\\",\\n    \\\"enabled\\\": true,\\n    \\\"productCode\\\": \\\"oss\\\",\\n    \\\"dataCode\\\": \\\"access_log\\\",\\n    \\\"policyConfig\\\": {\\n      \\\"resourceMode\\\": \\\"all\\\",\\n      \\\"regions\\\": [\\n        \\\"cn-hangzhou\\\"\\n      ],\\n      \\\"instanceIds\\\": [\\n        \\\"your-test-bucket1\\\\n\\\"\\n      ],\\n      \\\"resourceTags\\\": {\\n        \\\"tag1\\\": \\\"value1\\\",\\n        \\\"tag2\\\": \\\"value2\\\"\\n      }\\n    },\\n    \\\"centralizeEnabled\\\": false,\\n    \\\"centralizeConfig\\\": {\\n      \\\"destRegion\\\": \\\"cn-beijing\\\\n\\\",\\n      \\\"destProject\\\": \\\"your-sls-project-in-beijing\\\\n\\\",\\n      \\\"destLogstore\\\": \\\"your-sls-logstore-in-beijing\\\\n\\\",\\n      \\\"destTTL\\\": 0\\n    },\\n    \\\"resourceDirectory\\\": {\\n      \\\"accountGroupType\\\": \\\"all,custom\\\",\\n      \\\"members\\\": [\\n        \\\"165***********50\\\"\\n      ]\\n    },\\n    \\\"dataConfig\\\": {\\n      \\\"dataRegion\\\": \\\"cn-beijing\\\",\\n      \\\"dataProject\\\": \\\"\\\\\\\"\\\\\\\"\\\"\\n    },\\n    \\\"internalPolicy\\\": false,\\n    \\\"policyUid\\\": \\\"148***********50\\\\n\\\"\\n  }\\n}\",\"type\":\"json\"}]","title":"获取云产品日志采集的采集规则","description":"该接口服务地址只能是华东 2（上海）、新加坡、河源专属云汽车合规（cn-heyuan-acdr-1）。"},"CreateSqlInstance":{"summary":"当您使用SQL分析时，如果数据量较大，SQL普通版无法在一次查询中完整扫描指定时间段内的所有日志，返回的结果可能不包括所有匹配的数据，增加Shard可以提升读写能力，但只对新写入的数据生效。您可以通过开启SQL独享版，增加计算资源，提升单次分析的数据量。","path":"/sqlinstance","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","riskType":"none","chargeType":"paid"},"parameters":[{"name":"project","in":"host","schema":{"description":"需要开启SQL独享版的Project名称。","type":"string","required":true}},{"name":"body","in":"body","style":"json","schema":{"description":"请求结构体。","type":"object","properties":{"cu":{"title":"独享sql能使用的最大cu","description":"CU（ComputeUnit）是SQL独享版运行过程中可以并行使用的计算核数","type":"integer","format":"int32","required":true,"example":"2"},"useAsDefault":{"title":"是否默认开启","description":"是否为Project默认开启SQL独享版。 如果为true，当前Project下的所有查询和分析操作（包括告警、仪表盘等），都使用SQL独享版。","type":"boolean","required":true}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建SQL独享实例","description":"**请确保在使用该接口前，已充分了解独享SQL的收费方式和[价格](~~223777~~)。**"},"UpdateSqlInstance":{"summary":"当您使用SQL分析时，如果数据量较大，SQL普通版无法在一次查询中完整扫描指定时间段内的所有日志，返回的结果可能不包括所有匹配的数据，增加Shard可以提升读写能力，但只对新写入的数据生效。您可以通过开启SQL独享版，增加计算资源，提升单次分析的数据量。","path":"/sqlinstance","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","riskType":"none","chargeType":"paid","abilityTreeCode":"212425","abilityTreeNodes":["FEATUREslsMYXSJS"]},"parameters":[{"name":"project","in":"host","schema":{"description":"需要开启 SQL 独享版的 Project 名称。","type":"string","required":true}},{"name":"body","in":"body","style":"json","schema":{"description":"请求结构体。","type":"object","properties":{"cu":{"title":"独享sql能使用的最大cu","description":"CU（ComputeUnit）是 SQL 独享版运行过程中可以并行使用的计算核数。","type":"integer","format":"int32","required":true,"example":"2"},"useAsDefault":{"title":"是否默认开启","description":"是否为 Project 默认开启 SQL 独享版。 如果为 true，当前 Project 下的所有查询和分析操作（包括告警、仪表盘等），都使用 SQL 独享版。","type":"boolean","required":true}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新SQL 独享实例","description":"**请确保在使用该接口前，已充分了解独享SQL的收费方式和[价格](~~223777~~)。**"},"GetSqlInstance":{"summary":"查询Project的SQL独享版本的CU数、是否为 Project 默认开启SQL独享版等信息。使用该接口前，必须先调用CreateSqlInstance或UpdateSqlInstance接口创建SQL独享版。","path":"/sqlinstance","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"none","riskType":"none","chargeType":"free","abilityTreeCode":"215092","abilityTreeNodes":["FEATUREslsMYXSJS"]},"parameters":[{"name":"project","in":"host","schema":{"description":"project名称","type":"string","required":true}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string","example":"nginx"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string","example":"application/json"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string","example":"0"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string","example":"close"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string","example":"Sun, 27 May 2018 08:25:04 GMT"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string","example":"5B0A6B60BB6EE39764D458B5"}}},"schema":{"description":"Sql独享实例","type":"array","items":{"description":"Sql独享实例","type":"object","properties":{"name":{"title":"名称","description":"统一为group1，内部参数，用户无需关注。","type":"string","example":"group1"},"cu":{"title":"独享sql能使用的最大cu","description":"独享sql能使用的最大CU。CU（ComputeUnit）是 SQL 独享版运行过程中可以并行使用的计算核数。","type":"integer","format":"int32","example":"2"},"createTime":{"title":"创建时间","description":"创建SQL独享版配置的时间。Unix时间戳。","type":"integer","format":"int32","example":"1710230272。Unix时间戳。"},"updateTime":{"title":"更新时间","description":"更新SQL独享版配置的时间。Unix时间戳。","type":"integer","format":"int32","example":"1710230272"},"useAsDefault":{"title":"是否默认开启","description":"是否为Project默认开启SQL独享版。 如果为true，当前Project下的所有查询和分析操作（包括告警、仪表盘等），都使用SQL独享版。","type":"boolean","example":"true"}}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"[\\n  {\\n    \\\"name\\\": \\\"group1\\\",\\n    \\\"cu\\\": 2,\\n    \\\"createTime\\\": 0,\\n    \\\"updateTime\\\": 1710230272,\\n    \\\"useAsDefault\\\": true\\n  }\\n]\",\"type\":\"json\"}]","title":"查询SQL 独享实例"},"OpenSlsService":{"summary":"开通日志服务。服务地址只能是华东2（上海）或新加坡。","path":"/slsservice","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","abilityTreeCode":"194669","abilityTreeNodes":["FEATUREslsMYXSJS"]},"parameters":[],"responses":{"200":{"headers":{"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}},"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"type\":\"json\",\"example\":\"{}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"开通日志服务","description":"该接口需要您已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。","requestParamsDescription":"服务地址只能是华东2（上海）或新加坡。"},"GetSlsService":{"summary":"调用GetSlsService接口获取日志服务的开通状态。服务地址只能是华东2（上海）或新加坡。","path":"/slsservice","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"194671","abilityTreeNodes":["FEATUREslsMYXSJS"]},"parameters":[],"responses":{"200":{"headers":{"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Server":{"schema":{"title":"返回响应的时间。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"响应内容长度。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}}},"schema":{"description":"响应消息体。","$ref":"#/components/schemas/serviceStatus"}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"type\":\"json\",\"example\":\"{\\n  \\\"status\\\": \\\"NotExist\\\",\\n  \\\"enabled\\\": false\\n}\",\"errorExample\":\"\"},{\"type\":\"xml\",\"example\":\"\",\"errorExample\":\"\"}]","title":"查询日志服务的开通状态","description":"该接口需要您已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。"},"CreateTicket":{"summary":"如果您需要将日志服务的查询分析页面、仪表盘页面，免密分享给其他人或者嵌入到第三方系统，可以调用CreateTicket生成ticket，然后拼接免密链接。","path":"/tickets","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","riskType":"none","chargeType":"free"},"parameters":[{"name":"expirationTime","in":"query","schema":{"description":"- 服务地址只能是华东2（上海）或新加坡，但获取的Ticket可以在各个地域使用。\n- 过期时间（秒），即内嵌页面URL链接过期时间，默认86400秒（一天），取值0~2592000秒（30天）。","type":"integer","format":"int64","required":false,"example":"86400"}},{"name":"accessTokenExpirationTime","in":"query","schema":{"description":"- 访问令牌过期时间（秒），即用户可以访问页面接口的过期时间，默认86400秒（一天），取值0~86400秒（一天）。\n- 访问令牌过期时间是accessTokenExpirationTime、expirationTime的最小值。\n- 若通过STS调用，访问令牌过期时间（即用户可以访问页面接口的时间）是accessTokenExpirationTime、expirationTime、STS过期时间的最小值。","type":"integer","format":"int64","required":false,"example":"600"}}],"responses":{"200":{"headers":{"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}},"schema":{"description":"返回结构体。","type":"object","properties":{"ticket":{"description":"免登录票据。","type":"string","example":"eyJ***************.eyJ******************.KUT****************"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"ticket\\\": \\\"eyJ***************.eyJ******************.KUT****************\\\"\\n}\",\"type\":\"json\"}]","title":"创建免登录票据"},"RefreshToken":{"summary":"通过票据刷新访问令牌，用于访问控制台接口。","path":"/token/refresh","methods":["post"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"readAndWrite","deprecated":false,"systemTags":{"operationType":"create","riskType":"none","chargeType":"free"},"parameters":[{"name":"ticket","in":"query","schema":{"description":"免登录票据。","type":"string","required":false,"example":"eyJ***************.eyJ******************.KUT****************"}},{"name":"accessTokenExpirationTime","in":"query","schema":{"description":"- 访问令牌过期时间（秒），即用户可以访问页面接口的过期时间，默认86400秒（一天），取值0~86400秒（一天）。\n- 访问令牌过期时间是accessTokenExpirationTime、expirationTime的最小值。\n- 若通过STS调用，访问令牌过期时间是accessTokenExpirationTime、expirationTime、STS过期时间的最小值。","type":"integer","format":"int64","required":false,"example":"600"}}],"responses":{"200":{"headers":{"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}},"schema":{"title":"Schema of Response","description":"Schema of Response","type":"object","properties":{"accessToken":{"title":"Id of the request","description":"访问令牌。","type":"string","example":"eyJ***************.eyJ******************.KUT****************"}}}}},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"accessToken\\\": \\\"eyJ***************.eyJ******************.KUT****************\\\"\\n}\",\"type\":\"json\"}]","title":"刷新令牌"},"DescribeRegions":{"summary":"查询可用的区域。","path":"/regions","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","riskType":"none","chargeType":"free","abilityTreeCode":"226892","abilityTreeNodes":["FEATUREslsL870A3"]},"parameters":[{"name":"language","in":"query","schema":{"title":"A short description of struct","description":"返回参数localName对应的语言。","type":"string","required":false,"enumValueTitles":{"ja":"ja","en":"en","zh":"zh"},"example":"zh"}}],"responses":{"200":{"headers":{"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"Server":{"schema":{"title":"服务器名称。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}}},"schema":{"title":"Schema of Response","description":"Schema of Response","type":"object","properties":{"regions":{"type":"array","items":{"type":"object","properties":{"region":{"description":"SLS region","type":"string"},"localName":{"description":"SLS region名称。","type":"string"},"intranetEndpoint":{"description":"SLS内网地址","type":"string"},"internetEndpoint":{"description":"SLS公网地址","type":"string"}}}}}}}},"errorCodes":{"400":[{"errorCode":"IdempotentParameterMismatch","errorMessage":"The request uses the same client token as a previous, but non-identical request. Do not reuse a client token with different requests, unless the requests are identical."}]},"staticInfo":{"returnType":"synchronous"},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"regions\\\": [\\n    {\\n      \\\"region\\\": \\\"\\\",\\n      \\\"localName\\\": \\\"\\\",\\n      \\\"intranetEndpoint\\\": \\\"\\\",\\n      \\\"internetEndpoint\\\": \\\"\\\"\\n    }\\n  ]\\n}\",\"type\":\"json\"}]"},"GetMaxComputeExport":{"summary":"获取MaxCompute投递任务信息。","path":"/maxcomputeexports/{mcExportName}","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"203462","abilityTreeNodes":["FEATUREslsQK2IBF"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project"}},{"name":"mcExportName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"export-mc-123456789-123456"}}],"responses":{"200":{"schema":{"description":"任务配置详细","$ref":"#/components/schemas/MaxComputeExport"}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"name\\\": \\\"export-general-1714033191-584993-hcl\\\",\\n  \\\"description\\\": \\\"odpsexport-demo\\\",\\n  \\\"displayName\\\": \\\"odpsexport-test\\\",\\n  \\\"configuration\\\": {\\n    \\\"logstore\\\": \\\"sls-logstore-demo\\\",\\n    \\\"roleArn\\\": \\\"acs:ram::123456789:role/aliyunlogdefaultrole\\\",\\n    \\\"sink\\\": {\\n      \\\"odpsEndpoint\\\": \\\"http://service.cn-hangzhou.maxcompute.aliyun-inc.com/api\\\",\\n      \\\"odpsTunnelEndpoint\\\": \\\"http://dt.cn-hangzhou.maxcompute.aliyun-inc.com\\\",\\n      \\\"odpsProject\\\": \\\"demo_project\\\",\\n      \\\"odpsTable\\\": \\\"demo_table\\\",\\n      \\\"odpsRolearn\\\": \\\"acs:ram::123456789:role/aliyunlogdefaultrole\\\",\\n      \\\"odpsAccessKeyId\\\": \\\"asdfghjk\\\",\\n      \\\"odpsAccessSecret\\\": \\\"esasdfghjkl\\\",\\n      \\\"partitionTimeFormat\\\": \\\"%Y_%m_%d\\\",\\n      \\\"timeZone\\\": \\\"+0800\\\",\\n      \\\"fields\\\": [\\n        \\\"'f1'\\\"\\n      ],\\n      \\\"partitionColumn\\\": [\\n        \\\"'p1'\\\"\\n      ],\\n      \\\"filterInvalid\\\": true,\\n      \\\"timeFormatType\\\": \\\"StrfTimeFormat\\\",\\n      \\\"bufferInterval\\\": \\\"1800\\\"\\n    },\\n    \\\"fromTime\\\": 1,\\n    \\\"toTime\\\": 0\\n  },\\n  \\\"createTime\\\": 1714284115,\\n  \\\"lastModifiedTime\\\": 1714284589,\\n  \\\"status\\\": \\\"RUNNING\\\",\\n  \\\"scheduleId\\\": \\\"c7f01719d9feb105fc9d8df92af62010\\\"\\n}\",\"type\":\"json\"}]","title":"获取MaxCompute投递任务","description":"- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。"},"CreateMaxComputeExport":{"summary":"创建MaxCompute投递任务。","path":"/maxcomputeexports","methods":["post"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","abilityTreeCode":"203409","abilityTreeNodes":["FEATUREslsQK2IBF"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project\n"}},{"name":"body","in":"body","style":"json","schema":{"description":"MaxCompute投递任务配置","type":"object","properties":{"name":{"description":"MaxCompute投递任务唯一标识","type":"string","required":true,"example":"export-mc-1234567890-123456\n"},"displayName":{"description":"任务显示名","type":"string","required":true,"example":"my-mc-job"},"description":{"description":"任务描述","type":"string","required":false,"example":"创建一个MaxCompute投递任务\n"},"configuration":{"description":"任务配置","required":true,"$ref":"#/components/schemas/MaxComputeExportConfiguration"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"errorCodes":{"401":[{"errorCode":"AuthorizationRequired","errorMessage":"Authorization Required"}]},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"创建MaxCompute投递任务","description":"- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。"},"DeleteMaxComputeExport":{"summary":"删除MC投递任务。","path":"/maxcomputeexports/{mcExportName}","methods":["delete"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete","abilityTreeCode":"203413","abilityTreeNodes":["FEATUREslsQK2IBF"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project"}},{"name":"mcExportName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"export-mc-1234567890-123456"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"删除MaxCompute投递任务","description":"- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。"},"ListMaxComputeExports":{"summary":"列出MC投递任务。","path":"/maxcomputeexports","methods":["get"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"list","abilityTreeCode":"203415","abilityTreeNodes":["FEATUREslsQK2IBF"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project"}},{"name":"offset","in":"query","schema":{"description":"查询开始行，默认值为0。","type":"integer","format":"int32","required":false,"example":"0"}},{"name":"size","in":"query","schema":{"description":"指定查询数量，默认值为10。","type":"integer","format":"int32","required":false,"example":"10"}},{"name":"logstore","in":"query","schema":{"description":"Logstore名称","type":"string","required":false,"example":"my-logstore"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}},"schema":{"title":"Schema of Response","description":"Schema of Response","type":"object","properties":{"total":{"description":"指定Project下所有MaxCompute投递任务数量","type":"integer","format":"int32","example":"10"},"count":{"description":"当前列出的MaxCompute投递任务数量","type":"integer","format":"int32","example":"2"},"results":{"description":"具体MaxCompute投递任务列表","type":"array","items":{"description":"任务配置详细","$ref":"#/components/schemas/MaxComputeExport"}}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{\\n  \\\"total\\\": 10,\\n  \\\"count\\\": 2,\\n  \\\"results\\\": [\\n    {\\n      \\\"name\\\": \\\"export-general-1714033191-584993-hcl\\\",\\n      \\\"description\\\": \\\"odpsexport-demo\\\",\\n      \\\"displayName\\\": \\\"odpsexport-test\\\",\\n      \\\"configuration\\\": {\\n        \\\"logstore\\\": \\\"sls-logstore-demo\\\",\\n        \\\"roleArn\\\": \\\"acs:ram::123456789:role/aliyunlogdefaultrole\\\",\\n        \\\"sink\\\": {\\n          \\\"odpsEndpoint\\\": \\\"http://service.cn-hangzhou.maxcompute.aliyun-inc.com/api\\\",\\n          \\\"odpsTunnelEndpoint\\\": \\\"http://dt.cn-hangzhou.maxcompute.aliyun-inc.com\\\",\\n          \\\"odpsProject\\\": \\\"demo_project\\\",\\n          \\\"odpsTable\\\": \\\"demo_table\\\",\\n          \\\"odpsRolearn\\\": \\\"acs:ram::123456789:role/aliyunlogdefaultrole\\\",\\n          \\\"odpsAccessKeyId\\\": \\\"asdfghjk\\\",\\n          \\\"odpsAccessSecret\\\": \\\"esasdfghjkl\\\",\\n          \\\"partitionTimeFormat\\\": \\\"%Y_%m_%d\\\",\\n          \\\"timeZone\\\": \\\"+0800\\\",\\n          \\\"fields\\\": [\\n            \\\"'f1'\\\"\\n          ],\\n          \\\"partitionColumn\\\": [\\n            \\\"'p1'\\\"\\n          ],\\n          \\\"filterInvalid\\\": true,\\n          \\\"timeFormatType\\\": \\\"StrfTimeFormat\\\",\\n          \\\"bufferInterval\\\": \\\"1800\\\"\\n        },\\n        \\\"fromTime\\\": 1,\\n        \\\"toTime\\\": 0\\n      },\\n      \\\"createTime\\\": 1714284115,\\n      \\\"lastModifiedTime\\\": 1714284589,\\n      \\\"status\\\": \\\"RUNNING\\\",\\n      \\\"scheduleId\\\": \\\"c7f01719d9feb105fc9d8df92af62010\\\"\\n    }\\n  ]\\n}\",\"type\":\"json\"}]","title":"列出MaxCompute投递任务","description":"- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。"},"StartMaxComputeExport":{"summary":"启动MaxCompute投递任务。","path":"/maxcomputeexports/{mcExportName}?action=START","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"203420","abilityTreeNodes":["FEATUREslsQK2IBF"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project"}},{"name":"mcExportName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"export-mc-1234567890-123456"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"启动MaxCompute投递任务","description":"- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。"},"StopMaxComputeExport":{"summary":"停止MC投递任务。","path":"/maxcomputeexports/{mcExportName}?action=STOP","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"none","abilityTreeCode":"203421","abilityTreeNodes":["FEATUREslsQK2IBF"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project"}},{"name":"mcExportName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"export-mc-1234567890-123456"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"停止MaxCompute投递任务","description":"- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。"},"UpdateMaxComputeExport":{"summary":"更新MaxCompute投递任务。","path":"/maxcomputeexports/{mcExportName}","methods":["put"],"schemes":["http","https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"update","abilityTreeCode":"203412","abilityTreeNodes":["FEATUREslsQK2IBF"]},"parameters":[{"name":"project","in":"host","schema":{"description":"Project名称","type":"string","required":true,"example":"my-project"}},{"name":"mcExportName","in":"path","schema":{"description":"已存在的唯一任务名称","type":"string","required":true,"example":"export-mc-1234567890-123456"}},{"name":"body","in":"body","style":"json","schema":{"description":"MaxCompute投递任务配置","type":"object","properties":{"displayName":{"description":"任务显示名","type":"string","required":true,"example":"my-mc-job"},"description":{"description":"任务描述","type":"string","required":false,"example":"更新MaxCompute投递任务"},"configuration":{"description":"任务配置","required":true,"$ref":"#/components/schemas/MaxComputeExportConfiguration"}},"required":false}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"responseDemo":"[{\"errorExample\":\"\",\"example\":\"{}\",\"type\":\"json\"}]","title":"更新MaxCompute投递任务","description":"- Host由Project名称和日志服务Endpoint构成，您需要在Host中指定Project。\n- 已创建并获取AccessKey。更多信息，请参见[访问密钥](~~29009~~)。\n\n 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维。RAM用户需具备操作日志服务资源的权限。具体操作，请参见[创建RAM用户及授权](~~47664~~)。\n- 已明确您查询日志所属的Project名称、所属地域等。如何查询，请参见[管理Project](~~48984~~)。"},"DeleteConsumeProcessor":{"summary":"DeleteConsumeProcessor","path":"/consumeprocessors/{processorName}","methods":["delete"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"delete","abilityTreeCode":"225104","abilityTreeNodes":["FEATUREslsL870A3"]},"parameters":[{"name":"project","in":"host","schema":{"type":"string","required":true}},{"name":"processorName","in":"path","schema":{"type":"string","required":true}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"}},"GetConsumeProcessor":{"summary":"GetConsumeProcessor","path":"/consumeprocessors/{processorName}","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"get","abilityTreeCode":"225109","abilityTreeNodes":["FEATUREslsL870A3"]},"parameters":[{"name":"project","in":"host","schema":{"type":"string","required":true}},{"name":"processorName","in":"path","schema":{"type":"string","required":true}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}},"schema":{"$ref":"#/components/schemas/ConsumeProcessor"}}},"staticInfo":{"returnType":"synchronous"}},"ListConsumeProcessors":{"summary":"ListConsumeProcessors","path":"/consumeprocessors","methods":["get"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":["application/json"],"operationType":"read","deprecated":false,"systemTags":{"operationType":"list","abilityTreeCode":"225118","abilityTreeNodes":["FEATUREslsL870A3"]},"parameters":[{"name":"project","in":"host","schema":{"type":"string","required":true}},{"name":"processorName","in":"query","schema":{"type":"string"}},{"name":"displayName","in":"query","schema":{"type":"string"}},{"name":"offset","in":"query","schema":{"type":"string"}},{"name":"size","in":"query","schema":{"type":"string"}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}},"schema":{"title":"Schema of Response","type":"object","properties":{"total":{"type":"integer","format":"int32"},"count":{"type":"integer","format":"int32"},"processors":{"type":"array","items":{"$ref":"#/components/schemas/ConsumeProcessor"}}}}}},"staticInfo":{"returnType":"synchronous"}},"PutConsumeProcessor":{"summary":"PutConsumeProcessor","path":"/consumeprocessors/{processorName}","methods":["put"],"schemes":["https"],"security":[{"AK":[]}],"consumes":["application/json"],"produces":[],"operationType":"write","deprecated":false,"systemTags":{"operationType":"create","abilityTreeCode":"225103","abilityTreeNodes":["FEATUREslsL870A3"]},"parameters":[{"name":"project","in":"host","schema":{"type":"string","required":true}},{"name":"processorName","in":"path","schema":{"type":"string","required":true}},{"name":"body","in":"body","style":"json","schema":{"type":"object","properties":{"displayName":{"type":"string","required":true},"description":{"type":"string"},"configuration":{"required":true,"$ref":"#/components/schemas/ConsumeProcessorConfiguration"}}}}],"responses":{"200":{"headers":{"Server":{"schema":{"title":"服务器名称。","type":"string"}},"Content-Type":{"schema":{"title":"返回的响应体的内容格式。","type":"string"}},"Content-Length":{"schema":{"title":"响应内容长度。","type":"string"}},"Connection":{"schema":{"title":"是否长链接。取值包括：  close：不是长链接，则每个HTTP请求都会重新建立TCP连接。 keep-alive：长链接，TCP连接建立后保持连接状态，节省连接所需时间和带宽。","type":"string"}},"Date":{"schema":{"title":"返回响应的时间。","type":"string"}},"x-log-requestid":{"schema":{"title":"服务端产生的标识，该请求的唯一ID。","type":"string"}}}}},"staticInfo":{"returnType":"synchronous"}}},"endpoints":[{"regionId":"cn-beijing-finance-1","endpoint":"cn-beijing-finance-1.log.aliyuncs.com"},{"regionId":"cn-qingdao","endpoint":"cn-qingdao.log.aliyuncs.com"},{"regionId":"cn-beijing","endpoint":"cn-beijing.log.aliyuncs.com"},{"regionId":"cn-zhangjiakou","endpoint":"cn-zhangjiakou.log.aliyuncs.com"},{"regionId":"cn-huhehaote","endpoint":"cn-huhehaote.log.aliyuncs.com"},{"regionId":"cn-wulanchabu","endpoint":"cn-wulanchabu.log.aliyuncs.com"},{"regionId":"cn-hangzhou","endpoint":"cn-hangzhou.log.aliyuncs.com"},{"regionId":"cn-shanghai","endpoint":"cn-shanghai.log.aliyuncs.com"},{"regionId":"cn-nanjing","endpoint":"cn-nanjing.log.aliyuncs.com"},{"regionId":"cn-fuzhou","endpoint":"cn-fuzhou.log.aliyuncs.com"},{"regionId":"cn-shenzhen","endpoint":"cn-shenzhen.log.aliyuncs.com"},{"regionId":"cn-heyuan","endpoint":"cn-heyuan.log.aliyuncs.com"},{"regionId":"cn-guangzhou","endpoint":"cn-guangzhou.log.aliyuncs.com"},{"regionId":"cn-chengdu","endpoint":"cn-chengdu.log.aliyuncs.com"},{"regionId":"cn-hongkong","endpoint":"cn-hongkong.log.aliyuncs.com"},{"regionId":"ap-northeast-1","endpoint":"ap-northeast-1.log.aliyuncs.com"},{"regionId":"ap-northeast-2","endpoint":"ap-northeast-2.log.aliyuncs.com"},{"regionId":"ap-southeast-1","endpoint":"ap-southeast-1.log.aliyuncs.com"},{"regionId":"ap-southeast-2","endpoint":"ap-southeast-2.log.aliyuncs.com"},{"regionId":"ap-southeast-3","endpoint":"ap-southeast-3.log.aliyuncs.com"},{"regionId":"ap-southeast-5","endpoint":"ap-southeast-5.log.aliyuncs.com"},{"regionId":"ap-southeast-6","endpoint":"ap-southeast-6.log.aliyuncs.com"},{"regionId":"us-east-1","endpoint":"us-east-1.log.aliyuncs.com"},{"regionId":"us-west-1","endpoint":"us-west-1.log.aliyuncs.com"},{"regionId":"eu-west-1","endpoint":"eu-west-1.log.aliyuncs.com"},{"regionId":"eu-central-1","endpoint":"eu-central-1.log.aliyuncs.com"},{"regionId":"ap-south-1","endpoint":"ap-south-1.log.aliyuncs.com"},{"regionId":"me-east-1","endpoint":"me-east-1.log.aliyuncs.com"},{"regionId":"cn-hangzhou-finance","endpoint":"cn-hangzhou-finance.log.aliyuncs.com"},{"regionId":"cn-shanghai-finance-1","endpoint":"cn-shanghai-finance-1.log.aliyuncs.com"},{"regionId":"cn-shenzhen-finance-1","endpoint":"cn-shenzhen-finance.log.aliyuncs.com"},{"regionId":"ap-southeast-7","endpoint":"ap-southeast-7.log.aliyuncs.com"},{"regionId":"me-central-1","endpoint":"me-central-1.log.aliyuncs.com"}]}